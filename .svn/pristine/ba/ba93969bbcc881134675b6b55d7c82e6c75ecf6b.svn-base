using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using CrystalDecisions.CrystalReports.Engine;
using CrystalDecisions.Shared;
using DMSClient.Models;
using DMSClient.Reports.crystal_models;
using Newtonsoft.Json;

namespace DMSClient.Controllers
{
    public class ReportController : Controller
    {
        
        public ActionResult AccountDueAdvanceReport()
        {
            return View();
        }
        public ActionResult DailySalesReport()
        {
            return View();
        }
        public void GetDailySalesReportPDF(string fromDate, string toDate, long productCategoryId, long productId)
        {

            WebClient wbClient = new WebClient();
            string downloadString = CoreRules.httpRequest() + "Report/GetDailySalesReportPDF?fromDate=" + fromDate + "&toDate=" + toDate + "&productCategoryId=" + productCategoryId + "&productId=" + productId + "";
            string apidata = wbClient.DownloadString(downloadString);
            List<DailySalesReportModel> objDailySalesTransaction = JsonConvert.DeserializeObject<List<DailySalesReportModel>>(apidata);


            using (var reportDocument = new ReportDocument())
            {

                reportDocument.Load(Server.MapPath("~/Reports/crystal_view/DailySalesReport.rpt"));

                reportDocument.SetDataSource(objDailySalesTransaction);
                reportDocument.ExportToHttpResponse(ExportFormatType.PortableDocFormat, System.Web.HttpContext.Current.Response, false, "" + DateTime.Now.ToString("dd-MM-yyyy_hh-mm_tt"));
            }
        }

        public ActionResult GetProductHistoryReport()
        {
            return View();
        }

        public void GetProductHistoryPdfReport(string fromDate, string toDate, long productCategoryId,
            long productId, long colorId)
        {

            WebClient wbClient = new WebClient();
            string downloadString = CoreRules.httpRequest() + "Report/GetProductHistoryPdfReport?fromDate=" + fromDate + "&toDate=" + toDate + "&productCategoryId=" + productCategoryId + "&productId=" + productId + "&colorId=" + colorId + "";
            string apidata = wbClient.DownloadString(downloadString);
            List<ProductHistoryReportModel> objProductHistory = JsonConvert.DeserializeObject<List<ProductHistoryReportModel>>(apidata);


            using (var reportDocument = new ReportDocument())
            {

                reportDocument.Load(Server.MapPath("~/Reports/crystal_view/ProductHistoryReport.rpt"));

                reportDocument.SetDataSource(objProductHistory);
                reportDocument.ExportToHttpResponse(ExportFormatType.PortableDocFormat, System.Web.HttpContext.Current.Response, false, "" + DateTime.Now.ToString("dd-MM-yyyy_hh-mm_tt"));
            }
        }
	}
}