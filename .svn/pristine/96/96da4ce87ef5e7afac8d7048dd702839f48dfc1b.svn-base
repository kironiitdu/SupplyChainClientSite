@{
    ViewBag.Title = "Add GRN";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }

}
<script type="text/javascript">
    var userId = @userId;
</script>
<!-- GRN with accessories -->
<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">GRN Master <input type="button" class="k-button" id="btnRefresh" name="btnRefresh" value="Refresh" /></div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="grn_no">GRN No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="grn_no" name="grn_no" class="k-textbox" disabled />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="grn_date">Receive Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="grn_date" name="grn_date" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="imei_process">IMEI Process&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <select id="imei_process" style="width: 80%;" name="imei_process">
                            <option value="excel" selected="selected">Excel Upload</option>
                            @*<option value="barcode">Barcode</option>*@
                        </select>
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="supplier_id">Supplier&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="supplier_id" name="supplier_id" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="purchase_order_master_id">PL No&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                        <input type="hidden" id="originalPoNo" name="originalPoNo" value="0">
                    </div>
                    <div class="col-md-3">
                        <input id="purchase_order_master_id" name="purchase_order_master_id" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="warehouse_id">Warehouse&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="warehouse_id" name="warehouse_id" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="lot_no">Lot No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="lot_no" name="lot_no" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="remarks">Remarks</label>
                    </div>
                    <div class="col-md-3">
                        <input id="remarks" name="remarks" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="ci_date">CI Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="ci_date" name="ci_date" disabled/>
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="payment_term">Payment Term</label>
                    </div>
                    <div class="col-md-3">
                        <input id="payment_term" name="payment_term" class="k-textbox" disabled />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="dc_no">DC No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="dc_no" name="dc_no" class="k-textbox" disabled/>
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="issue_date">Issue Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="issue_date" name="issue_date" disabled/>
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="company_id">Company&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="dropdown" name="company_id" id="company_id">
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                       
                    </div>
                    <div class="col-md-3">
                      
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-success">
        <div class="panel-heading">CI PL List</div>
        <div class="panel-body">
            <div id="ciplDetailsGrid"></div>
        </div>
    </div>
    <div class="panel panel-success">
        <div class="panel-heading">Product List</div>
        <div class="panel-body">
            <div id="listGrid">
                <div class="row">
                    <div id="poDetailsGrid"></div>
                </div>
            </div>
            <br />
            <div id="scan">
                <div class="row">
                    <div>
                        <div class="col-md-6">
                            <div class="panel panel-success">
                                <div class="panel-heading">Barcode Scaner</div>
                                <div class="panel-body" id="daynamicPanel"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="panel panel-success">
                                <div class="panel-heading">
                                    IMEI List<span id="barcodeImeiCount" style="float: right"></span>
                                    <div class="row bg-white" id="barcodeImeiSum"></div>
                                </div>
                                <div class="panel-body">
                                    <div class="row" id="imei_list" style="overflow:auto; height:150px;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="excel" class="row">
                <div class="col-md-4">
                    <div class="panel panel-success">
                        <div class="panel-heading">Upload IMEI Excel File</div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <input name="files" id="excelFile" type="file" class="k-file" style="width: 100%" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-8">
                                    <br />
                                    * Excel file must contain columns named "MODEL", "COLOR","IMEI1","IMEI2"
                                </div>
                                <div class="col-md-4">
                                    <br />
                                    <input type="button" id="uploadExcel" value="Upload" class="k-button" style="float: right" />
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-8">
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            IMEI List <span id="imei_count" style="float: right"></span>
                            <div class="row" id="excelImeiSum"></div>
                        </div>
                        <div class="panel-body">

                            <div class="row" id="excelImei" style="overflow:auto; max-height:150px; min-height: 70px;"></div>
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="group-box">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                <label for="vat_total">VAT Total</label>
                            </div>
                            <div class="col-md-3">
                                <input id="vat_total" name="vat_total" class="k-textbox" disabled />
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                <label for="tax_total">TAX Total</label>
                            </div>
                            <div class="col-md-3">
                                <input id="tax_total" name="tax_total" class="k-textbox" disabled />
                            </div>
                            <div class="col-md-1"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                <label for="total_amount_without_vattax">Total Amount</label>
                            </div>
                            <div class="col-md-3">
                                <input id="total_amount_without_vattax" name="total_amount_without_vattax" class="k-textbox" disabled />
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                <label for="total_amount_including_vattax">Total Amount (+ Vat & Tax)</label>
                            </div>
                            <div class="col-md-3">
                                <input id="total_amount_including_vattax" name="total_amount_including_vattax" class="k-textbox" disabled />
                            </div>
                            <div class="col-md-1"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                <label for="status">Status</label>
                            </div>
                            <div class="col-md-3">
                                <input id="status" name="status" class="k-textbox" value="Created" disabled />
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                <div class="col-md-3">
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
    <div class="group-box" id="btnDiv">
        <div class="row">
            <div class="col-md-12">
                <input type="button" class="k-button" id="btnSaveUser" name="btnSaveUser" value="Save GRN" />

            </div>
        </div>
    </div>
</div>

<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">
    $("#btnDiv").hide(500);
    $("#listGrid").hide(500);
    $("#scan").hide(500);
    $("#excel").hide(500);

    var listData = "";
    var skuCount = [];
    var totalSku = 0;
    

    $(document).ready(function () {

        $('#btnRefresh').click(function() {
            location.reload();
        });

        $("#ci_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "yyyy/MM/dd"
        });

        $("#issue_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "yyyy/MM/dd"
        });

        var todayDate = kendo.toString(kendo.parseDate(new Date()), 'yyyy/MM/dd');
        $("#grn_date").val(todayDate);


        var sampleData;
        var receiveSerialNoList = [];
        var counter=0;
        var imeiProcess = $("#imei_process").val();

        $('#daynamicPanel :input').live('keyup', function(e) {

            if(e.keyCode === 13)
            {
                $(this).trigger("enterKey");
                var id = this.id;
                var imei= $("#" + id + "").val();

                //alert(imei);
                //$("#imei_list>#row_").remove();
                $("#imei_list").empty();
                var receiveQty= $("#receive_qty_" + id + "").val();

                //check IMEI string contains comma(,)  or not
                if (imei.indexOf(",")>=0) {
                    var array = imei.split(',');
                    //var cartonNo = array[0];

                    //remove carton number from imei array
                    array.shift();

                    if (receiveSerialNoList.length === 0) {
                        $.each(array, function(key, value) {

                            var imeiDetails = {
                                sku_code:id,
                                product_id: $("#product_id_" + id + "").val(),
                                brand_id: $("#brand_id_" + id + "").val(),
                                color_id: $("#color_id_" + id + "").val(),
                                imei_no: value,
                                received_warehouse_id: $("#warehouse_id").val(),
                                received_date: $("#grn_date").val()
                            };

                            receiveSerialNoList.push(imeiDetails);
                            counter++;

                        });
                    } else {
                        var duplicateImeis = "";
                        $.each(array, function(obj, data) {

                            var imeiDetails = {
                                sku_code:id,
                                product_id: $("#product_id_" + id + "").val(),
                                brand_id: $("#brand_id_" + id + "").val(),
                                color_id: $("#color_id_" + id + "").val(),
                                imei_no: data,
                                received_warehouse_id: $("#warehouse_id").val(),
                                received_date: $("#grn_date").val()
                            };
                            var exist=false;
                            $.each(receiveSerialNoList, function(key , value) {

                                if (imeiDetails.imei_no === value.imei_no) {
                                    console.log("Duplicate" + imeiDetails.imei_no + "");
                                    exist=true;
                                    duplicateImeis +=+imeiDetails.imei_no+" ";
                                    return false;
                                }

                            });
                            if (!exist) {
                                receiveSerialNoList.push(imeiDetails);
                                counter++;
                            } else {
                                swal("Duplicate Product IMEI", duplicateImeis, "error");
                            }
                        });
                    }

                    if (counter == receiveQty) {
                        $("#icon_" + id + "").hide();
                        $("#icon_" + id + "").css("color", "green");
                        $("#icon_" + id + "").fadeIn("slow");
                        $("#" + id + "").val("");
                        $($("#" + id + "")).prop('disabled', true);
                        counter = 0;
                    } else {
                        $("#icon_" + id + "").hide();
                        $("#icon_" + id + "").css("color", "orange");
                        $("#icon_" + id + "").fadeIn(700);
                        $("#" + id + "").val("");
                    }

                } else {

                    if (imei.length != 15) {
                        swal("Exception", imei+' is not a valid IMEI', "error");
                        return false;
                    }

                    var imeiDetails = {
                        sku_code:id,
                        product_id: $("#product_id_" + id + "").val(),
                        brand_id: $("#brand_id_" + id + "").val(),
                        color_id: $("#color_id_" + id + "").val(),
                        imei_no: imei,
                        received_warehouse_id: $("#warehouse_id").val(),
                        received_date: $("#grn_date").val()
                    };

                    if (receiveSerialNoList.length === 0) {
                        receiveSerialNoList.push(imeiDetails);
                        //console.log(receiveSerialNoList);
                        counter++;
                    } else {
                        var exist=false;
                        $.each(receiveSerialNoList, function(key , value) {

                            if (imeiDetails.imei_no === value.imei_no) {
                                console.log("Duplicate" + imeiDetails.imei_no + "");
                                swal("Exception", "Duplicate Product IMEI :"+imei+"", "error");
                                exist=true;
                                return false;
                            }

                        });
                        if (!exist) {
                            receiveSerialNoList.push(imeiDetails);
                            counter++;
                        }else {
                            swal("Exception", "Duplicate Product IMEI :"+imei+"", "error");
                        }
                    }

                    if (counter == receiveQty) {
                        $("#icon_" + id + "").hide();
                        $("#icon_" + id + "").css("color", "green");
                        $("#icon_" + id + "").fadeIn("slow");

                        $("#" + id + "").val("");
                        $($("#" + id + "")).prop('disabled', true);
                        counter = 0;

                    } else {
                        $("#icon_" + id + "").hide();
                        $("#icon_" + id + "").css("color", "orange");
                        $("#icon_" + id + "").fadeIn(700);
                        $("#" + id + "").val("");
                    }
                }

                //var listData = "";
                //var skuCount = [];
                //var totalSku = 0;
                listData = "";
                skuCount = [];
                totalSku = 0;
                // imeiProcess = $("#imei_process").val();
                $.each(receiveSerialNoList, function(key, value) {
                    //maruf modified: 13.10.2016
                    //listData += '<div class="col-md-5" id="row_">';
                    totalSku++;
                    if (skuExistsThanUpdateCount(skuCount, value.sku_code)) {

                    } else {
                        var row = {
                            sku_code: value.sku_code,
                            sku_count: 1
                        };
                        skuCount.push(row);
                    }
                    console.log("skuCount: ");
                    console.log(skuCount);
                    // end maruf
                    listData += '<div class="col-md-5">';
                    listData += '<h6><b>'+value.sku_code+': </b>'+value.imei_no+'</h6>';
                    listData += '</div>';
                    //$("#imei_list").hide();
                    //$("#imei_list").html(listData);
                    //$("#imei_list").show(500);
                });
                $("#imei_list").html(listData);
                // displaying total count
                $("#barcodeImeiCount").text(totalSku);
                // displaying sku count
                $('#barcodeImeiSum').empty();
                for (var i = 0; i < skuCount.length; i++) {
                    $('#barcodeImeiSum').append(skuCount[i].sku_code + ': ' + skuCount[i].sku_count + ', ');
                }

                var colorName = $("#icon_" + id + "").css("color");

                if (colorName === "rgb(0, 128, 0)") {
                    $("#btnDiv").show(500);
                } else {
                    $("#btnDiv").hide(500);
                }

                //console.log(sampleData);
                //var grnDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
                //console.log(grnDetailsGrid);
                //console.log(grnDetailsGrid.length);
            }
        });

        function skuExistsThanUpdateCount(hayStack, skuCode) {
            if (!hayStack) {
                return false;
            } else {
                for (var i = 0; i < hayStack.length; i++) {
                    console.log(hayStack[i].sku_code + '==' + skuCode);
                    if (hayStack[i].sku_code == skuCode) {
                        hayStack[i].sku_count++;
                        //console.log("Quantity Updated");
                        return true;
                    }
                }
                return false;
            }
        }


        //date time picker
        $("#grn_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "dd/MM/yyyy"
        });

        //country
        $("#company_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Company ---",
            dataTextField: "company_name",
            dataValueField: "company_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllCompany", "Company")"
                }
            }
        }
        }).data("kendoComboBox");
        //warehouse list
        $("#warehouse_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAdaWarehouse", "Warehouse")"
                    }
                }
            }
        });

        //$("#warehouse_id").kendoComboBox(
        $("#warehouse_id").data("kendoComboBox").value(1);

        $("#imei_process").kendoDropDownList();
        $("#imei_process").change(function() {
            listData = "";
            skuCount = [];
            totalSku = 0;
            imeiProcess = $("#imei_process").val();

            $("#daynamicPanel").empty();
            $("#imei_list").empty();

            $("#listGrid").hide(500);
            $("#scan").hide(500);
            $("#excel").hide(500);

            $("#purchase_order_master_id").data("kendoComboBox").value("");

            //if (imeiProcess == "barcode") {
            //    $("#scan").show(500);
            //} else {
            //    $("#excel").show(500);
            //}
        });

        //supplier list
        $("#supplier_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Supplier ---",
            dataTextField: "supplier_name",
            dataValueField: "supplier_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllSuppliers", "Supplier")"
                    }
                }
            }

        });

        // On Select Event (po order number)
        function onChange(e) {
            listData = "";
            skuCount = [];
            totalSku = 0;
            receiveSerialNoList = [];
            //imeiProcess = $("#imei_process").val();

            $("#daynamicPanel").empty();
            $("#imei_list").empty();
            $("#barcodeImeiSum").empty();
            $("#barcodeImeiCount").empty();

            $("#listGrid").hide(500);
            $("#scan").hide(500);
            $("#excel").hide(500);
            $("#listGrid" ).show(500);
            if (imeiProcess == "barcode") {
                $("#scan").show(500);
            } else {
                $("#excel").show(500);
            }
            $("#vat_total").val("0");
            $("#tax_total").val("0");
            $("#total_amount_without_vattax").val("0");
            $("#total_amount_including_vattax").val("0");
            var purchaseOrderMasterId = $("#purchase_order_master_id").val();

            ciplSampleData = [];
            sampleData = [];
            //get master and details information----------------
            var ci_pl_master_id = purchaseOrderMasterId;

            $.ajax({
                type: "GET",
                url: "@UrlConfig.Action("GetCiPlByIdGet", "CiPl")?ci_pl_master_id="+ci_pl_master_id+"",
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    $("#originalPoNo").val(data.CiPlMasterData.purchase_order_master_id);
                    $("#ci_date").val(kendo.toString(kendo.parseDate(data.CiPlMasterData.ci_date, "yyyy-MM-dd"), "yyyy/MM/dd"));
                    $("#payment_term").val(data.CiPlMasterData.payment_term);
                    $("#dc_no").val(data.CiPlMasterData.dc_no);
                    $("#issue_date").val(kendo.toString(kendo.parseDate(data.CiPlMasterData.issue_date, "yyyy-MM-dd"), "yyyy/MM/dd"));

                    //----------------------------
                    for (var i = 0; i < data.CiPlDetailsList.length; i++) {
                        var poDetails = {

                            ci_pl_details_id:data.CiPlDetailsList[i].ci_pl_details_id,
                            product_id: data.CiPlDetailsList[i].product_id,
                            product_name: data.CiPlDetailsList[i].product_name,
                            has_serial: data.CiPlDetailsList[i].has_serial,
                            ci_pl_master_id:data.CiPlDetailsList[i].ci_pl_master_id,
                            quantity: data.CiPlDetailsList[i].quantity,
                            unit_price: data.CiPlDetailsList[i].unit_price,
                            amount: data.CiPlDetailsList[i].amount,
                            nw_kg_ctn: data.CiPlDetailsList[i].nw_kg_ctn,
                            gw_kg_ctn: data.CiPlDetailsList[i].gw_kg_ctn,
                            measurement: data.CiPlDetailsList[i].measurement

                        };
                        ciplSampleData.push(poDetails);
                    }

                    console.log(ciplSampleData);

                    // custom logic start

                    var sampleDataNextID = sampleData.length + 1;

                    function getIndexById(id) {
                        var idx,
                            l = sampleData.length;

                        for (var j = 0; j < l; j++) {
                            if (sampleData[j].ci_pl_details_id == id) {
                                return j;
                            }
                        }
                        return null;
                    }

                    // custom logic end

                    var ciPldataSource = new kendo.data.DataSource({
                        transport: {
                            read: function (e) {
                                // on success

                                e.success(ciplSampleData);

                                // on failure
                                //e.error("XHR response", "status code", "error message");
                            },
                            create: function (e) {

                                // assign an ID to the new item
                                e.data.ci_pl_details_id = sampleDataNextID++;
                                // save data item to the original datasource

                                var gridData = sampleData;
                                var totalNumber = gridData.length;
                                var count = 0;

                                for (var i = 0; i < totalNumber; i++) {
                                    var productId = gridData[i].product_id;
                                    if (e.data.product_id === productId) {
                                        count++;
                                    }
                                }
                                var mmm = e.data.quantity;

                                var axx= $.isNumeric(mmm);


                                if (axx==false ) {
                                    sweetAlert("Sorry...", "not a valid po quantity !!!", "warning");
                                    return false;
                                }
                                if (mmm % 1 != 0) {
                                    sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                                    return false;
                                }
                                if (e.data.quantity == 0) {
                                    sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                                    return false;
                                }
                                if (e.data.quantity == null) {
                                    sweetAlert("Sorry...", "quantity is required !!!", "warning");
                                    return false;
                                }
                                if (e.data.quantity < 0) {
                                    sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                                    return false;
                                }

                                if (count > 0) {
                                    sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                                    //e.preventDefault();
                                    return false;
                                } else {
                                    sampleData.push(e.data);
                                    e.success(e.data);
                                    console.log(sampleData);
                                    return true;
                                }

                            },
                            update: function (e) {

                                var mmm = e.data.quantity;

                                var axx= $.isNumeric(mmm);


                                if (axx==false ) {
                                    sweetAlert("Sorry...", "not a valid po quantity !!!", "warning");
                                    return false;
                                }
                                if (mmm % 1 != 0) {
                                    sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                                    return false;
                                }
                                if (e.data.quantity == 0) {
                                    sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                                    return false;
                                }
                                if (e.data.quantity == null) {
                                    sweetAlert("Sorry...", "quantity is required !!!", "warning");
                                    return false;
                                }
                                if (e.data.quantity < 0) {
                                    sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                                    return false;
                                }
                                else {
                                    sampleData[getIndexById(e.data.ci_pl_details_id)] = e.data;
                                    e.success();
                                    return true;
                                }

                            },
                            destroy: function (e) {
                                // locate item in original datasource and remove it
                                sampleData.splice(getIndexById(e.data.ci_pl_details_id), 1);
                                // on success
                                e.success();

                                $.ajax({
                                    type: "DELETE",
                                    url: "@UrlConfig.Action("DeleteCiPlDetailsById", "CiPl")?ci_pl_details_id="+e.data.ci_pl_details_id,
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        Loading(false);
                                        console.log(data);

                                    }
                                });

                            }
                        },
                        error: function (e) {
                            // handle data operation error
                            alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                        },
                        pageSize: 10,
                        batch: false,
                        schema: {
                            model: {
                                id: "ci_pl_details_id",
                                fields: {
                                    ci_pl_details_id: { editable: false, nullable: true },
                                    product_id: { field: "product_id", type: "integer" },
                                    product_name: { type: "string" },
                                    product_category_id: { field: "product_category_id" },
                                    product_category_name: { type: "string", editable: false },
                                    brand_id: { field: "brand_id", type: "integer" },
                                    brand_name: { type: "string", editable: false },
                                    unit_id: { field: "unit_id", type: "integer" },
                                    unit_name: { type: "string", editable: false },
                                    color_id: { field: "color_id", type: "integer" },
                                    color_name: { type: "string" },
                                    product_version_id: { field: "product_version_id", type: "integer" },
                                    product_version_name: { type: "string" },
                                    quantity: { type: "string" },
                                    unit_price: { type: "number" },
                                    amount: { type: "string", editable: true },
                                    nw_kg_ctn: { type: "number" },
                                    gw_kg_ctn: { type: "number" },
                                    measurement: { type: "number" }
                                }
                            }
                        }
                    });



                    $("#ciplDetailsGrid").kendoGrid({
                        dataSource: ciPldataSource,
                        pageable: true,
                        selectable: true,
                        save: function (data) {
                            var tempAmount = +data.model.quantity * +data.model.unit_price;
                            data.model.set("amount", tempAmount);
                        },

                        edit: function (e) {
                            $('input[name="amount"]').attr('readonly', 'readonly');
                            $('input[name="vat_amount"]').attr('readonly', 'readonly');
                        },
                        cancel: function(data) {
                            var tempAmount = +data.model.quantity * +data.model.unit_price;
                            data.model.set("amount", tempAmount);
                            console.log(sampleData);

                        },
                        columns: [
                            { field: "product_id", title: "Product", template: "#= product_name #", editor: ciplproductDropDownEditor, width: "50px" },
                            { field: "quantity", title: "CI Quantity", width: "50px" },
                            //{ field: "unit_price", title: "Price", width: "50px" },
                            //{ field: "amount", title: "Amount", width: "50px" },
                            { field: "nw_kg_ctn", title: "NW KG/CTN", width: "50px" },
                            { field: "gw_kg_ctn", title: "GW KG/CTN", width: "50px" },
                            { field: "measurement", title: "Measurement", width: "50px" }
                        ],
                        editable: "inline"
                    });



                    //template for product comboBox
                    function ciplproductDropDownEditor(container, options) {
                        jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoComboBox({
                                autoBind: false,
                                placeholder: "-Select-",
                                dataSource: {
                                    transport: {
                                        read: {
                                            url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                            type: "GET"
                                        }
                                    }

                                },

                                change: function (e) {
                                    var dataItem = this.dataItem(e.item);

                                    console.log(dataItem.product_name);
                                    var grid = $("#poDetailsGrid").data("kendoGrid");
                                    var sel = grid.select();
                                    var sel_idx = sel.index();
                                    var gridData = grid.dataSource.data();
                                    gridData[sel_idx].product_id = dataItem.product_id,
                                    gridData[sel_idx].product_name = dataItem.product_name;
                                    gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                    gridData[sel_idx].product_category_name = dataItem.product_category_name;
                                    gridData[sel_idx].brand_id = dataItem.brand_id;
                                    gridData[sel_idx].brand_name = dataItem.brand_name;
                                    gridData[sel_idx].unit_id = dataItem.unit_id;
                                    gridData[sel_idx].unit_name = dataItem.unit_name;

                                }
                            });
                    }
                    //-----------------------------

                    $.ajax({
                        type: "POST",
                        url: "@UrlConfig.Action("GetPurchaseOrderById", "PurchaseOrder")",
                        data: {
                            purchase_order_master_id: data.CiPlMasterData.purchase_order_master_id
                        },
                        dataType: "json",
                        success: function (data) {
                            Loading(false);

                            // $("#vat_total").val(data.PoMasterData.vat_total);
                            // $("#tax_total").val(data.PoMasterData.tax_total);
                            // $("#total_amount_without_vattax").val(data.PoMasterData.total_amount_without_vattax);
                            // $("#total_amount_including_vattax").val(data.PoMasterData.total_amount_including_vattax);

                            for (var i = 0; i < data.PoDetailsList.length; i++) {
                                var poDetails = {
                                    //order_no: poDetailsList[i].order_no,
                                    purchase_order_details_id: data.PoDetailsList[i].purchase_order_details_id,
                                    product_id: data.PoDetailsList[i].product_id,
                                    product_name: data.PoDetailsList[i].product_name,
                                    purchase_order_master_id: data.PoDetailsList[i].purchase_order_master_id,
                                    unit_id: data.PoDetailsList[i].unit_id,
                                    unit_name: data.PoDetailsList[i].unit_name,
                                    unit_price: data.PoDetailsList[i].unit_price,
                                    pi_quantity: (data.PoDetailsList[i].pi_quantity - data.PoDetailsList[i].receive_qty),
                                    receive_qty: 0,
                                    amount: 0,//data.PoDetailsList[i].amount,
                                    brand_id: data.PoDetailsList[i].brand_id,
                                    brand_name: data.PoDetailsList[i].brand_name,
                                    color_id: data.PoDetailsList[i].color_id,
                                    color_name: data.PoDetailsList[i].color_name,
                                    product_version_id: data.PoDetailsList[i].product_version_id,
                                    product_version_name: data.PoDetailsList[i].product_version_name,
                                    vat_amount:0,// data.PoDetailsList[i].vat_amount,
                                    tax_amount: 0,//data.PoDetailsList[i].tax_amount,
                                    line_total: 0,//data.PoDetailsList[i].line_total,
                                    size_id: data.PoDetailsList[i].size_id,
                                    size_name: data.PoDetailsList[i].size_name,
                                    status: data.PoDetailsList[i].status,
                                    vat_pcnt: data.PoDetailsList[i].vat_pcnt,
                                    tax_pcnt: data.PoDetailsList[i].tax_pcnt,
                                    product_category_id: data.PoDetailsList[i].product_category_id,
                                    has_serial: data.PoDetailsList[i].has_serial

                                };
                                sampleData.push(poDetails);
                            }
                            console.log(sampleData);

                            // productList Grid---------------------
                            // custom logic start

                            // var sampleDataNextID = sampleData.length + 1;

                            function getIndexById(id) {
                                var l = sampleData.length;

                                for (var j = 0; j < l; j++) {
                                    if (sampleData[j].purchase_order_details_id == id) {
                                        return j;
                                    }
                                }
                                return null;
                            }

                            // custom logic end

                            var dataSource = new kendo.data.DataSource({
                                transport: {
                                    read: function (e) {
                                        // on success
                                        e.success(sampleData);
                                    },
                                    create: function (e) {

                                    },
                                    update: function (e) {
                                        // locate item in original datasource and update it

                                        var strProductName = e.data.product_name;
                                        strProductName=strProductName.replace('"', '');

                                        var productColorName = strProductName +"_"+ e.data.color_name;

                                        productColorName=productColorName.replace(/ /g,"_");

                                        if ($("#grn_date").val() == "") {
                                            sweetAlert("Sorry...", "Receive Date is empty", "error");
                                            return false;
                                        }
                                        if ($("#warehouse_id").val() == "") {
                                            sweetAlert("Sorry...", "Please Select Warehouse", "error");
                                            return false;
                                        }
                                        if (e.data.receive_qty === null) {
                                            sweetAlert("Sorry...", "Receive quantity is empty", "error");
                                            return false;
                                        } else {
                                            if (e.data.receive_qty>e.data.pi_quantity) {
                                                sweetAlert("Sorry...", "Receive quantity must less then pi quantity", "error");
                                                return false;
                                            }
                                            else if($("#"+productColorName).length>0 && e.data.receive_qty > 0) {
                                                sampleData[getIndexById(e.data.purchase_order_details_id)] = e.data;
                                                receiveSerialNoList = receiveSerialNoList.filter(function(el) {
                                                    return el.product_id != e.data.product_id || el.color_id != e.data.color_id;
                                                });
                                                //console.log(receiveSerialNoList);

                                                $("#daynamicPanel>#row_"+productColorName).remove();

                                                e.success();
                                                var listData = "";
                                                if (imeiProcess == "barcode") {
                                                    if (e.data.receive_qty > 0) {
                                                        listData += '<div class="row" id="row_' + productColorName + '">';
                                                        listData += '<div class="col-md-12">';
                                                        listData += '<div class="col-md-3">';
                                                        listData += '<label for="' + productColorName + '" >' + productColorName + '</label>';
                                                        listData += '</div>';
                                                        listData += '<div class="col-md-8">';
                                                        listData += '<input id="' + productColorName + '" name="' + productColorName + '" class="k-textbox" />';
                                                        listData += '<input id="receive_qty_' + productColorName + '" type="hidden" name="receive_qty_' + productColorName + '" value='+e.data.receive_qty+'>';
                                                        listData += '<input id="product_id_' + productColorName + '" type="hidden" name="product_id_' + productColorName + '" value='+e.data.product_id+'>';
                                                        listData += '<input id="brand_id_' + productColorName + '" type="hidden" name="brand_id_' + productColorName + '" value='+e.data.brand_id+'>';
                                                        listData += '<input id="color_id_' + productColorName + '" type="hidden" name="color_id_' + productColorName + '" value='+e.data.color_id+'>';
                                                        listData += '</div>';
                                                        listData += '<div class="col-md-1">';
                                                        listData += '<i class="fa fa-check-circle fa-3x" id="icon_' + productColorName + '" style="color: gainsboro" aria-hidden="true"></i>';
                                                        listData += '</div>';
                                                        listData += '</div>';
                                                        listData += '</div>';
                                                        $("#daynamicPanel").hide();
                                                        $("#daynamicPanel").append(listData);
                                                        $("#daynamicPanel").show(500);
                                                        return true;
                                                    } else {
                                                        $("#daynamicPanel").hide();
                                                        $("#daynamicPanel>#row_"+productColorName).remove();
                                                        $("#imei_list").empty();
                                                        $("#daynamicPanel").show(500);
                                                        receiveSerialNoList= receiveSerialNoList.filter(function(el) { return (el.product_id !== ""+e.data.product_id+"" && el.color_id !== ""+e.data.color_id+""); });
                                                        //console.log(receiveSerialNoList.length);
                                                        return true;
                                                    }
                                                } else {
                                                    return false;
                                                }
                                            }
                                            else {
                                                sampleData[getIndexById(e.data.purchase_order_details_id)] = e.data;
                                                e.success();
                                                var listData = "";
                                                if (imeiProcess == "barcode") {
                                                    if (e.data.receive_qty > 0) {
                                                        listData += '<div class="row" id="row_' + productColorName + '">';
                                                        listData += '<div class="col-md-12">';
                                                        listData += '<div class="col-md-3">';
                                                        listData += '<label for="' + productColorName + '" >' + productColorName + '</label>';
                                                        listData += '</div>';
                                                        listData += '<div class="col-md-8">';
                                                        listData += '<input id="' + productColorName + '" name="' + productColorName + '" class="k-textbox" />';
                                                        listData += '<input id="receive_qty_' + productColorName + '" type="hidden" name="receive_qty_' + productColorName + '" value=' + e.data.receive_qty + '>';
                                                        listData += '<input id="product_id_' + productColorName + '" type="hidden" name="product_id_' + productColorName + '" value=' + e.data.product_id + '>';
                                                        listData += '<input id="brand_id_' + productColorName + '" type="hidden" name="brand_id_' + productColorName + '" value=' + e.data.brand_id + '>';
                                                        listData += '<input id="color_id_' + productColorName + '" type="hidden" name="color_id_' + productColorName + '" value=' + e.data.color_id + '>';
                                                        listData += '</div>';
                                                        listData += '<div class="col-md-1">';
                                                        listData += '<i class="fa fa-check-circle fa-3x" id="icon_' + productColorName + '" style="color: gainsboro" aria-hidden="true"></i>';
                                                        listData += '</div>';
                                                        listData += '</div>';
                                                        listData += '</div>';

                                                        $("#daynamicPanel").hide();
                                                        $("#daynamicPanel").append(listData);
                                                        $("#daynamicPanel").show(500);
                                                        return true;
                                                    } else {
                                                        $("#daynamicPanel").hide();
                                                        $("#daynamicPanel>#row_" + productColorName).remove();
                                                        $("#imei_list").empty();
                                                        $("#daynamicPanel").show(500);
                                                        receiveSerialNoList = receiveSerialNoList.filter(function(el) { return (el.product_id !== "" + e.data.product_id + "" && el.color_id !== "" + e.data.color_id + ""); });
                                                        console.log(receiveSerialNoList.length);
                                                        return true;
                                                    }
                                                }
                                                else {
                                                    return false;
                                                }
                                            }
                                        }
                                    },
                                    destroy: function (e) {
                                    }
                                },
                                error: function (e) {
                                    // handle data operation error
                                    alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                                },
                                pageSize: 10,
                                batch: false,
                                schema: {
                                    model: {
                                        id: "purchase_order_details_id",
                                        fields: {
                                            purchase_order_details_id: { editable: false, nullable: true },
                                            purchase_order_master_id:{ field: "purchase_order_master_id", type: "integer" },
                                            product_id: { field: "product_id", type: "integer" },
                                            product_name: { type: "string" },
                                            product_category_id: { field: "product_category_id" },
                                            product_category_name: { type: "string", editable: false },
                                            brand_id: { field: "brand_id", type: "integer" },
                                            brand_name: { type: "string", editable: false },
                                            unit_id: { field: "unit_id", type: "integer" },
                                            unit_name: { type: "string", editable: false },
                                            color_id: { field: "color_id", type: "integer" },
                                            color_name: { type: "string" },
                                            product_version_id: { field: "product_version_id", type: "integer" },
                                            product_version_name: { type: "string" },
                                            size_id: { field: "size_id", type: "integer" },
                                            size_name: { type: "string" },
                                            pi_quantity: { type: "string" },
                                            receive_qty:{ type: "number" },
                                            unit_price: { type: "number" },
                                            amount: { type: "string", editable: true },
                                            vat_pcnt: { type: "string" },
                                            vat_amount: { type: "string", editable: true },
                                            tax_pcnt: { type: "string" },
                                            tax_amount: { type: "string", editable: true },
                                            line_total: { type: "string", editable: true },
                                            has_serial: { type: "boolean", editable: false }
                                        }
                                    }
                                }
                            });



                            $("#poDetailsGrid").kendoGrid({
                                dataSource: dataSource,
                                pageable: true,
                                selectable: true,
                                save: function (data) {

                                    var tempAmount = +data.model.receive_qty * +data.model.unit_price;
                                    data.model.set("amount", tempAmount);

                                    var tempVatAmount = (+data.model.amount * +data.model.vat_pcnt) / 100;
                                    data.model.set("vat_amount", tempVatAmount);

                                    var tempTaxAmount = (+data.model.amount * +data.model.tax_pcnt) / 100;
                                    data.model.set("tax_amount", tempTaxAmount);

                                    var lineTotal = +data.model.amount + +data.model.vat_amount + +data.model.tax_amount;
                                    data.model.set("line_total", lineTotal);

                                    var entityGrid = $("#poDetailsGrid").data("kendoGrid");
                                    var gridData = entityGrid.dataSource.data();
                                    var totalNumber = gridData.length;

                                    var vatTotal = 0;
                                    var taxTotal = 0;
                                    var totalAmount = 0;
                                    var totalAmountIncVatTax = 0;
                                    var serializedQty = 0;
                                    var nonSerializedQty = 0;
                                    for (var i = 0; i < totalNumber; i++) {

                                        var receiveQuantity=gridData[i].receive_qty;

                                        if (receiveQuantity > 0) {
                                            vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                                            taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                                            totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                                            totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                                            if (gridData[i].has_serial == true) {
                                                serializedQty += receiveQuantity;
                                            } else {
                                                nonSerializedQty += receiveQuantity;
                                            }
                                        }

                                    }
                                    if (serializedQty > 0 || nonSerializedQty > 0) {
                                        $("#btnDiv").show(500);
                                    } else {
                                        $("#btnDiv").hide(500);
                                    }
                                    $("#vat_total").val(vatTotal);
                                    $("#tax_total").val(taxTotal);
                                    $("#total_amount_without_vattax").val(totalAmount);
                                    $("#total_amount_including_vattax").val(totalAmountIncVatTax);


                                },
                                edit: function (e) {
                                    $('input[name="amount"]').attr('readonly', 'readonly');
                                    $('input[name="vat_amount"]').attr('readonly', 'readonly');
                                    $('input[name="tax_amount"]').attr('readonly', 'readonly');
                                    $('input[name="line_total"]').attr('readonly', 'readonly');
                                    $('input[name="pi_quantity"]').attr('readonly', 'readonly');
                                    $('input[name="vat_pcnt"]').attr('readonly', 'readonly');
                                    $('input[name="tax_pcnt"]').attr('readonly', 'readonly');
                                },
                                cancel: function(data) {

                                    var tempAmount = +data.model.pi_quantity * +data.model.unit_price;
                                    data.model.set("amount", tempAmount);

                                    var tempVatAmount = (+data.model.amount * +data.model.vat_pcnt) / 100;
                                    data.model.set("vat_amount", tempVatAmount);

                                    var tempTaxAmount = (+data.model.amount * +data.model.tax_pcnt) / 100;
                                    data.model.set("tax_amount", tempTaxAmount);

                                    var lineTotal = +data.model.amount + +data.model.vat_amount + +data.model.tax_amount;
                                    data.model.set("line_total", lineTotal);



                                    var gridData = sampleData;
                                    var totalNumber = gridData.length;

                                    var vatTotal = 0;
                                    var taxTotal = 0;
                                    var totalAmount = 0;
                                    var totalAmountIncVatTax = 0;
                                    var serializedProduct = 0;
                                    var nonSerializedQty = 0;

                                    for (var i = 0; i < totalNumber; i++) {
                                        var receiveQuantity=gridData[i].receive_qty;

                                        if (receiveQuantity > 0) {
                                            vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                                            taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                                            totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                                            totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                                            if (gridData[i].has_serial == true) {
                                                serializedProduct++;
                                            } else {
                                                nonSerializedQty += receiveQuantity;
                                            }
                                        }
                                    }
                                    if (serializedProduct == 0 && nonSerializedQty > 0) {
                                        $("#btnDiv").show(500);
                                    }
                                    else {
                                        $("#btnDiv").hide(500);
                                    }
                                    $("#vat_total").val(vatTotal);
                                    $("#tax_total").val(taxTotal);
                                    $("#total_amount_without_vattax").val(totalAmount);
                                    $("#total_amount_including_vattax").val(totalAmountIncVatTax);

                                    console.log(sampleData);

                                },
                                columns: [
                                    { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "100px" },
                                    { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "100px" },
                                    { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "100px" },
                                    { field: "pi_quantity", title: "PI Quantity", width: "100px" },
                                    { field: "receive_qty", title: "Receive Quantity", width: "100px" },
                                    //{ field: "unit_price", title: "Price", width: "50px" },
                                    //{ field: "amount", title: "Amount", width: "50px" },
                                    //{ field: "vat_pcnt", title: "VAT %", width: "50px" },
                                    //{ field: "vat_amount", title: "VAT Amount", width: "50px" },
                                    //{ field: "tax_pcnt", title: "TAX %", width: "50px" },
                                    //{ field: "tax_amount", title: "TAX Amount", width: "50px" },
                                    //{ field: "line_total", title: "Line Total", width: "50px" },
                                    { command: [{ name: "edit",text: { edit: "Edit",   update: "Save", cancel: "Cancel changes"  }}], title: "&nbsp;", width: "110px" }
                                ],
                                dataBound: function (e) {
                                    var grid = $("#poDetailsGrid").data("kendoGrid");
                                    var gridData = grid.dataSource.view();
                                    for (var i = 0; i < gridData.length; i++) {
                                        var currentUid = gridData[i].uid;
                                        var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                                        var editButton = $(currenRow).find(".k-grid-edit");

                                        if( gridData[i].has_serial === true) {
                                            //console.log(i+" Hide");
                                            editButton.hide();
                                        }else{
                                            //console.log(i+" Show");
                                            editButton.show();
                                        }
                                    }
                                },
                                editable: "inline"
                            });


                            //disable all colomn without receive_qty---------------
                            var len = $("#poDetailsGrid").find("tbody tr").length;
                            for(var j=0;j<=len ; j++)
                            {
                                var model = $("#poDetailsGrid").data("kendoGrid").dataSource.at(j);
                                if (model) {//field names
                                    model.fields["product_id"].editable = false;
                                    model.fields["color_id"].editable = false;
                                    model.fields["product_version_id"].editable = false;
                                    //model.fields["vat_amount"].editable = false;
                                    //model.fields["tax_amount"].editable = false;
                                    //model.fields["line_total"].editable = false;
                                    //model.fields["quantity"].editable = false;
                                    //model.fields["unit_price"].editable = false;
                                    //model.fields["vat_pcnt"].editable = false;
                                    //model.fields["tax_pcnt"].editable = false;
                                }

                            }

                            //template for product comboBox
                            function productDropDownEditor(container, options) {
                                jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#poDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].product_id = dataItem.product_id,
                                            gridData[sel_idx].product_name = dataItem.product_name;
                                            gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                            gridData[sel_idx].product_category_name = dataItem.product_category_name;
                                            gridData[sel_idx].brand_id = dataItem.brand_id;
                                            gridData[sel_idx].brand_name = dataItem.brand_name;
                                            gridData[sel_idx].unit_id = dataItem.unit_id;
                                            gridData[sel_idx].unit_name = dataItem.unit_name;

                                        }
                                    });
                            }


                            //template for color comboBox
                            function colorDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        cascadeFrom: "productId",
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllColorMapping", "ProductColorMapping")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#poDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                            gridData[sel_idx].color_name = dataItem.color_name;
                                        }
                                    });
                            }

                            //template for product version comboBox
                            function productVersionDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        cascadeFrom: "productId",
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetProductwiseVersion", "ProductVersionMapping")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#poDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                            gridData[sel_idx].product_version_name = dataItem.product_version_name;
                                        }
                                    });
                            }//productList Grid---------------------
                        }
                    });
                }
            });
        }

        //Po list
        $("#purchase_order_master_id").kendoComboBox({
            autoBind: false,
            cascadeFrom: "supplier_id",
            placeholder: "--- Select PL No ---",
            dataTextField: "ci_no",
            dataValueField: "ci_pl_master_id",
            //dataValueField: "purchase_order_master_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetNewCiPl", "CiPl")"
                    }
                }
            },
            change: onChange
        });

        // Upload Excel--------------

        // 2. Get data from excel file
        $("#uploadExcel").click(function() {
            var data = new FormData();
            var excelFiles = ($("#excelFile"))[0].files[0];
            if (!excelFiles) {
                sweetAlert("File Upload", "Please select an Excel file to upload", "error");
                return false;
            }
            data.append("ExcelFiles", excelFiles);
            $.ajax({
                type: "POST",
                url: "@Url.Action("UploadExcel", "Grn")",
                contentType: false,
                processData: false,
                data: data,
                success: function(returnData) {
                    //console.log(returnData);
                    if (returnData=='null') {
                        sweetAlert("File Format", "Please check your excel format", "error");
                        return false;
                    }
                    var excelData = JSON.parse(returnData);
                    var totalImei = (excelData.length > 0) ? excelData.length : 0;
                    var imeiCount = (excelData.length > 0) ? excelData.length : "";
                    $("#imei_count").text(imeiCount);

                    // CHECK IF MODEL EXISTS
                    // get unique model list
                    var models = $.unique(excelData.map(function(d) { return d.MODEL; }));
                    console.log(models);
                    var modelIdNamesConfirmation = getModelIdsByNames(models);
                    if (modelIdNamesConfirmation.output == "error") {
                        sweetAlert("Sorry...", modelIdNamesConfirmation.msg, "error");
                        return false;
                    }
                    var modelIdNames = modelIdNamesConfirmation.returnvalue;
                    console.log("Model ID Names:");
                    console.log(modelIdNames);

                    // CHECK IF COLOR EXISTS
                    // get unique color list
                    var colors = $.unique(excelData.map(function(d) { return  d.COLOR; }));
                    console.log(colors);
                    var colorIdNamesConfirmation = getColorIdsByNames(colors);
                    if (colorIdNamesConfirmation.output == "error") {
                        sweetAlert("Sorry...", colorIdNamesConfirmation.msg, "error");
                        return false;
                    }
                    var colorIdNames = colorIdNamesConfirmation.returnvalue;
                    console.log("Color ID Names:");
                    console.log(colorIdNames);

                    // GET GRN DETAILS LIST
                    var grnDetailsList = [];
                    var grnDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
                    for (var i = 0; i < grnDetailsGrid.length; i++) {
                        var grnDetails = {
                            product_id: grnDetailsGrid[i].product_id,
                            product_name: grnDetailsGrid[i].product_name,
                            color_id: grnDetailsGrid[i].color_id,
                            color_name: grnDetailsGrid[i].color_name,
                            version_id: grnDetailsGrid[i].product_version_id,
                            version_name: grnDetailsGrid[i].product_version_name,
                            pi_quantity: grnDetailsGrid[i].pi_quantity,
                            receive_quantity: grnDetailsGrid[i].receive_qty,
                            
                            // future implementation
                            //brand_id: grnDetailsGrid[i].brand_id,
                            //unit_id: grnDetailsGrid[i].unit_id,
                        };
                        grnDetailsList.push(grnDetails);
                    }
                    console.log("grnDetailsList:");
                    console.log(grnDetailsList);
                    //console.log("grnDetailsGrid: ");
                    //console.log(grnDetailsGrid);
                    // CREATE LIST FOR IMEI SAVE
                    receiveSerialNoList = [];
                    $("#excelImei").empty();
                    var errMsgAboutExcelFileData = "";
                    var isValidGrn = true;
                    excelData.forEach(function(row) {
                        $("#excelImei").append("<div class='row'><div class='col-md-3'>" + row.MODEL + "</div><div class='col-md-3'>" + row.COLOR + "</div><div class='col-md-3'>" + row.IMEI1 + "</div><div class='col-md-3'>" + row.IMEI2 + "</div></div>");

                        // get product id
                        var productId = modelIdNames.find(x => x.productName === row.MODEL).productId;
                        var colorId = colorIdNames.find(x => x.colorName === row.COLOR).colorId;
                        
                        var filteredItem = grnDetailsList.filter(function (el) {
                            return el.product_id == productId && el.color_id == colorId ;
                        });

                        console.log("filteredItem[0] :");
                        console.log(filteredItem[0]);
                        if (filteredItem[0]) {
                            var versionId = filteredItem[0].version_id;

                            console.log("Product ID:" + productId + ", Color ID: " + colorId + ", Version Id: " + versionId);
                            var imeiDetails = {
                                //sku_code:id,
                                product_id: productId,
                                brand_id: 2,
                                color_id: colorId,
                                product_version_id: versionId,
                                imei_no: row.IMEI1,
                                imei_no2: row.IMEI2,
                                received_warehouse_id: $("#warehouse_id").val(),
                                received_date: $("#grn_date").val()
                            };
                            /* future: duplicate check excel data here*/
                            receiveSerialNoList.push(imeiDetails);
                        } 
                        else {
                            isValidGrn = false;
                            errMsgAboutExcelFileData = row.MODEL + " " + row.COLOR + " found in excel file is not a valid product for this GRN";
                            console.log(errMsgAboutExcelFileData);
                            return false;
                            
                        }
                    });

                    if (!isValidGrn) {
                        sweetAlert("Sorry...", errMsgAboutExcelFileData, "error");
                        return false;
                    }


                    // IMEI Quantity for display purpose only
                    $('#excelImeiSum').empty();
                    models.forEach(function(aModel) {
                        colors.forEach(function(aColor) {
                            var excelImeiCount = 0;
                            excelData.forEach(function(row) {
                                if (row.MODEL == aModel && row.COLOR == aColor) {
                                    excelImeiCount++;
                                }
                            });
                            if (excelImeiCount > 0) {
                                $('#excelImeiSum').append(aModel + ' ' + aColor + ': ' + excelImeiCount + ', ');
                            }
                        });
                    });

                    // CHECK RECEIVE QUANTITY FOR EACH PRODUCT>> later qty update in grid
                    
                    grnDetailsGrid.forEach(function(row) {
                        //console.log("searching product: "+ row.product_name + ", color: "+ row.color_name + ", GRN Quantity: "+row.receive_quantity);
                        if (row.has_serial) {
                            var imeiList = receiveSerialNoList.filter(function (el) { return (el.product_id == row.product_id && el.color_id == row.color_id) ;});
                            var imeiQuantity = imeiList.length;
                            // maruf: 26.Feb.2017: update grid quantity from excel
                            row.receive_qty = imeiQuantity;
                            row.amount = row.unit_price * imeiQuantity;
                            row.line_total = row.unit_price * imeiQuantity;
                            //if (row.pi_quantity != imeiQuantity) {
                            //    isValidGrn = false;
                            //    sweetAlert("Sorry...", "Receive quantity " + imeiQuantity + " does not match with PI quantity " + row.pi_quantity + " for the product " + row.product_name+ " - "+ row.color_name, "error");
                            //    return false;
                            //}    
                        }
                    });
                    $('#poDetailsGrid').data('kendoGrid').refresh();
                    var totalProductReceived = 0;
                    var ciplDetailsGridData = $("#ciplDetailsGrid").data("kendoGrid").dataSource.data();
                    ciplDetailsGridData.forEach(function(row) {
                        if (row.has_serial == true) {
                            var grnDetailsList1 = grnDetailsGrid.filter(function(el) { return (el.product_id == row.product_id); });
                            var productWiseReceiveSum = 0;
                            grnDetailsList1.forEach(function(row2) {
                                productWiseReceiveSum += row2.receive_qty;
                            });
                            totalProductReceived += productWiseReceiveSum;
                            if (row.quantity != productWiseReceiveSum) {
                                isValidGrn = false;
                                sweetAlert("Sorry...", "Receive quantity " + productWiseReceiveSum + " does not match with CI quantity " + row.quantity + " for the product " + row.product_name, "error");
                                return false;
                            }
                        } else {
                            var grnDetailsList2 = grnDetailsGrid.filter(function(el) { return (el.product_id == row.product_id); });
                            if (row.quantity != grnDetailsList2[0].receive_qty) {
                                isValidGrn = false;
                                sweetAlert("Sorry...", "Receive quantity " + grnDetailsList2[0].receive_qty + " does not match with CI quantity " + row.quantity + " for the product " + row.product_name, "error");
                                return false;
                            }
                            
                        }
                    });
                    if (totalProductReceived != totalImei) {
                        isValidGrn = false;
                        sweetAlert("Sorry...", "Total receive quantity " + totalProductReceived + " does not match with IMEI count " + totalImei + " from excel.", "error");
                        return false;
                    }

                    if (isValidGrn == true && receiveSerialNoList.length > 0) {
                        // enable save button
                        $("#btnDiv").show(500);
                    } else {
                        $("#btnDiv").hide(500);
                    }
                }
            });
        });


        function getModelIdsByNames(models) {
            var returnValue;
            $.ajax({
                type: "POST",
                async: false,
                url: "@UrlConfig.Action("GetModelIdsByNames", "Grn")",
                data: JSON.stringify(models),
                dataType: "json",
                contentType: "application/json",
                success: function(modelData) {
                    returnValue=modelData;
                }
            });
            return returnValue;
        }

        function getColorIdsByNames(colors) {
            var returnValue;
            $.ajax({
                type: "POST",
                async: false,
                url: "@UrlConfig.Action("GetColorIdsByNames", "Grn")",
                data: JSON.stringify(colors),
                dataType: "json",
                contentType: "application/json",
                success: function(colorData) {
                    returnValue = colorData;
                }
            });
            return returnValue;
        }

        $("#btnSaveUser").click(function() {
            Loading(true);

            var grn_no = $('#grn_no').val();
            var grn_date = $('#grn_date').val();
            var supplier_id = $('#supplier_id').val();
            var purchase_order_master_id = $('#originalPoNo').val();
            var warehouse_id = $('#warehouse_id').val();
            var lot_no = $('#lot_no').val();
            var remarks = $('#remarks').val();
            var vat_total = $('#vat_total').val();
            var tax_total = $('#tax_total').val();
            var total_amount_without_vattax = $('#total_amount_without_vattax').val();
            var total_amount_including_vattax = $('#total_amount_including_vattax').val();
            var status = $('#status').val();
            var company_id= $('#company_id').val();

            var grnMasterData = {
                grn_no: grn_no,
                grn_date: grn_date,
                supplier_id: supplier_id,
                purchase_order_master_id: purchase_order_master_id,
                warehouse_id: warehouse_id,
                lot_no: lot_no,
                remarks: remarks,
                company_id:company_id,
                vat_total: vat_total,
                tax_total: tax_total,
                total_amount_without_vattax: total_amount_without_vattax,
                total_amount_including_vattax: total_amount_including_vattax,
                status: status,
                created_by: userId,
                updated_by: userId
            };

            var grnDetailsList = [];
            var grnDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < grnDetailsGrid.length; i++) {
                var grnDetails = {
                    //order_no: poDetailsList[i].order_no,
                    product_id: grnDetailsGrid[i].product_id,
                    purchase_order_details_id: grnDetailsGrid[i].purchase_order_details_id,
                    unit_id: grnDetailsGrid[i].unit_id,
                    unit_price: grnDetailsGrid[i].unit_price,
                    pi_quantity: grnDetailsGrid[i].pi_quantity,
                    receive_quantity: grnDetailsGrid[i].receive_qty,
                    amount: grnDetailsGrid[i].amount,
                    brand_id: grnDetailsGrid[i].brand_id,
                    color_id: grnDetailsGrid[i].color_id,
                    product_version_id: grnDetailsGrid[i].product_version_id,
                    vat_amount: grnDetailsGrid[i].vat_amount,
                    tax_amount: grnDetailsGrid[i].tax_amount,
                    line_total: grnDetailsGrid[i].line_total,
                    size_id: grnDetailsGrid[i].size_id,
                    status: grnDetailsGrid[i].status,
                    vat_pcnt: grnDetailsGrid[i].vat_pcnt,
                    tax_pcnt: grnDetailsGrid[i].tax_pcnt,
                    product_category_id: grnDetailsGrid[i].product_category_id

                };
                grnDetailsList.push(grnDetails);

            }
            var hasError = false;
            // checking non_serialized products quantity maching among CI qty and Received qty
            var ciplDetailsGridData = $("#ciplDetailsGrid").data("kendoGrid").dataSource.data();
            ciplDetailsGridData.forEach(function(row) {
                if (row.has_serial != true) {
                    var grnDetailsList2 = grnDetailsGrid.filter(function(el) { return (el.product_id == row.product_id); });
                    var productWiseReceiveSum = 0;
                    grnDetailsList2.forEach(function(row2) {
                        productWiseReceiveSum += row2.receive_qty;
                    });
                    if (row.quantity != productWiseReceiveSum) {
                        hasError = true;
                        Loading(false);
                        sweetAlert("Sorry...", "Receive quantity " + productWiseReceiveSum + " does not match with CI quantity " + row.quantity + " for the product " + row.product_name, "error");
                        return false;
                    }
                }
            });

            var GrnModel = {
                GrnMasterData: grnMasterData,
                GrnDetailsList: grnDetailsList,
                ReceiveSerialNoDetails: receiveSerialNoList
            };
            if (hasError == false) {
                $.ajax({
                    type: "POST",
                    url: "@UrlConfig.Action("Post", "Grn")",
                    data: JSON.stringify(GrnModel),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        Loading(false);
                        console.log(data);
                        if (data.output === "success") {
                            swal("Success", data.msg, "success");
                            window.location.href = '/Grn/Add';
                            return false;
                        } else {
                            swal("Exception", data.msg, "error");
                            return false;
                        }
                    }
                });
            }
        });

    });


</script>
