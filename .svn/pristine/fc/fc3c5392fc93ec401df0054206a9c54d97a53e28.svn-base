@{
    ViewBag.Title = "Add";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }
}
<script type="text/javascript">
    var userId = '@userId';
</script>

<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">Internal Requisition Cash </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="requisition_no">Requisition No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="requisition_no" name="requisition_no" class="k-textbox" placeholder="Auto Generated Code" disabled />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="requisition_date">Requisition Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="requisition_date" name="requisition_date" style="width: 287px; margin-left: 3px; margin-top: 4px;" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="from_warehouse_id">From Warehouse</label>
                    </div>
                    <div class="col-md-3">
                        <input id="from_warehouse_id" name="from_warehouse_id" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="address">To Department&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="address" name="address" class="k-textbox" placeholder="To Department" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="mobile_no">Customer Name&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="customer_name" name="customer_name" class="k-textbox" placeholder="Enter Customer Name" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="mobile_no">Customer Mobile</label>
                    </div>
                    <div class="col-md-3">
                        <input id="mobile_no" name="mobile_no" class="k-textbox" placeholder="Enter Mobile No" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="pricing">Pricing&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="pricing" name="pricing" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="remarks">Remarks</label>
                    </div>
                    <div class="col-md-3">
                        <textarea cols="30" rows="3" name="remarks" id="remarks" class="k-textbox" placeholder="Enter Remarks"></textarea>
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success" id="grnGrid">
        <div class="panel-heading">Requisition List</div>
        <div class="panel-body">
            <div id="listGrid">
                <div class="row">
                    <div id="RequisitionDetailsGrid"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success" id="mrrGrid">
        <div class="panel-heading">Scan Grid</div>
        <div class="panel-body">
            <div class="row" id="daynamicPanel">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="imei_scan"> IMEI Scan</label>
                    </div>
                    <div class="col-md-3">
                        <input id="imei_scan" name="imei_scan" class="k-textbox" placeholder="Enter IMEI" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>

    </div>

    <div class="panel panel-success" id="imeiListGrid">
        <div class="panel-heading">IMEI Scan List</div>
        <div class="panel-body">
            <div>
                <div class="row">
                    <div id="MRRIMEIGrid"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="group-box" id="btnDiv">
        <div class="row">
            <div class="col-md-12">
                <input type="button" class="k-button" id="btnMRR" name="btnMRR" value="Save Requisition" />

            </div>
        </div>
    </div>
</div>

<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">
    $(document).ready(function () {
        //$("#btnDiv").hide();
        //$("#grnGrid").hide();
        //$("#mrrGrid").hide();
        $("#imeiListGrid").hide();

        //DateTime Picker
        var todayDate = kendo.toString(kendo.parseDate(new Date()), 'dd/MM/yyyy');
        $("#requisition_date").val(todayDate);
        $("#requisition_date").kendoDateTimePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            value: new Date(),
            format: "yyyy/MM/dd hh:mm tt"
        });

        //Pricing Dropdown
        var dataOfPricing = [
         { text: "MRP", value: "1" },
         { text: "Manual", value: "2" }
        ];
        $("#pricing").kendoComboBox({

            placeholder: "--- Select Pricing ---",
            dataTextField: "text",
            dataValueField: "value",
            dataSource: dataOfPricing

        });

        //From warehouse list
        $("#from_warehouse_id").kendoComboBox({
            // autoBind: true,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllWarehouses", "Warehouse")"
                    }
                }
            }

        });
        $("#from_warehouse_id").data("kendoComboBox").value(1);

        var countScaned = 0;



        //country

        //warehouse list
        $("#warehouse_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAdaWarehouse", "Warehouse")"
                    }
                }
            }
        });




        //grid start

        var sampleData = [];
        var sampleDataNextID = sampleData.length + 1;

        function getIndexById(id) {
            var idx,
                l = sampleData.length;

            for (var j = 0; j < l; j++) {
                if (sampleData[j].requisition_details_id == id) {
                    return j;
                }
            }
            return null;
        }



        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function (e) {
                    e.success(sampleData);
                },
                create: function (e) {

                    // assign an ID to the new item
                    e.data.requisition_details_id = sampleDataNextID++;
                    // save data item to the original datasource

                    var gridData = sampleData;
                    var totalNumber = gridData.length;
                    var count = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        var productId = gridData[i].product_id;
                        var colorId = gridData[i].color_id;
                        var productVersionId = gridData[i].product_version_id;
                        //var isLiveDummy= gridData[i].is_live_dummy;
                        //if (e.data.product_id === productId && e.data.color_id === colorId && e.data.is_live_dummy===isLiveDummy && e.data.product_version_id === productVersionId) {
                        if (e.data.product_id === productId && e.data.color_id === colorId && e.data.product_version_id === productVersionId) {
                            count++;
                        }
                    }

                    ////////////////13.02.2017/////////////////////////////
                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);
                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }
                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {

                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }
                    if ($("#requisition_date").data("kendoDateTimePicker").value() == null) {
                        alert("please select requisition date");
                        return false;
                    }

                    //if ($("#party_type_id").data("kendoComboBox").value() == "") {
                    //    alert("please select party type");
                    //    return false;
                    //}
                    //if ($("#party_id").data("kendoComboBox").value() == "") {
                    //    alert("please select party");
                    //    return false;
                    //}
                    if ($("#pricing").data("kendoComboBox").value() == "") {
                        alert("please select pricing");
                        return false;
                    }
                    if ($("#from_warehouse_id").data("kendoComboBox").value() == "") {
                        alert("please select warehouse");
                        return false;
                    }

                    //////////////13.02.2017 end///////////////////////////

                    if (count > 0) {
                        sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");

                        return false;
                    } else {
                        sampleData.push(e.data);
                        e.success(e.data);

                        return true;
                    }


                },
                update: function (e) {

                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);

                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }

                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {
                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }

                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }
                    if ($("#requisition_date").data("kendoDateTimePicker").value() == null) {
                        alert("please select requisition date");
                        return false;
                    }


                    else {
                        sampleData[getIndexById(e.data.requisition_details_id)] = e.data;
                        e.success();
                    }


                },
                destroy: function (e) {
                    // locate item in original datasource and remove it
                    sampleData.splice(getIndexById(e.data.requisition_details_id), 1);
                    // on success
                    e.success();
                    var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                    var gridData = entityGrid.dataSource.data();
                    //getRebateAndGiftInfo();
                    var totalNumber = gridData.length;


                }
            },
            error: function (e) {
                // handle data operation error
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "requisition_details_id",
                    fields: {
                        requisition_details_id: { editable: false, nullable: true },
                        product_id: { field: "product_id", type: "integer" },
                        product_name: { type: "string" },
                        product_category_id: { field: "product_category_id", type: "integer" },
                        product_category_name: { type: "string", editable: false },
                        unit_id: { field: "unit_id", type: "integer" },
                        unit_name: { type: "string" },
                        brand_id: { field: "brand_id", type: "integer" },
                        brand_name: { type: "string", editable: false },
                        quantity: { type: "string" },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        product_version_id: { field: "product_version_id", type: "integer" },
                        product_version_name: { type: "string" },
                        price_ori: { type: "number" },
                        price: { type: "number" },
                        mrp_cost: { type: "number" },
                        amount: { type: "string" },
                        discount: { type: "number" },
                        dis_amt: { type: "string" },
                        line_total: { type: "string" }
                        //is_live_dummy: {type: "boolean"}
                    }
                }
            }
        });

        $("#RequisitionDetailsGrid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            toolbar: ["create"],
            selectable: true,
            save: function (data) {

                var amount = 0;
                //var tempAmount = +data.model.quantity * +data.model.price;
                var tempAmount = 0;
                var pp = $("#pricing").val();
                if (pp == 1) {
                    data.model.set("price", data.model.mrp_cost);
                } else {
                    //manual
                }
                //alert(data.model.price);
                tempAmount = data.model.quantity * data.model.price;
                //}

                //edit by rabbi
                var discountAmount = 0;
                var totalAmount = 0;

                discountAmount = tempAmount * ((data.model.discount) / 100);
                totalAmount = tempAmount - discountAmount;
                data.model.set("amount", tempAmount);
                data.model.set("dis_amt", discountAmount);

                data.model.set("line_total", totalAmount);

                //var lineTotal = +data.model.vat_amount + +data.model.tax_amount;

                var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                var gridData = entityGrid.dataSource.data();
                var totalNumber = gridData.length;

                for (var i = 0; i < totalNumber; i++) {
                    amount += +parseFloat(gridData[i].line_total).toFixed(2);
                }

                $("#amount").val(amount);
            },

            cancel: function (data) {
                var tempAmount = +data.model.quantity * +data.model.price;
                data.model.set("line_total", tempAmount);

                var gridData = sampleData;
                var totalNumber = gridData.length;
                console.log(sampleData);

            },
            columns: [
                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "130px" },
                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "100px" },
                { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "100px" },
                { field: "quantity", title: "Quantity", width: "50px" },
                { field: "price", title: "Price", width: "50px" },
                { field: "amount", title: "Amount", width: "50px" },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
            ],
            editable: "inline"
        });


        //template for product comboBox
        function productDropDownEditor(container, options) {
            jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductWithoutAss", "OnlineRequisition")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        pId = dataItem.product_id;

                        console.log(dataItem.product_name);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_id = dataItem.product_id,
                        gridData[sel_idx].product_name = dataItem.product_name;

                        ////////////////////////////15.02.2017////////////////////////////
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductsWiseFirstColorVersion", "Product")",
                            data: {
                                product_id: pId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {
                                gridData[sel_idx].color_id = data.color_id;
                                $("#colorId").data("kendoComboBox").value(gridData[sel_idx].color_id);
                                gridData[sel_idx].color_name = data.color_name;
                                gridData[sel_idx].product_version_id = data.product_version_id;
                                gridData[sel_idx].product_version_name = data.product_version_name;
                                $("#productversionId").data("kendoComboBox").value(gridData[sel_idx].product_version_id);
                                //gridData[sel_idx].dealer_cost =data.dealer_cost;
                                var pp = $("#pricing").val();
                                //alert(pp);
                                if (pp == 1) {
                                    gridData[sel_idx].price = data.mrp_cost;
                                    gridData[sel_idx].mrp_cost = data.mrp_cost;
                                } else {
                                    //gridData[sel_idx].price = 0;
                                }
                                //alert(data.dealer_cost);


                            }
                        });
                        ////////////////////////15.02.2017/////////////////////////////////
                    }
                });
        }


        //template for color comboBox
        function colorDropDownEditor(container, options) {
            jQuery('<input id="colorId" required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    cascadeFrom: "productId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetProductwiseColor", "ProductPriceing")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        cId = dataItem.color_id;

                        console.log(dataItem.product_name);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        var vId = gridData[sel_idx].product_version_id;

                        gridData[sel_idx].color_id = dataItem.color_id,
                        gridData[sel_idx].color_name = dataItem.color_name;
                        /////////////////15.02.2017////////////////////
                        var pid = 2;
                        //alert(vId);
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                            data: {
                                party_type_id: pid,
                                product_id: pId,
                                color_id: cId,
                                product_version_id: vId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {

                                var pp = $("#pricing").val();
                                if (pp == 1) {
                                    gridData[sel_idx].price = data;
                                    gridData[sel_idx].price_ori = data;
                                    gridData[sel_idx].mrp_cost = data;
                                } else {
                                    gridData[sel_idx].price = 0;
                                    gridData[sel_idx].price_ori = 0;
                                }

                            }
                        });
                        //////////////15.02.2017/////////////////////
                        //load version dropdown by product && color wise
                        $("#productversionId").kendoComboBox({
                            autoBind: true,
                            placeholder: "--- Select Version ---",
                            dataTextField: "product_version_name",
                            dataValueField: "product_version_id",
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetProductColorwiseVersion", "ProductPriceing")",
                                        data: { aa: pId, bb: cId }
                                    }
                                }
                            },
                            change: function (e) {

                                var dataItem = this.dataItem(e.item);

                                //////////////////////23.01.2017 start//////////////////////
                                //to get party type, product, color and version wise price
                                var partyTypeId = ($("#party_type_id").val());
                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                                    data: {
                                        party_type_id: partyTypeId,
                                        product_id: pId,
                                        color_id: cId,
                                        product_version_id: dataItem.product_version_id
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        var pp = $("#pricing").val();
                                        if (pp == 1) {
                                            gridData[sel_idx].price = data;
                                            gridData[sel_idx].price_ori = data;
                                            gridData[sel_idx].mrp_cost = data;
                                        } else {
                                            gridData[sel_idx].price = 0;
                                            gridData[sel_idx].price_ori = 0;
                                        }
                                    }
                                });
                                //////////////////////23.01.2017 end//////////////////////

                                var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                gridData[sel_idx].product_version_name = dataItem.product_version_name;

                            }
                        });
                    }
                });
        }

        //load all version
        function productVersionDropDownEditor(container, options) {

            jQuery('<input id="productversionId" required data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductVersionForDropDown", "ProductVersion")",

                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_version_id = dataItem.product_version_id,
                            gridData[sel_idx].product_version_name = dataItem.product_version_name;


                    }
                });
        }

        //end






        function getModelIdsByNames(models) {
            var returnValue;
            $.ajax({
                type: "POST",
                async: false,
                url: "@UrlConfig.Action("GetModelIdsByNames", "Grn")",
                data: JSON.stringify(models),
                dataType: "json",
                contentType: "application/json",
                success: function (modelData) {
                    returnValue = modelData;
                }
            });
            alert("Y");
            return returnValue;
        }

        function getColorIdsByNames(colors) {
            var returnValue;
            $.ajax({
                type: "POST",
                async: false,
                url: "@UrlConfig.Action("GetColorIdsByNames", "Grn")",
                data: JSON.stringify(colors),
                dataType: "json",
                contentType: "application/json",
                success: function (colorData) {
                    returnValue = colorData;
                }
            });
            alert("Y");
            return returnValue;
        }

        function imeiList(listOfImei) {
            var dataSource2 = new kendo.data.DataSource({
                pageSize: 20,
                transport: {
                    read: function (f) {
                        f.success(listOfImei);
                    },
                    destroy: function (f) {
                        imeiDataForImeiGrid.splice(getImeiGridData(f.data.receive_serial_no_details_id), 1);
                        f.success();

                    }
                },

                autoSync: false,
                schema: {
                    errors: function (e) {
                        console.log(e.errors);
                        //alert(e.error);
                        if (e.output === "error") {
                            console.log(e.output);
                        }

                    },

                    model: {
                        id: "receive_serial_no_details_id",
                        fields: {
                            receive_serial_no_details_id: { editable: false, nullable: true },
                            product_id: { type: "number" },
                            color_id: { type: "number" },
                            product_version_id: { type: "number" },
                            product_name: { type: "string" },
                            color_name: { type: 'string' },
                            version: { type: "string" },
                            imei: { type: "string" },
                            imei_no2: { type: "string" }

                        }

                    }
                }

            });
            // Mrr Grid
            jQuery("#MRRIMEIGrid").kendoGrid({
                dataSource: dataSource2,
                scrollable: true,
                filterable: true,
                pageable: {
                    refresh: true,
                    input: true,
                    pageSize: 20,
                    numeric: false,
                    pageSizes: [10, 20, 50]
                },

                sortable: true,
                resizable: true,

                columns: [
                    { field: "product_name", title: "Product", width: "50px" },
                    { field: "color_name", title: "Color", width: "50px" },
                    { field: "version", title: "Version", width: "50px" },
                    { field: "imei", title: "IMEI 1", width: "50px" },
                    { field: "imei_no2", title: "IMEI 2", width: "50px" },
                    //{ field: "scan_quantity", title: "Scan Quantity", width: "50px" },
                    { command: ["destroy"], title: "&nbsp;", width: "50px" }
                ],
                editable: "inline"
            });
        }

        // Fucntion Duplicate check
        function duplicate(listOfDuplicate, imei) {
            if (!listOfDuplicate) {
                return false;
            } else {
                for (var i = 0; i < listOfDuplicate.length; i++) {
                    if (listOfDuplicate[i].imei == imei || listOfDuplicate[i].imei_no2 == imei) {
                        return true;
                    }
                }
                return false;
            }
        }
        // Fucntion Sum Grid Quantity
        function sumGridQuantity(listOfDuplicate) {
            var count = 0;
            for (var i = 0; i < listOfDuplicate.length; i++) {
                count += parseFloat(listOfDuplicate[i].quantity);

            }
            return count;
        }
        //IMEI SCAN
        var mrrDetailsGrid = [];
        var imeiDataForImeiGrid = [];

        // Scan Enter Event
        $('#daynamicPanel :input').live('keyup', function (e) {

            //// $("#ddl").data("kendoDropDownList").text();
            //var damage_type_name = $("#damage_type_id").data("kendoComboBox").text();


            if (e.keyCode === 13) {
                $(this).trigger("enterKey");
                var id = this.id;
                Loading(false);

                var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;
                var imei = $("#imei_scan").val();
                var warehouseId = $("#from_warehouse_id").val();

                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetImeiInfoForMrr", "Mrr")?imei=" + imei + "&warehouseId=" + warehouseId,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {

                        if (data != null) {
                            $("#imeiListGrid").show();
                            var count = 0;
                            for (var i = 0; i < grid.length; i++) {


                                var gColId = grid[i].color_id;
                                var gQuant = grid[i].quantity;
                                //alert(gQuant);
                                var gPId = grid[i].product_id;
                                var gVerId = grid[i].product_version_id;

                                if (data.product_id == gPId && data.color_id == gColId && data.product_version_id == gVerId) {

                                    var productImei = {

                                        receive_serial_no_details_id: data.receive_serial_no_details_id,
                                        product_name: grid[i].product_name,
                                        color_name: grid[i].color_name,
                                        version: grid[i].product_version_name,
                                        product_id: grid[i].product_id,
                                        color_id: grid[i].color_id,
                                        product_version_id: grid[i].product_version_id,
                                        imei: data.imei_no,
                                        // damage_type_name:damage_type_name,
                                        imei_no2: data.imei_no2
                                    };

                                    var checkDuplicate = duplicate(imeiDataForImeiGrid, imei.replace(/\s+/g, ''));

                                    //var gridScan = $("#MRRIMEIGrid").data("kendoGrid")._data;
                                    var kkk = sumGridQuantity(grid);
                                    alert(kkk);
                                    alert(countScaned);
                                    if (kkk <= countScaned) {
                                        swal("Exception", "Scan Quantity can not be over Requisition Quantity!!", "warning");
                                        return false;
                                    } else {
                                        if (checkDuplicate) {
                                            swal("Exception", "IMEI already exist in list !!", "warning");
                                            return false;
                                        }
                                        else {

                                            countScaned++;
                                            //alert(countScaned);
                                            imeiDataForImeiGrid.push(productImei);
                                            imeiList(imeiDataForImeiGrid);
                                            var firstItem = $('#RequisitionDetailsGrid').data().kendoGrid.dataSource.data()[i];
                                            firstItem.set('mrr_qty', grid[i].mrr_qty + 1);
                                            firstItem.set('saleable_qty', grid[i].receive_quantity - grid[i].mrr_qty);


                                        }


                                        count = 1;
                                    }


                                }

                            }
                            //alert(count);
                            if (count == 0) {
                                swal("Exception", "IMEI not exist in list !!", "warning");
                                return false;
                            }
                        }
                        else {
                            swal("Exception", "IMEI not exist in list !!", "warning");
                            return false;
                        }

                    }
                });


                $("#" + id + "").val("");
            }
        });


      

        //Delete Qty Function
        function deleteSummaryGridData(pId, colId, verId, damageTypeName) {
            var objectNew = "";

            var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;

            for (var j = 0; j < grid.length; j++) {
                if (grid[j].product_id == pId && grid[j].color_id == colId && grid[j].product_version_id == verId) {
                    var firstItem = $('#RequisitionDetailsGrid').data().kendoGrid.dataSource.data()[j];
                    firstItem.set('mrr_qty', grid[j].mrr_qty - 1);
                    firstItem.set('saleable_qty', grid[j].saleable_qty + 1);





                }
            }
            return null;
        }
        function getImeiGridData(receive_serial_no_details_id) {

            var l = imeiDataForImeiGrid.length;
            //alert("dhukse");
            for (var j = 0; j < l; j++) {
                if (imeiDataForImeiGrid[j].receive_serial_no_details_id == receive_serial_no_details_id) {

                    deleteSummaryGridData(imeiDataForImeiGrid[j].product_id, imeiDataForImeiGrid[j].color_id, imeiDataForImeiGrid[j].product_version_id, imeiDataForImeiGrid[j].damage_type_name);


                    //alert(j);
                    return j;
                }
            }
            return null;
        }




        $("#btnMRR").click(function () {
            Loading(false);

            //MRR Master Data

            var grn_master_id = $('#grn_master_id').val();
            var lost_comment = $('#lost_comment').val();
            var userId = '@userId';


            if (grn_master_id == null || grn_master_id == "") {
                swal("Warning", "Please Select GRN No!!", "warning");
                return false;
            }

            var mrrMasterData = {
                grn_master_id: grn_master_id,
                lost_comment: lost_comment,
                created_by: userId
            };

            //GRN ListGrid
            var mrrDataList = [];
            var mrrDetailsGrid = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.data();
            // alert(mrrDetailsGrid.length);
            for (var i = 0; i < mrrDetailsGrid.length; i++) {
                var mrrDetails = {
                    product_id: mrrDetailsGrid[i].product_id,
                    color_id: mrrDetailsGrid[i].color_id,
                    product_version_id: mrrDetailsGrid[i].product_version_id,
                    grn_quantity: mrrDetailsGrid[i].receive_quantity,
                    saleable_quantity: mrrDetailsGrid[i].saleable_qty,
                    box_damage_quantity: mrrDetailsGrid[i].box_damage_quantity,
                    physical_damaged_quantity: mrrDetailsGrid[i].physical_damaged_quantity,
                    customs_lost_quantity: mrrDetailsGrid[i].customs_lost_quantity,
                    total_received_quantity: mrrDetailsGrid[i].total_received_quantity
                };
                mrrDataList.push(mrrDetails);



            }
            // alert(mrrDataList.length);
            // MRR ListGrid
            var rcvSerialList = [];
            if (countScaned > 0) {
                var rcvSerialsIMEIGrid = $("#MRRIMEIGrid").data("kendoGrid").dataSource.data();

                for (var i = 0; i < rcvSerialsIMEIGrid.length; i++) {

                    var receiveSerialNoDetails = {
                        receive_serial_no_details_id: rcvSerialsIMEIGrid[i].receive_serial_no_details_id,
                        product_id: rcvSerialsIMEIGrid[i].product_id,
                        color_id: rcvSerialsIMEIGrid[i].color_id,
                        product_version_id: rcvSerialsIMEIGrid[i].product_version_id,
                        imei: rcvSerialsIMEIGrid[i].imei,
                        imei_no2: rcvSerialsIMEIGrid[i].imei_no2,
                        //  damage_type_name: rcvSerialsIMEIGrid[i].damage_type_name


                    };
                    rcvSerialList.push(receiveSerialNoDetails);


                }
            }




            var MrrModel = {
                mrrMasterData: mrrMasterData,
                MrrDetailsList: mrrDataList,
                ReceiveSerialNoDetails: rcvSerialList

            };
            @*$.ajax({
                type: "POST",
                url: "@UrlConfig.Action("CreateMrr", "Mrr")",
                data: JSON.stringify(MrrModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {
                        swal("Success", data.msg, "success");
                        window.location.href = '/Mrr/Index';
                        return false;
                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });*@

        });

    });
    //Kiron:20-03-2017

</script>
