@{
    ViewBag.Title = "EShop Requisition";
    var userId = "";
    var partyTypeId = "";
    var partyId = 0;
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
        partyTypeId = Session["party_type_id"].ToString();
        partyId = Convert.ToInt32(Session["party_id"].ToString());
    }


}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12 widget-body" id="context">
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="panel panel-success">
                    <div class="panel-heading">E-Shop Requisition Master</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="requisition_code">Requistion No</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="requisition_code" name="requisition_code" class="k-textbox" disabled />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="requisition_date">Requistion Date&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="requisition_date" name="requisition_date" style="width: 245px;" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="warehouse_from">From Warehouse&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="warehouse_from" name="warehouse_from" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="pricing">Pricing&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="pricing" name="pricing" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="party_type_id">Channel Type&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="party_type_id" name="party_type_id" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="party_id">Channel Name&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="party_id" name="party_id" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="contact_person_mobile">Contact Person Mobile&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="contact_person_mobile" name="contact_person_mobile" class="k-textbox" disabled="" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="remarks">Remarks</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="remarks" name="remarks" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="amount">Order Amount</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="amount" name="amount" class="k-textbox" disabled />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>


                        <div class="row" style="visibility: hidden;">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <input id="txtpId" name="txtpId" class="k-textbox" disabled />
                                </div>
                                <div class="col-md-3">

                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">

                                </div>
                                <div class="col-md-3">
                                    <input id="txtcId" name="txtcId" class="k-textbox" disabled />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="panel panel-success">
                    <div class="panel-heading">Customer Details</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="customer_po">Order No&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="customer_po" name="customer_po" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="customer_name">Customer Name&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="customer_name" name="customer_name" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="mobile_no">Mobile No</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="mobile_no" name="mobile_no" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="email">Email</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="email" name="email" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="shipping">Shipping&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="shipping" name="shipping" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="payment_method">Payment Method&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                                </div>
                                <div class="col-md-3">
                                    <input id="payment_method" name="payment_method" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="shipping_address">Shipping Address</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="shipping_address" name="shipping_address" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="billing_address">Billing Address</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="billing_address" name="billing_address" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="panel panel-success">
                    <div class="panel-heading">Product List</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div id="RequisitionDetailsGrid"></div>
                            </div>
                        </div>
                        <br />


                    </div>
                </div>
            </div>

            <div class="row" id="promotion">
                <div class="panel panel-success">
                    <div class="panel-heading">Promotion List</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div id="PromotionList"></div>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>
            <div class="panel panel-success" id="promotionGift">
                <div class="panel-heading">Promotion Gift List</div>
                <div class="panel-body">
                    <div id="promotionGiftPanel">
                        <div class="row">
                            <div id="PromotionGiftGrid"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="panel panel-success">
                    <div class="panel-heading">Delivery</div>
                    <div class="panel-body">
                        <div class="row" id="daynamicPanel">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="imei_scan">Delivery IMEI Scan</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="imei_scan" name="imei_scan" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        @*<div class="row">
                                <div class="col-md-12">
                                    <div class="col-md-2">
                                        <label for="imei_scan">Delivery IMEI Scan</label>
                                    </div>
                                    <div class="col-md-3">
                                        <input id="imei_scan" name="imei_scan" class="k-textbox" />
                                    </div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>*@
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <p style="font-weight: bold;">Product Summery</p>
                                    <div id="RequisitionSummaryGrid"></div>
                                </div>
                                <div class="col-md-6">
                                    <p style="font-weight: bold;">IMEI List</p>
                                    <div id="RequisitionIMEIGrid"></div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        @*<div class="col-md-3" style="visibility: hidden">
                <div class="panel panel-success">
                    <div class="panel-heading">Available Promotions</div>
                    <div class="panel-body" id="available_promotions">

                    </div>
                </div>
            </div>*@
    </div>


    <div class="row" style="height: 100px;">
        <div class="group-box">
            <div class="row">
                <div class="col-md-12">
                    <input type="button" class="k-button" id="btnSaveRequisition" name="btnSaveRequisition" value="Save Requisition" />
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $("#requisition_date").kendoDateTimePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            value: new Date(),
            format: "yyyy/MM/dd hh:mm tt"
        });

        $("#warehouse_from").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAdaWarehouse", "Warehouse")"
                    }
                }
            }

        });

        $("#warehouse_from").data("kendoComboBox").value(1);

        $("#party_type_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Channel Type ---",
            dataTextField: "party_type_name",
            dataValueField: "party_type_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllPartyType", "PartyType")"
                    }
                }
            }
        });

        $("#party_type_id").data("kendoComboBox").value(12);
        $("#party_type_id").data("kendoComboBox").enable(false);

        var today = new Date();
        var lastofthis = new Date(today.getUTCFullYear(), today.getUTCMonth() + 1, 1);
        //$("#credit_term").val(lastofthis.toISOString().substring(0, 10));

        //$("#credit_term").kendoDatePicker({
        //    animation: {
        //        close: {
        //            effects: "fadeOut zoom:out",
        //            duration: 300
        //        },
        //        open: {
        //            effects: "fadeIn zoom:in",
        //            duration: 300
        //        }
        //    },
        //    format: "yyyy/MM/dd"
        //});

        //party  drop down start

        $("#party_id").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Channel Name ---",
            dataTextField: "party_name",
            dataValueField: "party_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        @*url: "@UrlConfig.Action("GetAllParty", "Party")"*@
                        url: "@UrlConfig.Action("GetPartyTypewisePartyForDropdown", "Party")",
                        data: { party_type_id: 12 }
                    }
                }
            }
        });

        //end

        //shipping

        $("#shipping").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Shipping Method ---",
            dataTextField: "shipping_name",
            dataValueField: "eshop_shipping_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        @*url: "@UrlConfig.Action("GetAllParty", "Party")"*@
                        url: "@UrlConfig.Action("GetShippingMethod", "EshopRequisition")",
                        data: { eshop_shipping_id: 1 }
                    }
                }
            }
        });

        $("#payment_method").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Payment Method ---",
            dataTextField: "method_name",
            dataValueField: "eshop_payment_method_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        @*url: "@UrlConfig.Action("GetAllParty", "Party")"*@
                        url: "@UrlConfig.Action("GetPaymentMethod", "EshopRequisition")"
                    }
                }
            }
        });

        //end

        //party dropdown onChange start

        $('#party_id').change(function () {
            var partId = $('#party_id').val();
            //$("#territory_id").data("kendoComboBox").enable(true),

            @*$.ajax({
                type: "GET",
                url: "@UrlConfig.Action("PartyBillingAddress", "Party")",
                data: { party_id: partId },//Passing parameter
                dataType: "json",
                success: function (data) {
                    Loading(false);
                    $("#address").val(data);
                }
            });*@
            //territory
            $.ajax({

                type: "GET",
                url: "@UrlConfig.Action("GetPartyWiseTerritory", "Territory")",
                data: { party_id: partId },//Passing parameter
                dataType: "json",
                success: function (data) {
                    Loading(false);
                    var rrr = data.region_id;
                    var aaa = data.area_id;
                    var ttt = data.territory_id;

                    $("#contact_person_mobile").val(data.mobile);

                }
            });

        });

        //end

        //pricing drop down

        var dataOfPricing = [
				{ text: "MRP", value: "1" },
				{ text: "Manual", value: "2" }
        ];
        $("#pricing").kendoComboBox({

            placeholder: "--- Select Pricing ---",
            dataTextField: "text",
            dataValueField: "value",
            dataSource: dataOfPricing

        });

        //end

        //GetPartyTy

        //product list grid start

        var sampleData = [];
        var sampleDataNextID = sampleData.length + 1;

        function getIndexById(id) {
            var idx,
                l = sampleData.length;

            for (var j = 0; j < l; j++) {
                if (sampleData[j].requisition_details_id == id) {
                    return j;
                }
            }
            return null;
        }



        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function (e) {
                    e.success(sampleData);
                },
                create: function (e) {

                    // assign an ID to the new item
                    e.data.requisition_details_id = sampleDataNextID++;
                    // save data item to the original datasource

                    var gridData = sampleData;
                    var totalNumber = gridData.length;
                    var count = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        var productId = gridData[i].product_id;
                        var colorId = gridData[i].color_id;
                        var productVersionId = gridData[i].product_version_id;
                        //var isLiveDummy= gridData[i].is_live_dummy;
                        //if (e.data.product_id === productId && e.data.color_id === colorId && e.data.is_live_dummy===isLiveDummy && e.data.product_version_id === productVersionId) {
                        if (e.data.product_id === productId && e.data.color_id === colorId && e.data.product_version_id === productVersionId) {
                            count++;
                        }
                    }

                    ////////////////13.02.2017/////////////////////////////
                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);
                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }
                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {

                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }
                    if ($("#requisition_date").data("kendoDateTimePicker").value() == null) {
                        alert("please select requisition date");
                        return false;
                    }

                    if ($("#party_type_id").data("kendoComboBox").value() == "") {
                        alert("please select party type");
                        return false;
                    }
                    if ($("#party_id").data("kendoComboBox").value() == "") {
                        alert("please select party");
                        return false;
                    }
                    if ($("#pricing").data("kendoComboBox").value() == "") {
                        alert("please select pricing");
                        return false;
                    }
                    if ($("#warehouse_from").data("kendoComboBox").value() == "") {
                        alert("please select warehouse");
                        return false;
                    }

                    //////////////13.02.2017 end///////////////////////////

                    if (count > 0) {
                        sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");

                        return false;
                    } else {
                        sampleData.push(e.data);
                        e.success(e.data);

                        gridOfPromotion(e.data.has_serial);

                        return true;
                    }


                },
                update: function (e) {
                    // locate item in original datasource and update it
                    //sampleData[getIndexById(e.data.requisition_details_id)] = e.data;
                    //e.success();
                    ///////////////////////13.02.2017//////////////////////////
                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);

                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }

                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {
                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }

                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }
                    if ($("#requisition_date").data("kendoDateTimePicker").value() == null) {
                        alert("please select requisition date");
                        return false;
                    }

                    if ($("#party_id").data("kendoComboBox").value() == "") {
                        alert("please select party");
                        return false;
                    }
                    else {
                        sampleData[getIndexById(e.data.requisition_details_id)] = e.data;
                        e.success();

                        gridOfPromotion(e.data.has_serial);
                    }
                    ///////////////////////13.02.2017//////////////////////////
                    //getRebateAndGiftInfo();

                },
                destroy: function (e) {
                    // locate item in original datasource and remove it
                    sampleData.splice(getIndexById(e.data.requisition_details_id), 1);
                    // on success
                    e.success();
                    var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                    var gridData = entityGrid.dataSource.data();
                    //getRebateAndGiftInfo();
                    var totalNumber = gridData.length;

                    gridOfPromotion(e.data.has_serial);
                }
            },
            error: function (e) {
                // handle data operation error
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "requisition_details_id",
                    fields: {
                        requisition_details_id: { editable: false, nullable: true },
                        product_id: { field: "product_id", type: "integer" },
                        product_name: { type: "string" },
                        product_category_id: { field: "product_category_id", type: "integer" },
                        product_category_name: { type: "string", editable: false },
                        unit_id: { field: "unit_id", type: "integer" },
                        unit_name: { type: "string" },
                        brand_id: { field: "brand_id", type: "integer" },
                        brand_name: { type: "string", editable: false },
                        quantity: { type: "string" },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        product_version_id: { field: "product_version_id", type: "integer" },
                        product_version_name: { type: "string" },
                        price_ori: { type: "number" },
                        price: { type: "number" },
                        mrp_cost: { type: "number" },
                        line_total: { type: "string" },
                        promotion_master_id:{field:"promotion_master_id",type:"integer"},
                        promotion_name:{type:"string"},
                        has_serial: {type: "boolean"},
                        promotion_type:{type:"string"},
                        discount_amount: { type: "string"},
                        amount: { type: "string" },
                        discount: { type: "number" },
                    }
                }
            }
        });

        $("#RequisitionDetailsGrid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            toolbar: ["create"],
            selectable: true,
            save: function (data) {

                var amount = 0;
                var tempAmount = 0;
                var price_tag = 0;

                var pp = $("#pricing").val();
                if (pp == 1) {
                    data.model.set("price", data.model.mrp_cost);
                    tempAmount = data.model.quantity * data.model.mrp_cost;
                    price_tag = data.model.mrp_cost;
                    //alert(data.model.mrp_cost);
                } else {
                    //manual
                    tempAmount = data.model.quantity * data.model.price;
                    price_tag = data.model.price;
                }

                var discountAmount = 0;

                if (data.model.flag_no == 1) {
                    var discount = data.model.discount;
                    var priceAmount = price_tag;
                    var qty = data.model.quantity;

                    var liftPrice = priceAmount * (discount / 100);
                    var actual_price = priceAmount - liftPrice;

                    var totalAmount_final = qty * actual_price;
                    data.model.set("discount_amount", liftPrice * qty);

                    data.model.set("line_total", totalAmount_final);

                    data.model.set("amount", totalAmount_final);
                }
                else if (data.model.flag_no == 2) {
                    var discount = data.model.discount;
                    var discountAmount = discount * data.model.quantity;

                    var totalAmount_final = tempAmount - discountAmount;
                    data.model.set("discount_amount", discountAmount);

                    data.model.set("line_total", totalAmount_final);

                    data.model.set("amount", totalAmount_final);
                } else {
                    data.model.set("amount", tempAmount);
                    data.model.set("line_total", tempAmount);
                }

                var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                var gridData = entityGrid.dataSource.data();
                var totalNumber = gridData.length;

                for (var i = 0; i < totalNumber; i++) {
                    amount += +parseFloat(gridData[i].line_total).toFixed(2);
                }

                $("#amount").val(amount);
            },

            cancel: function (data) {
                var tempAmount = +data.model.quantity * +data.model.price;
                data.model.set("line_total", tempAmount);

                var gridData = sampleData;
                var totalNumber = gridData.length;
                console.log(sampleData);

            },
            columns: [
                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "130px" },
                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "100px" },
                { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "100px" },
                { field: "quantity", title: "Quantity", width: "50px" },
                { field: "promotion_master_id", title: "Promotion", template: "#= promotion_name #", editor: promotionDropDownEditor, width: "100px" },
                { field: "price", title: "Price", width: "50px" },
                { field: "discount_amount", title: "Incentive Amount", width: "50px" },
                { field: "line_total", title: "Total Amount", width: "70px" },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
            ],
            editable: "inline"
        });


        //template for product comboBox
        function productDropDownEditor(container, options) {
            jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        pId = dataItem.product_id;

                        console.log(dataItem.product_name);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_id = dataItem.product_id,
                        gridData[sel_idx].product_name = dataItem.product_name;

                        ////////////////////////////15.02.2017////////////////////////////
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductsWiseFirstColorVersion", "Product")",
                            data: {
                                product_id: pId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {
                                gridData[sel_idx].color_id = data.color_id;
                                $("#colorId").data("kendoComboBox").value(gridData[sel_idx].color_id);
                                gridData[sel_idx].color_name = data.color_name;
                                gridData[sel_idx].product_version_id = data.product_version_id;
                                gridData[sel_idx].product_version_name = data.product_version_name;
                                $("#productversionId").data("kendoComboBox").value(gridData[sel_idx].product_version_id);
                                //gridData[sel_idx].dealer_cost =data.dealer_cost;
                                gridData[sel_idx].has_serial = data.has_serial;

                                var pp = $("#pricing").val();
                                //alert(pp);
                                if (pp == 1) {
                                    gridData[sel_idx].price = data.mrp_cost;
                                    gridData[sel_idx].mrp_cost = data.mrp_cost;
                                } else {
                                    //gridData[sel_idx].price = 0;
                                }
                                //alert(data.dealer_cost);


                            }
                        });

                        var cId = $("#party_type_id").val();
                        $("#promotionId").kendoComboBox({
                            autoBind: true,
                            placeholder: "--- Select Promotion ---",
                            dataTextField: "promotion_name",
                            dataValueField: "promotion_master_id",
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetPromotionInfoDropdown", "Promotion")",
                                        data: { product_id: pId, channel_id: cId }
                                    }
                                }
                            },
                            change: function (e) {

                                var dataItem = this.dataItem(e.item);

                                //console.log(dataItem.product_name);
                                var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].promotion_master_id = dataItem.promotion_master_id,
                                gridData[sel_idx].promotion_name = dataItem.promotion_name;
                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("GetPromotinByPromotionId", "Promotion")",
                                    data: {
                                        promotion_master_id: dataItem.promotion_master_id,
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function(data) {
                                        gridData[sel_idx].promotion_type = data.promotion_type;
                                    }});

                            }
                        });
                        ////////////////////////15.02.2017/////////////////////////////////
                    }
                });
        }


        //template for color comboBox
        function colorDropDownEditor(container, options) {
            jQuery('<input id="colorId"  data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    cascadeFrom: "productId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetProductwiseColor", "ProductPriceing")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        cId = dataItem.color_id;

                        console.log(dataItem.product_name);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        var vId = gridData[sel_idx].product_version_id;

                        gridData[sel_idx].color_id = dataItem.color_id,
                        gridData[sel_idx].color_name = dataItem.color_name;
                        /////////////////15.02.2017////////////////////
                        var pid = $("#party_type_id").val();
                        //alert(vId);
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                            data: {
                                party_type_id: pid,
                                product_id: pId,
                                color_id: cId,
                                product_version_id: vId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {

                                var pp = $("#pricing").val();
                                if (pp == 1) {
                                    gridData[sel_idx].price = data;
                                    gridData[sel_idx].price_ori = data;
                                    gridData[sel_idx].mrp_cost = data;
                                } else {
                                    gridData[sel_idx].price = 0;
                                    gridData[sel_idx].price_ori = 0;
                                }

                            }
                        });
                        //////////////15.02.2017/////////////////////
                        //load version dropdown by product && color wise
                        $("#productversionId").kendoComboBox({
                            autoBind: true,
                            placeholder: "--- Select Version ---",
                            dataTextField: "product_version_name",
                            dataValueField: "product_version_id",
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetProductColorwiseVersion", "ProductPriceing")",
                                        data: { aa: pId, bb: cId }
                                    }
                                }
                            },
                            change: function (e) {

                                var dataItem = this.dataItem(e.item);

                                //////////////////////23.01.2017 start//////////////////////
                                //to get party type, product, color and version wise price
                                var partyTypeId = ($("#party_type_id").val());
                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                                    data: {
                                        party_type_id: partyTypeId,
                                        product_id: pId,
                                        color_id: cId,
                                        product_version_id: dataItem.product_version_id
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        var pp = $("#pricing").val();
                                        if (pp == 1) {
                                            gridData[sel_idx].price = data;
                                            gridData[sel_idx].price_ori = data;
                                            gridData[sel_idx].mrp_cost = data;
                                        } else {
                                            gridData[sel_idx].price = 0;
                                            gridData[sel_idx].price_ori = 0;
                                        }
                                    }
                                });
                                //////////////////////23.01.2017 end//////////////////////

                                var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                gridData[sel_idx].product_version_name = dataItem.product_version_name;

                            }
                        });
                    }
                });
        }

        //load all version
        function productVersionDropDownEditor(container, options) {

            jQuery('<input id="productversionId"  data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductVersionForDropDown", "ProductVersion")",

                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_version_id = dataItem.product_version_id,
                            gridData[sel_idx].product_version_name = dataItem.product_version_name;


                    }
                });
        }

        function promotionDropDownEditor(container, options) {

            jQuery('<input id="promotionId" data-text-field="promotion_name" data-value-field="promotion_master_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    placeholder: "-Select-",
                    cascadeFrom: "productId",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetPromotinByChannelId", "Promotion")?channelId=" + $("#party_type_id").val(),
                                type: "GET"
                            }
                        }

                    },
                    change: function(e) {
                        var dataItem = this.dataItem(e.item);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();

                        var qty = gridData[sel_idx].quantity;

                        gridData[sel_idx].promotion_master_id = dataItem.promotion_master_id,
                        gridData[sel_idx].promotion_name = dataItem.promotion_name;

                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetPromotinByPromotionId", "Promotion")",
                            data: {
                                promotion_master_id: dataItem.promotion_master_id,
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function(data) {
                                if (qty == "") {
                                    swal("Warning", "please give quantity  ", "warning");
                                    return false;
                                }
                                if (qty >= data.lifting_quantity_for_promotion) {
                                    gridData[sel_idx].promotion_type = data.promotion_type;

                                    if (data.promotion_type == "Incentive") {

                                        if (data.is_discount_percent == true) {
                                            gridData[sel_idx].flag_no = 1;
                                            gridData[sel_idx].discount = parseInt(data.promotion_discount);

                                        } else {
                                            gridData[sel_idx].discount = parseInt(data.promotion_discount);

                                            gridData[sel_idx].flag_no = 2;
                                        }


                                    } else {
                                        gridData[sel_idx].discount = 0;
                                    }


                                } else {
                                    swal("Warning", "please give quantity greater minimun " + data.lifting_quantity_for_promotion + " for this promotion", "warning");
                                    return false;
                                }
                            }
                        });

                    }
                });
        }


        // promotion gift grid portion---------------(Start)------------------

        var samplePromotionGiftData = [];
        var samplePromotionGiftDataNextID = samplePromotionGiftData.length + 1;

        function getIndexById(id) {
            var l = samplePromotionGiftData.length;

            for (var j = 0; j < l; j++) {
                if (samplePromotionGiftData[j].promotion_details_id == id) {
                    return j;
                }
            }
            return null;
        }



        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function (e) {
                    e.success(samplePromotionGiftData);
                },
                create: function (e) {

                    // assign an ID to the new item
                    e.data.promotion_details_id = samplePromotionGiftDataNextID++;
                    // save data item to the original datasource

                    var gridData = samplePromotionGiftData;
                    var totalNumber = samplePromotionGiftData.length;
                    var count = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        var productId = gridData[i].product_id;
                        var colorId = gridData[i].color_id;
                        var productVersionId = gridData[i].product_version_id;
                        if (e.data.product_id === productId && e.data.color_id === colorId && e.data.product_version_id === productVersionId) {
                            count++;
                        }
                    }
                    // Check Requisition Validation
                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);
                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }
                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {

                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }


                    if (count > 0) {
                        sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");

                        return false;
                    } else {


                        var promotionGiftProductId = e.data.product_id;
                        var promotionGiftQuantity = parseInt(e.data.quantity);
                        var promotionQuantity = 0;

                        if (samplePromotionGiftData.length > 0) {
                            $.each(samplePromotionGiftData, function (key, value) {
                                if (value.product_id == promotionGiftProductId) {
                                    promotionGiftQuantity += parseInt(value.quantity);
                                }
                            });
                        }

                        var promotionListGrid = $("#PromotionList").data("kendoGrid")._data;


                        if (promotionListGrid.length > 0) {
                            $.each(promotionListGrid, function (key, value) {
                                if (value.product_id == promotionGiftProductId) {
                                    promotionQuantity += parseInt(value.gift_quantity);
                                }
                            });
                        }

                        if (promotionGiftQuantity > promotionQuantity) {
                            sweetAlert("Sorry...", "You can not exceed promoted quantity !!!", "warning");
                            return false;
                        } else {
                            samplePromotionGiftData.push(e.data);
                            e.success(e.data);
                            return true;
                        }

                    }


                },
                update: function (e) {

                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);
                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }

                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {
                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }

                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }


                    else {



                        var promotionGiftProductId = e.data.product_id;
                        var promotionGiftQuantity = parseInt(e.data.quantity);
                        var promotionQuantity = 0;

                        var promotionGiftGrid = $("#PromotionGiftGrid").data("kendoGrid")._data;

                        if (promotionGiftGrid.length > 0) {
                            $.each(promotionGiftGrid, function (key, value) {
                                if (value.product_id == promotionGiftProductId) {
                                    promotionGiftQuantity += parseInt(value.quantity);
                                }
                            });
                        }

                        var promotionListGrid = $("#PromotionList").data("kendoGrid")._data;

                        if (promotionListGrid.length > 0) {
                            $.each(promotionListGrid, function (key, value) {
                                if (value.product_id == promotionGiftProductId) {
                                    promotionQuantity += parseInt(value.gift_quantity);
                                }
                            });
                        }

                        promotionGiftQuantity -= parseInt(e.data.quantity);
                        if (promotionGiftQuantity > promotionQuantity) {
                            sweetAlert("Sorry...", "You can not exceed promoted quantity !!!", "warning");
                            return false;
                        } else {
                            samplePromotionGiftData[getIndexById(e.data.promotion_details_id)] = e.data;
                            e.success();
                        }

                    }


                },
                destroy: function (e) {
                    // locate item in original datasource and remove it
                    samplePromotionGiftData.splice(getIndexById(e.data.promotion_details_id), 1);
                    // on success
                    e.success();
                    var entityGrid = $("#PromotionGiftGrid").data("kendoGrid");
                    var gridData = entityGrid.dataSource.data();
                    var totalNumber = gridData.length;
                    var amount = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        amount += +parseFloat(gridData[i].line_total).toFixed(2);
                    }

                    //$("#total_invoice_amount").val(amount);

                    //gridOfPromotion(e.data.has_serial);


                }
            },
            error: function (e) {
                // handle data operation error
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "promotion_details_id",
                    fields: {
                        promotion_details_id: { editable: false, nullable: true },
                        product_id: { field: "product_id", type: "integer" },
                        product_name: { type: "string" },
                        product_category_id: { field: "product_category_id", type: "integer" },
                        product_category_name: { type: "string", editable: false },
                        unit_id: { field: "unit_id", type: "integer" },
                        unit_name: { type: "string" },
                        brand_id: { field: "brand_id", type: "integer" },
                        brand_name: { type: "string", editable: false },
                        quantity: { type: "string" },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        product_version_id: { field: "product_version_id", type: "integer" },
                        product_version_name: { type: "string" },
                        price_ori: { type: "number" },
                        price: { type: "number" },
                        mrp_cost: { type: "number" },
                        dealer_cost: { type: "number" },
                        b2b_cost: { type: "number" },
                        retailer_cost: { type: "number" },
                        internal_cost: { type: "number" },
                        discount_amount: { type: "string" },
                        amount: { type: "string" },
                        discount: { type: "number" },
                        dis_amt: { type: "string" },
                        line_total: { type: "string" },
                        promotion_master_id: { field: "promotion_master_id", type: "integer" },
                        promotion_name: { type: "string" },
                        has_serial: { type: "boolean" },
                        flag_no: { type: "number" }
                    }
                }
            }
        });

        //Requisition Grid
        $("#PromotionGiftGrid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            toolbar: ["create"],
            selectable: true,
            save: function (data) {

            },

            cancel: function (data) {


            },
            columns: [
                { field: "product_id", title: "Product", template: "#= product_name #", editor: productGiftDropDownEditor, width: "130px" },
                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorGiftDropDownEditor, width: "100px" },
                { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionGiftDropDownEditor, width: "100px" },
                { field: "quantity", title: "Quantity", width: "50px" },
                //{ field: "promotion_master_id", title: "Promotion", template: "#= promotion_name #", editor: promotionDropDownEditor, width: "100px" },
                //{ field: "price", title: "Price", width: "50px" },
                //{ field: "discount_amount", title: "Incentive Amount", width: "50px" },
                //{ field: "amount", title: "Amount", width: "50px" },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
            ],
            editable: "inline"
        });


        //template for product comboBox
        function productGiftDropDownEditor(container, options) {
            var uomDataGrid = $("#PromotionList").data("kendoGrid")._data;
            var models = $.unique(uomDataGrid.map(function (d) { return d; }));

            var events = uomDataGrid;

            var result = events.reduce(function (memo, e1) {
                var matches = memo.filter(function (e2) {
                    return e1.product_id == e2.product_id
                })
                if (matches.length == 0)
                    memo.push(e1)
                return memo;
            }, [])

            console.log(result);

            console.log(models);
            jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: result,

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        pId = dataItem.product_id;

                        console.log(dataItem.product_name);
                        var grid = $("#PromotionGiftGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_id = dataItem.product_id,
                        gridData[sel_idx].product_name = dataItem.product_name;


                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductsWiseFirstColorVersion", "Product")",
                            data: {
                                product_id: pId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {
                                gridData[sel_idx].color_id = data.color_id;
                                $("#colorId").data("kendoComboBox").value(gridData[sel_idx].color_id);
                                gridData[sel_idx].color_name = data.color_name;
                                gridData[sel_idx].product_version_id = data.product_version_id;
                                gridData[sel_idx].product_version_name = data.product_version_name;
                                $("#productversionId").data("kendoComboBox").value(gridData[sel_idx].product_version_id);
                                gridData[sel_idx].mrp_cost = data.mrp_cost;
                                gridData[sel_idx].dealer_cost = data.dealer_cost;
                                gridData[sel_idx].b2b_cost = data.b2b_cost;
                                gridData[sel_idx].retailer_cost = data.retailer_cost;
                                gridData[sel_idx].internal_cost = data.internal_cost;

                                gridData[sel_idx].has_serial = data.has_serial;

                            }
                        });

                        //Load Promotion

                        var cId = 11;

                        $("#promotionId").kendoComboBox({
                            autoBind: true,
                            placeholder: "--- Select Promotion ---",
                            dataTextField: "promotion_name",
                            dataValueField: "promotion_master_id",
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetPromotionInfoDropdown", "Promotion")",
                                        data: { product_id: pId, channel_id: cId }
                                    }
                                }
                            },
                            change: function (e) {

                                var dataItem = this.dataItem(e.item);

                                //console.log(dataItem.product_name);
                                var grid = $("#PromotionGiftGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].promotion_master_id = dataItem.promotion_master_id,
                                gridData[sel_idx].promotion_name = dataItem.promotion_name;
                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("GetPromotinByPromotionId", "Promotion")",
                                    data: {
                                        promotion_master_id: dataItem.promotion_master_id,
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        gridData[sel_idx].promotion_type = data.promotion_type;
                                    }
                                });

                            }
                        });

                    }
                });
        }


        //template for color comboBox
        function colorGiftDropDownEditor(container, options) {
            jQuery('<input id="colorId" data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    cascadeFrom: "productId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetProductwiseColor", "ProductPriceing")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        cId = dataItem.color_id;

                        console.log(dataItem.product_name);
                        var grid = $("#PromotionGiftGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        var vId = gridData[sel_idx].product_version_id;

                        gridData[sel_idx].color_id = dataItem.color_id,
                        gridData[sel_idx].color_name = dataItem.color_name;

                        var pid = 8;
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                            data: {
                                party_type_id: pid,
                                product_id: pId,
                                color_id: cId,
                                product_version_id: vId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {

                                gridData[sel_idx].mrp_cost = data.mrp_cost;
                                gridData[sel_idx].dealer_cost = data.dealer_cost;
                                gridData[sel_idx].b2b_cost = data.b2b_cost;
                                gridData[sel_idx].retailer_cost = data.retailer_cost;
                                gridData[sel_idx].internal_cost = data.internal_cost;


                            }
                        });

                        //load version dropdown by product && color wise
                        $("#productversionId").kendoComboBox({
                            autoBind: true,
                            placeholder: "--- Select Version ---",
                            dataTextField: "product_version_name",
                            dataValueField: "product_version_id",
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetProductColorwiseVersion", "ProductPriceing")",
                                        data: { aa: pId, bb: cId }
                                    }
                                }
                            },
                            change: function (e) {

                                var dataItem = this.dataItem(e.item);

                                //////////////////////23.01.2017 start//////////////////////
                                //to get party type, product, color and version wise price
                                var partyTypeId = 8;
                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                                    data: {
                                        party_type_id: partyTypeId,
                                        product_id: pId,
                                        color_id: cId,
                                        product_version_id: dataItem.product_version_id
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        gridData[sel_idx].mrp_cost = data.mrp_cost;
                                        gridData[sel_idx].dealer_cost = data.dealer_cost;
                                        gridData[sel_idx].b2b_cost = data.b2b_cost;
                                        gridData[sel_idx].retailer_cost = data.retailer_cost;
                                        gridData[sel_idx].internal_cost = data.internal_cost;
                                    }
                                });
                                //////////////////////23.01.2017 end//////////////////////

                                var grid = $("#PromotionGiftGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                gridData[sel_idx].product_version_name = dataItem.product_version_name;

                            }
                        });
                    }
                });
        }

        //load all version
        function productVersionGiftDropDownEditor(container, options) {

            jQuery('<input id="productversionId" data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductVersionForDropDown", "ProductVersion")",

                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        var grid = $("#PromotionGiftGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_version_id = dataItem.product_version_id,
                            gridData[sel_idx].product_version_name = dataItem.product_version_name;


                    }
                });
        }

        // promotion gift grid portion-----------------(End)--------------------

        function gridOfPromotion(serial) {

            var promotionArray = [];

            var grido = $("#RequisitionDetailsGrid").data("kendoGrid")._data;
            if (grido.length == 0) {

                imeiDataForSummaryGrid = [];
                imeiDataForImeiGrid = [];
                $("#RequisitionSummaryGrid").data("kendoGrid").dataSource.data([ ]);

                $("#RequisitionIMEIGrid").data("kendoGrid").dataSource.data([ ]);

                $("#PromotionList").data("kendoGrid").dataSource.data([ ]);

            }
            for (var r = 0; r < grido.length; r++) {
                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetPromotionInformation", "Promotion")",
                    data: {
                        product_id: grido[r].product_id,
                        promotion_master_id: grido[r].promotion_master_id,
                        quantity: grido[r].quantity
                    },
                    dataType: "json",
                    contentType: "application/json",
                    success: function(data) {
                        //console.log(data);
                        //grid start
                        //alert(data);
                        if (data != null) {

                            var ccc = true;

                            for (var t = 0; t < data.length; t++) {
                                //alert(data[t].has_serial);
                                var productSummary = {
                                    product_name: data[t].product_name,
                                    product_id: data[t].product_id,
                                    promotion_details_id: data[t].promotion_details_id,
                                    promotion_master_id: data[t].promotion_master_id,
                                    gift_quantity: data[t].gift_quantity,
                                    price: 0,
                                    line_total: 0,
                                    product_category_id: data[t].product_category_id,
                                    product_category_name: data[t].product_category_name,
                                    color_name: '',
                                    product_version_name: '',
                                    has_serial:data[t].has_serial
                                };


                                promotionArray.push(productSummary);

                            }

                            //alert(promotionArray);
                            promotionGid(promotionArray);


                        }
                    }
                });
            }

        }

        function promotionGid(gridData) {
            var dataSource3 = new kendo.data.DataSource({
                transport: {
                    read: function(e) {
                        e.success(gridData);
                    },
                    update: function(e) {
                        e.success();
                    },
                },
                pageSize: 10,
                batch: false,
                schema: {
                    model: {
                        id: "promotion_details_id",
                        fields: {
                            promotion_details_id: { editable: false, nullable: true },
                            product_id: { field: "product_id", type: "integer", editable: false },
                            product_name: { type: "string", editable: false },
                            product_category_id: { field: "product_category_id", type: "integer" },
                            product_category_name: { type: "string", editable: false },
                            unit_id: { field: "unit_id", type: "integer" },
                            unit_name: { type: "string" },
                            promotion_master_id: { type: "integer" },
                            brand_name: { type: "string", editable: false },
                            gift_quantity: { type: "string", editable: false },
                            color_id: { field: "color_id", type: "integer" },
                            color_name: { type: "string" },
                            product_version_id: { field: "product_version_id", type: "integer" },
                            product_version_name: { type: "string" },
                            price: { type: "number", editable: false },
                            line_total: { type: "string", editable: false },
                            has_serial: {type: "boolean"}
                        }
                    }
                }
            });

            $("#PromotionList").kendoGrid({
                dataSource: dataSource3,
                pageable: true,
                selectable: true,

                columns: [
                    { field: "product_name", title: "Product", width: "100px" },
                    //{ field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditorForPromotion, width: "100px" },
                    //{ field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditorForPromotion, width: "100px" },
                    { field: "gift_quantity", title: "Quantity", width: "100px" },
                    //{ field: "price", title: "Price", width: "50px" },
                    //{ field: "line_total", title: "Total Amount", width: "70px" },
                    //{ command: ["edit"], title: "&nbsp;", width: "110px" }
                ],
                editable: "inline"
            });

            function colorDropDownEditorForPromotion(container, options) {
                jQuery('<input id="colorIdPromotion" required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoComboBox({
                        autoBind: true,
                        placeholder: "-Select-",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "@UrlConfig.Action("GetAllColors", "Color")",
                                    type: "GET"
                                }
                            }

                        },

                        change: function(e) {
                            var dataItem = this.dataItem(e.item);
                            var cId = dataItem.color_id;

                            console.log(dataItem.product_name);
                            var grid = $("#PromotionList").data("kendoGrid");
                            var sel = grid.select();
                            var sel_idx = sel.index();
                            var gridData = grid.dataSource.data();
                            var vId = gridData[sel_idx].product_version_id;

                            //alert(dataItem.color_id);
                            //alert(dataItem.color_name);
                            gridData[sel_idx].color_id = dataItem.color_id,
                                gridData[sel_idx].color_name = dataItem.color_name;

                            var pId = gridData[sel_idx].product_id;

                            //load version dropdown by product && color wise
                            $("#productversionIdPromotion").kendoComboBox({
                                autoBind: true,
                                placeholder: "--- Select Version ---",
                                dataTextField: "product_version_name",
                                dataValueField: "product_version_id",
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@UrlConfig.Action("GetProductColorwiseVersion", "ProductPriceing")",
                                            data: { aa: pId, bb: cId }
                                        }
                                    }
                                },
                                change: function(e) {

                                    var dataItem = this.dataItem(e.item);
                                    //////////////////////23.01.2017 end//////////////////////

                                    var grid = $("#PromotionList").data("kendoGrid");
                                    var sel = grid.select();
                                    var sel_idx = sel.index();
                                    var gridData = grid.dataSource.data();
                                    //alert(dataItem.product_version_id);
                                    //alert(dataItem.product_version_name);
                                    gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                        gridData[sel_idx].product_version_name = dataItem.product_version_name;

                                }
                            });
                        }
                    });
            }

            //load all version
            function productVersionDropDownEditorForPromotion(container, options) {

                jQuery('<input id="productversionIdPromotion" required data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoComboBox({
                        autoBind: true,
                        placeholder: "-Select-",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "@UrlConfig.Action("GetAllProductVersionForDropDown", "ProductVersion")",

                                    type: "GET"
                                }
                            }

                        },

                        change: function (e) {
                            var dataItem = this.dataItem(e.item);
                            var grid = $("#PromotionList").data("kendoGrid");
                            var sel = grid.select();
                            var sel_idx = sel.index();
                            var gridData = grid.dataSource.data();
                            gridData[sel_idx].product_version_id = dataItem.product_version_id,
                            gridData[sel_idx].product_version_name = dataItem.product_version_name;


                        }
                    });
            }
        }

        //end

        //start IMEI scan textbox onchange

        var imeiDataForSummaryGrid = [];
        var imeiDataForImeiGrid = [];

        $('#daynamicPanel :input').live('keyup', function (e) {

            if (e.keyCode === 13) {
                $(this).trigger("enterKey");
                var id = this.id;
                Loading(false);
                var gridOfPromotion = [];
                var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;
                for (var p = 0; p < grid.length; p++) {
                    if (grid[p].promotion_master_id != null && grid[p].promotion_type == "Product") {
                        gridOfPromotion = $("#PromotionGiftGrid").data("kendoGrid").dataSource.data();


                    }
                }
                var imei = $("#imei_scan").val();
                var warehouseId = $("#warehouse_from").val();

                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetImeiForOnlineRequisitionDelivery", "OnlineRequisition")?imei=" + imei + "&warehouseId=" + warehouseId,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {

                        if (data != null) {
                            var count = 0;
                            var promotion = 0;
                            var checkQuantity = false;
                            for (var i = 0; i < grid.length; i++) {


                                var gColId = grid[i].color_id;
                                var gQuant = grid[i].quantity;
                                var gPId = grid[i].product_id;
                                var gVerId = grid[i].product_version_id;

                                if (data.product_id == gPId && data.color_id == gColId && data.product_version_id == gVerId) {

                                    //for summary

                                    var productSummary = {
                                        product_name: grid[i].product_name,
                                        color_name: grid[i].color_name,
                                        version: grid[i].product_version_name,
                                        product_id: grid[i].product_id,
                                        color_id: grid[i].color_id,
                                        product_version_id: grid[i].product_version_id,
                                        qty: 1
                                    };

                                    //for imei grid

                                    var productImei = {

                                        receive_serial_no_details_id: data.receive_serial_no_details_id,
                                        product_name: grid[i].product_name,
                                        color_name: grid[i].color_name,
                                        version: grid[i].product_version_name,
                                        product_id: grid[i].product_id,
                                        color_id: grid[i].color_id,
                                        product_version_id: grid[i].product_version_id,
                                        imei: data.imei_no,
                                        imei2: data.imei_no2,
                                        flag: 1,
                                        is_gift:false
                                    };

                                    var checkDuplicate = duplicate(imeiDataForImeiGrid, imei);
                                    if (checkDuplicate) {
                                        swal("Exception", "IMEI already exist in list !!", "warning");
                                        return false;
                                    }
                                    else {
                                        if (sumGridQuantity(gPId,gColId,gVerId)) {
                                            checkQuantity = true;
                                        } else {
                                            imeiDataForImeiGrid.push(productImei);
                                            imeiList(imeiDataForImeiGrid);

                                            var k = pushInsummaryList(imeiDataForSummaryGrid, productSummary);
                                            console.log(productSummary);
                                            imeiDataForSummaryGrid.push(k);
                                            summary(imeiDataForSummaryGrid);

                                            promotion = 1;
                                        }
                                    }


                                    count = 1;
                                }

                            }
                            //For Promotion
                            if (promotion == 0) {
                                for (var p = 0; p < gridOfPromotion.length; p++) {


                                    var gColId1 = gridOfPromotion[p].color_id;
                                    var gQuant1 = gridOfPromotion[p].quantity;
                                    var gPId1 = gridOfPromotion[p].product_id;
                                    var gVerId1 = gridOfPromotion[p].product_version_id;

                                    if (data.product_id == gPId1 && data.color_id == gColId1 && data.product_version_id == gVerId1) {

                                        //for summary

                                        var productSummary1 = {
                                            product_name: gridOfPromotion[p].product_name,
                                            color_name: gridOfPromotion[p].color_name,
                                            version: gridOfPromotion[p].product_version_name,
                                            product_id: gridOfPromotion[p].product_id,
                                            color_id: gridOfPromotion[p].color_id,
                                            product_version_id: gridOfPromotion[p].product_version_id,
                                            qty: 1
                                        };

                                        //for imei grid

                                        var productImei1 = {

                                            receive_serial_no_details_id: data.receive_serial_no_details_id,
                                            product_name: gridOfPromotion[p].product_name,
                                            color_name: gridOfPromotion[p].color_name,
                                            version: gridOfPromotion[p].product_version_name,
                                            product_id: gridOfPromotion[p].product_id,
                                            color_id: gridOfPromotion[p].color_id,
                                            product_version_id: gridOfPromotion[p].product_version_id,
                                            imei: data.imei_no,
                                            imei2: data.imei_no2,
                                            flag: 2,
                                            is_gift:true
                                        };

                                        var checkDuplicate1 = duplicate(imeiDataForImeiGrid, imei);
                                        if (checkDuplicate1) {
                                            swal("Exception", "IMEI already exist in list !!", "warning");
                                            return false;
                                        }
                                        else {
                                            if (sumGridQuantityPromo(gPId1,gColId1,gVerId1)) {
                                                checkQuantity = true;
                                            } else {
                                                imeiDataForImeiGrid.push(productImei1);
                                                imeiList(imeiDataForImeiGrid);

                                                var k1 = pushInsummaryList(imeiDataForSummaryGrid, productSummary1);
                                                console.log(productSummary);
                                                imeiDataForSummaryGrid.push(k1);
                                                summary(imeiDataForSummaryGrid);

                                                checkQuantity = false;
                                            }

                                        }


                                        count = 1;
                                    }

                                }
                            }
                            //alert(count);
                            if (count == 0) {
                                swal("Exception", "IMEI not exist in list !!", "warning");
                                return false;
                            }
                            if (checkQuantity == true) {
                                swal("Exception", "Scan Quantity can not be over Requisition Quantity!!", "warning");
                                return false;
                            }
                        }
                        else {
                            swal("Exception", "IMEI not exist in list !!", "warning");
                            return false;
                        }

                    }
                });


                $("#" + id + "").val("");
            }
        });

        function sumGridQuantity(pId, cId, vId) {

            var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;
            var gridOfPromotion = [];

            var count = 0;
            var count1 = 0;
            for (var i = 0; i < grid.length; i++) {
                if (pId == grid[i].product_id && cId == grid[i].color_id && vId == grid[i].product_version_id) {
                    count += parseFloat(grid[i].quantity);
                }

            }
            for (var j = 0; j < imeiDataForImeiGrid.length; j++) {
                if (pId == imeiDataForImeiGrid[j].product_id && cId == imeiDataForImeiGrid[j].color_id && vId == imeiDataForImeiGrid[j].product_version_id && imeiDataForImeiGrid[j].flag == 1) {
                    count1 += 1;
                }
            }

            if (count == count1) {
                return true;
            } else {
                return false;
            }
        }

        function sumGridQuantityPromo(pId, cId, vId) {

            var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;
            var gridOfPromotion = [];

            var count = 0;
            var count1 = 0;

            for (var p = 0; p < grid.length; p++) {
                if (grid[p].promotion_master_id != null && grid[p].promotion_type == "Product") {
                    gridOfPromotion = $("#PromotionGiftGrid").data("kendoGrid")._data;
                }
            }
            for (var w = 0; w < gridOfPromotion.length; w++) {
                if (pId == gridOfPromotion[w].product_id && cId == gridOfPromotion[w].color_id && vId == gridOfPromotion[w].product_version_id) {
                    count += parseFloat(gridOfPromotion[w].quantity);
                }

            }
            for (var j = 0; j < imeiDataForImeiGrid.length; j++) {
                if (pId == imeiDataForImeiGrid[j].product_id && cId == imeiDataForImeiGrid[j].color_id && vId == imeiDataForImeiGrid[j].product_version_id && imeiDataForImeiGrid[j].flag == 2) {
                    count1 += 1;
                }
            }
            if (count == count1) {
                return true;
            } else {
                return false;
            }
        }


        function duplicate(list, imei) {
            if (!list) {
                return false;
            } else {
                for (var i = 0; i < list.length; i++) {
                    if (list[i].imei == imei || list[i].imei2 == imei) {
                        return true;
                    }
                }
                return false;
            }
        }

        function pushInsummaryList(list, summaryObject) {
            if (!list) {
                return summaryObject;
            } else {
                //alert(list.length);
                var ttt = null;
                if (list.length == 0) {
                    ttt = summaryObject;
                } else {
                    for (var i = 0; i < list.length; i++) {
                        if (list[i].product_id == summaryObject.product_id && list[i].color_id == summaryObject.color_id && list[i].product_version_id == summaryObject.product_version_id) {
                            var pp = list[i].qty + 1;

                            list.splice(i, 1);
                            //alert(ver);
                            var o = {
                                product_name: summaryObject.product_name,
                                color_name: summaryObject.color_name,
                                version: summaryObject.version,
                                product_id: summaryObject.product_id,
                                color_id: summaryObject.color_id,
                                product_version_id: summaryObject.product_version_id,
                                qty: pp
                            };
                            ttt = o;
                        } else {
                            ttt = summaryObject;
                        }
                    }
                }

                return ttt;

            }
        }


        function summary(list) {
            console.log(list);
            var dataSource1 = new kendo.data.DataSource({
                pageSize: 20,
                transport: {
                    read: function (f) {
                        f.success(list);
                    }
                },

                autoSync: false,
                schema: {
                    errors: function (e) {
                        console.log(e.errors);
                        //alert(e.error);
                        if (e.output === "error") {
                            console.log(e.output);
                            //KendoWindowFunction(e.msg, "error", "");
                            // this.cancelChanges();
                        }

                    },

                    model: {
                        id: "id",
                        fields: {
                            id: { editable: false, nullable: true },
                            product_id: { type: "number" },
                            color_id: { type: "number" },
                            product_version_id: { type: "number" },
                            product_name: { type: "string" },
                            color_name: { type: 'string' },
                            version: { type: "string" },
                            qty: { type: "number", editable: false },
                        }

                    }
                }

            });
            jQuery("#RequisitionSummaryGrid").kendoGrid({
                dataSource: dataSource1,
                scrollable: true,
                filterable: true,
                pageable: {
                    refresh: true,
                    input: true,
                    pageSize: 20,
                    numeric: false,
                    pageSizes: [10, 20, 50]
                },

                sortable: true,
                resizable: true,


                columns: [
                    { field: "product_name", title: "Product", width: "50px" },
                    { field: "color_name", title: "Color", width: "50px" },
                    { field: "version", title: "Version", width: "50px" },
                    { field: "qty", title: "Qty", width: "50px" }

                ],
                editable: "inline"
            });
        }

        function deleteSummaryGridData(pId, colId, verId) {
            // alert("asdasdasd");
            var objectNew = "";
            var l = imeiDataForSummaryGrid.length;

            for (var j = 0; j < l; j++) {
                //alert("inside for");
                if (imeiDataForSummaryGrid[j].product_id == pId && imeiDataForSummaryGrid[j].color_id == colId && imeiDataForSummaryGrid[j].product_version_id == verId) {
                    // alert("inside if");
                    var pp = imeiDataForSummaryGrid[j].qty - 1;
                    if (pp == 0) {
                        imeiDataForSummaryGrid.splice(j, 1);
                        summary(imeiDataForSummaryGrid);
                        break;
                    } else {
                        var o = {
                            product_name: imeiDataForSummaryGrid[j].product_name,
                            color_name: imeiDataForSummaryGrid[j].color_name,
                            version: imeiDataForSummaryGrid[j].version,
                            product_id: imeiDataForSummaryGrid[j].product_id,
                            color_id: imeiDataForSummaryGrid[j].color_id,
                            product_version_id: imeiDataForSummaryGrid[j].product_version_id,
                            qty: pp
                        };
                        imeiDataForSummaryGrid.splice(j, 1);
                        imeiDataForSummaryGrid.push(o);
                        summary(imeiDataForSummaryGrid);
                        break;
                    }

                }
            }
            return null;
        }

        //IMEI GRID

        function getImeiGridData(receive_serial_no_details_id) {

            var l = imeiDataForImeiGrid.length;

            for (var j = 0; j < l; j++) {
                if (imeiDataForImeiGrid[j].receive_serial_no_details_id == receive_serial_no_details_id) {

                    deleteSummaryGridData(imeiDataForImeiGrid[j].product_id, imeiDataForImeiGrid[j].color_id, imeiDataForImeiGrid[j].product_version_id);

                    return j;
                }
            }
            return null;
        }


        function imeiList(list) {
            var dataSource2 = new kendo.data.DataSource({
                pageSize: 20,
                transport: {
                    read: function (f) {
                        f.success(list);
                    },
                    destroy: function (f) {

                        imeiDataForImeiGrid.splice(getImeiGridData(f.data.receive_serial_no_details_id), 1);

                        f.success();

                    }
                },

                autoSync: false,
                schema: {
                    errors: function (e) {
                        console.log(e.errors);
                        //alert(e.error);
                        if (e.output === "error") {
                            console.log(e.output);
                            //KendoWindowFunction(e.msg, "error", "");
                            // this.cancelChanges();
                        }

                    },

                    model: {
                        id: "receive_serial_no_details_id",
                        fields: {
                            receive_serial_no_details_id: { editable: false, nullable: true },
                            product_id: { type: "number" },
                            color_id: { type: "number" },
                            product_version_id: { type: "number" },
                            product_name: { type: "string" },
                            color_name: { type: 'string' },
                            version: { type: "string" },
                            imei: { type: "string" },
                            imei2: { type: "string" },
                            flag: { type: "number" },
                            is_gift:{type:"boolean"}
                        }

                    }
                }

            });
            jQuery("#RequisitionIMEIGrid").kendoGrid({
                dataSource: dataSource2,
                scrollable: true,
                filterable: true,
                pageable: {
                    refresh: true,
                    input: true,
                    pageSize: 20,
                    numeric: false,
                    pageSizes: [10, 20, 50]
                },

                sortable: true,
                resizable: true,

                columns: [
                    { field: "product_name", title: "Product", width: "50px" },
                    { field: "color_name", title: "Color", width: "50px" },
                    { field: "version", title: "Version", width: "50px" },
                    { field: "imei", title: "IMEI 1", width: "50px" },
                    { field: "imei2", title: "IMEI 2", width: "50px" },
                    { command: ["destroy"], title: "&nbsp;", width: "50px" }
                ],
                editable: "inline"
            });
        }



        //Button event start

        function checkQuantity(grid, summary, promotionList) {

            var check = false;
            var count = 0;
            for (var i = 0; i < grid.length; i++) {
                //alert(grid[i].has_serial);
                if (grid[i].has_serial == true) {

                    count = count + parseFloat(grid[i].quantity);
                }
            }
            for (var j = 0; j < promotionList.length; j++) {
                //alert(promotionList[j].has_serial);
                if (promotionList[j].has_serial == true) {
                    count = count + parseFloat(promotionList[j].quantity);
                }
            }


            if (count == summary.length) {
                check = true;
            } else {
                check = false;
            }
            return check;

        }


        $("#btnSaveRequisition").click(function () {

            var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;

            var gridPromotion = [];
            for (var p = 0; p < grid.length; p++) {
                //alert(grid[p].promotion_master_id);
                //alert(grid[p].promotion_type);
                if (grid[p].promotion_master_id != null && grid[p].promotion_type == "Product") {
                    gridPromotion = $("#PromotionGiftGrid").data("kendoGrid")._data;
                }

            }
            var ReceiveSerialNoList = $("#RequisitionIMEIGrid").data("kendoGrid").dataSource.data();

            if (checkQuantity(grid,ReceiveSerialNoList,gridPromotion)) {

                //here
                var userId = @userId;
                var requisition_code = $('#requisition_code').val();
                var requisition_date = $('#requisition_date').val();
                var warehouse_from = $('#warehouse_from').val();
                var customerPo = $("#customer_po").val();
                var party_type_id = $('#party_type_id').val();
                var party_id = $('#party_id').val();
                var amount = $('#amount').val();
                var remarks = $('#remarks').val();
                var contact_person_mobile = $('#contact_person_mobile').val();
                var pricing = $('#pricing').val();
                var price_type = "";

                //Entry For Customer Details
                var customer_name = $("#customer_name").val();
                var mobile_no = $("#mobile_no").val();
                var customer_email = $("#email").val();
                var shipping = $("#shipping").val();
                var payment_method = $("#payment_method").val();
                var shipping_address = $("#shipping_address").val();
                var billing_address = $("#billing_address").val();

                if (customerPo == "" || customerPo == null) {
                    swal("Exception", "Insert Customer Po !!", "warning");
                    return false;
                }
                if (warehouse_from == "" || warehouse_from == 0 || warehouse_from == null) {
                    swal("Exception", "Select Warehouse !!", "warning");
                    return false;
                }
                if (pricing == "" || pricing == 0 || pricing == null) {
                    swal("Exception", "Select Pricing Type !!", "warning");
                    return false;
                }
                if (pricing == 1) {
                    price_type = "mrp_cost";
                } else {
                    price_type = "manual_cost";
                }
                if (customer_name == "" || customer_name == null) {
                    swal("Exception", "Insert Customer Name !!", "warning");
                    return false;
                }
                if (shipping == "" || shipping == null || shipping == 0) {
                    swal("Exception", "Select Shipping Method!!", "warning");
                    return false;
                }
                if (payment_method == "" || payment_method == null || payment_method == 0) {
                    swal("Exception", "Select Payment Method!!", "warning");
                    return false;
                }

                var RequisitionMaster = {
                    party_type_id: party_type_id,
                    party_id: party_id,
                    requisition_code: requisition_code,
                    requisition_date: requisition_date,
                    warehouse_from: warehouse_from,
                    amount: amount,
                    remarks: remarks,
                    region_id: 0,
                    area_id: 0,
                    credit_limit: 0,

                    contact_person_mobile: contact_person_mobile,

                    requisition_type: 'E-Shop Requisition',
                    price_type: price_type,
                    reference_no: customerPo,
                    created_by: userId,
                    updated_by: userId
                };

                var CustomerDetails = {
                    customer_name: customer_name,
                    mobile_no: mobile_no,
                    customer_email: customer_email,
                    shipping: shipping,
                    payment_method: payment_method,
                    shipping_address: shipping_address,
                    billing_address: billing_address
                };

                var RequisitionDetailses = [];
                var ProductDetailsGrid = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.data();
                for (var i = 0; i < ProductDetailsGrid.length; i++) {
                    var productDetails = {

                        product_id: ProductDetailsGrid[i].product_id,
                        unit_id: ProductDetailsGrid[i].unit_id,
                        brand_id: ProductDetailsGrid[i].brand_id,
                        product_category_id: ProductDetailsGrid[i].product_category_id,
                        price: ProductDetailsGrid[i].price,
                        quantity: ProductDetailsGrid[i].quantity,
                        color_id: ProductDetailsGrid[i].color_id,
                        discount_amount: ProductDetailsGrid[i].discount_amount,
                        discount: ProductDetailsGrid[i].discount,//28.Nov.2016
                        line_total: ProductDetailsGrid[i].line_total,
                        product_version_id: ProductDetailsGrid[i].product_version_id,
                        promotion_master_id: ProductDetailsGrid[i].promotion_master_id
                    };
                    RequisitionDetailses.push(productDetails);
                }

                //Promotion Add
                for (var k = 0; k < gridPromotion.length; k++) {
                    var promoDetails = {
                        product_id: gridPromotion[k].product_id,
                        price: gridPromotion[k].price,
                        quantity: gridPromotion[k].quantity,
                        color_id: gridPromotion[k].color_id,
                        is_gift: true,
                        line_total: gridPromotion[k].line_total,
                        product_version_id: gridPromotion[k].product_version_id
                    };
                    RequisitionDetailses.push(promoDetails);
                }

                //dadadadadadadadadadad
                var ReceiveSerialNoDetails = [];
                var ReceiveSerialNo = $("#RequisitionIMEIGrid").data("kendoGrid").dataSource.data();
                for (var j = 0; j < ReceiveSerialNo.length; j++) {
                    var serial = {
                        imei_no: ReceiveSerialNo[j].imei,
                        is_gift: ReceiveSerialNo[j].is_gift
                    };
                    ReceiveSerialNoDetails.push(serial);
                }

                var EshopRequisitionModel = {
                    RequisitionMaster: RequisitionMaster,
                    RequisitionDetailses: RequisitionDetailses,
                    ReceiveSerialNoDetails: ReceiveSerialNoDetails,
                    EshopCutomerRequisition:CustomerDetails
                };
                console.log(EshopRequisitionModel);
                $.ajax({
                    type: "POST",
                    url: "@UrlConfig.Action("Post", "EshopRequisition")",
                    data: JSON.stringify(EshopRequisitionModel),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        Loading(false);
                        console.log(EshopRequisitionModel);
                        swal("Success", "E-Shop Requisition Save And Delivered Successfully", "success");

                        //$.ajax({
                        //    url: 'GetOnlineDeliveryChallanReport',
                        //    data: {
                        //        delivery_master_id: data
                        //    }
                        //});
                        //var url = "/OnlineRequisition/GetOnlineDeliveryChallanReport?delivery_master_id=" + data;
                        //window.open(url, '_blank');
                        window.location.href = '/EShopRequisition/Index';
                        return false;
                    }
                });
                return true;
            }

            else {
                swal("Exception", "Quantity doesn't match requisition and delivery !!", "warning");
                return false;
            }

        });

    });
</script>
