@{
    ViewBag.Title = "Add";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }

}
<script type="text/javascript">
    var userId = @userId;
</script>

<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">Promotion Master</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="promotion_name">Promotion Name</label>
                    </div>
                    <div class="col-md-3">
                        <input id="promotion_name" name="promotion_name" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <input type="checkbox" id="is_active" class="k-checkbox">
                        <label class="k-checkbox-label" for="is_active">Is Active?</label>
                    </div>
                    <div class="col-md-3">

                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="promotion_description">Description</label>
                    </div>
                    <div class="col-md-3">
                        <textarea id="promotion_description" class="k-textbox" style="width: 100%; height: 70px"></textarea>
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">

                    </div>
                    <div class="col-md-3">

                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">Promotion Settings</div>
        <div class="panel-body">
            <div id="poDetailsGrid"></div>
        </div>
    </div>
    <div class="group-box">
        <div class="row">
            <div class="col-md-12">
                <input type="button" class="k-button" id="btnSaveUser" name="btnSaveUser" value="Save Promotion" />
            </div>
        </div>
    </div>
</div>


<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">

    //date time picker
    $(document).ready(function () {
        $('#context').addClass('animated zoomIn');

        //productList Grid---------------------
        var sampleData = [];

        // custom logic start

        var sampleDataNextID = sampleData.length + 1;

        function getIndexById(id) {
            var idx,
                l = sampleData.length;

            for (var j = 0; j < l; j++) {
                if (sampleData[j].purchase_order_details_id == id) {
                    return j;
                }
            }
            return null;
        }

        // custom logic end

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function (e) {

                    e.success(sampleData);

                },
                create: function (e) {

                    // assign an ID to the new item
                    e.data.purchase_order_details_id = sampleDataNextID++;
                    // save data item to the original datasource

                    var gridData = sampleData;
                    var totalNumber = gridData.length;
                    var count = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        var productId = gridData[i].product_id;
                        var colorId = gridData[i].color_id;
                        var quantity = gridData[i].quantity;
                        if (e.data.product_id === productId && e.data.color_id === colorId && e.data.quantity === quantity) {
                            count++;
                        }
                    }
                    if (count > 0) {
                        sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                        //e.preventDefault();
                        return false;
                    } else {
                        sampleData.push(e.data);
                        e.success(e.data);
                        console.log(sampleData);
                        return true;
                    }


                    // on success

                    // on failure
                    //e.error("XHR response", "status code", "error message");
                },
                update: function (e) {
                    // locate item in original datasource and update it
                    sampleData[getIndexById(e.data.purchase_order_details_id)] = e.data;
                    e.success();


                },
                destroy: function (e) {
                    // locate item in original datasource and remove it
                    sampleData.splice(getIndexById(e.data.purchase_order_details_id), 1);
                    // on success
                    e.success();

                }
            },
            error: function (e) {
                // handle data operation error
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "purchase_order_details_id",
                    fields: {
                        purchase_order_details_id: { editable: false, nullable: true },
                        product_id: { field: "product_id", type: "integer" },
                        product_name: { type: "string" },
                        product_category_id: { field: "product_category_id" },
                        product_category_name: { type: "string", editable: false },
                        brand_id: { field: "brand_id", type: "integer" },
                        brand_name: { type: "string", editable: false },
                        unit_id: { field: "unit_id", type: "integer" },
                        unit_name: { type: "string", editable: false },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        size_id: { field: "size_id", type: "integer" },
                        size_name: { type: "string" },
                        is_same_model: { field: "is_same_model", type: "boolean"  },
                        quantity: { type: "number" },
                        amount: { type: "number" },
                        gift_quantity: { type: "number" },
                        gift_product_id: { field: "gift_product_id", type: "integer" },
                        gift_product_name: { type: "string" },
                        rebate: { type: "number" },
                        rebate_type: { type: "string" },
                        recursive: { field: "recursive", type: "boolean"  }

                    }
                }
            }
        });



        $("#poDetailsGrid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            toolbar: ["create"],
            selectable: true,
            save: function (data) {

            },

            edit: function (e) {

            },
            cancel: function(data) {

            },
            columns: [
                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                { field: "quantity", title: "Quantity", width: "50px" },
                { field: "is_same_model", title: "Same Model", width: "50px"},
                { field: "amount", title: "Amount", width: "50px" },
                { field: "gift_quantity", title: "Gift Qty", width: "50px" },
                { field: "gift_product_id", title: "Gift Item", template: "#= gift_product_name #", editor: giftedProductDropDownEditor, width: "50px" },
                { field: "rebate", title: "Rebate", width: "50px" },
                { field: "rebate_type", title: "Rebate Type", template: "#= rebate_type #", editor: rebateTypeDropDownEditor, width: "50px" },
                { field: "recursive", title: "Reprocess", width: "50px"},

                { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
            ],
            editable: "inline"
        });


        //template for rebateTypeDropDownEditor comboBox
        function rebateTypeDropDownEditor(container, options) {
            jQuery('<input data-text-field="rebate_type" data-value-field="rebate_type" data-bind="value:' + options.field + '"/>')
                .appendTo(container)

                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataTextField: "rebate_type",
                    dataValueField: "rebate_type",
                    dataSource: [
                        { rebate_type: "Percentage" },
                        { rebate_type: "Amount" }
                    ]
                });
        }

        //template for gifted product comboBox
        function giftedProductDropDownEditor(container, options) {
            jQuery('<input data-text-field="gift_product_name" data-value-field="gift_product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)

                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductsForGiftDropdown", "Product")",
                                type: "GET"
                            }
                        }

                    },change: function (e) {
                        var dataItem = this.dataItem(e.item);

                        console.log(dataItem.product_name);
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].gift_product_id = dataItem.gift_product_id,
                        gridData[sel_idx].gift_product_name = dataItem.gift_product_name;
                        console.log(dataItem);

                    }


                });
        }


        //template for product comboBox
        function productDropDownEditor(container, options) {
            jQuery('<input data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)

                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);

                        console.log(dataItem.product_name);
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_id = dataItem.product_id,
                            gridData[sel_idx].product_name = dataItem.product_name;
                        gridData[sel_idx].product_category_id = dataItem.product_category_id;
                        gridData[sel_idx].product_category_name = dataItem.product_category_name;
                        gridData[sel_idx].brand_id = dataItem.brand_id;
                        gridData[sel_idx].brand_name = dataItem.brand_name;
                        gridData[sel_idx].unit_id = dataItem.unit_id;
                        gridData[sel_idx].unit_name = dataItem.unit_name;
                        console.log(dataItem);

                    }
                });
        }


        //template for color comboBox
        function colorDropDownEditor(container, options) {
            jQuery('<input data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)

                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllColors", "Color")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);

                        console.log(dataItem.product_name);
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].color_id = dataItem.color_id,
                            gridData[sel_idx].color_name = dataItem.color_name;


                    }
                });
        }


        //productList Grid---------------------


        $("#btnSaveUser").click(function () {
            Loading(true);

            var promotion_name = $('#promotion_name').val();
            var promotion_description = $('#promotion_description').val();

            var is_active = false;
            if ($("#is_active").is(":checked")) {
                is_active = true;
            }

            var promotionMasterData = {
                promotion_name: promotion_name,
                promotion_description: promotion_description,
                is_active: is_active,
                created_by: userId,
                updated_by: userId
            };

            var promotionDetailsList = [];
            var poDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < poDetailsGrid.length; i++) {
                var poDetails = {
                    product_id: poDetailsGrid[i].product_id,
                    color_id: poDetailsGrid[i].color_id,
                    quantity: poDetailsGrid[i].quantity,
                    is_same_model: poDetailsGrid[i].is_same_model,
                    amount: poDetailsGrid[i].amount,
                    gift_quantity: poDetailsGrid[i].gift_quantity,
                    gift_product_id: poDetailsGrid[i].gift_product_id,
                    rebate: poDetailsGrid[i].rebate,
                    rebate_type: poDetailsGrid[i].rebate_type,
                    recursive: poDetailsGrid[i].recursive

                };
                promotionDetailsList.push(poDetails);
            }

            var promotionModel = {
                PromotionMasterData: promotionMasterData,
                PromotionDetailsList: promotionDetailsList
            };

            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("Post", "Promotion")",
                data: JSON.stringify(promotionModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {

                        $("#poDetailsGrid").data("kendoGrid").dataSource.data([]);
                        sampleData = [];
                        $('#poDetailsGrid').data('kendoGrid').refresh();
                        //$('#poDetailsGrid').kendoGrid('destroy').empty();
                        //clear all text box below --------------------------------------
                        $("#promotion_name").val("");
                        $("#promotion_description").val("");
                        $("#is_active").prop('checked', false);


                        swal("Success", data.msg, "success");
                        return false;
                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });

        });

    });


</script>
