
@{
    ViewBag.Title = "Index";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }

}
<div class="panel panel-success" id="context">
    <div class="panel-heading"><h4>Accessories Category</h4></div>
    <div class="panel-body">

        <div id="grid"></div>
    </div>
</div>
<script type="text/javascript">
    var userId = @userId;
</script>
<script type="text/javascript">
    jQuery(document).ready(function () {

        var dataSource = new kendo.data.DataSource({
            pageSize: 20,
            transport: {
                read: {
                    url: "@UrlConfig.Action("GetAllAccessoriesCategory", "AccessoriesCategory")",
                    type: "GET"
                },
                update: {
                    url: "@UrlConfig.Action("Put", "AccessoriesCategory")?updated_by=" + userId,
                    type: "PUT",
                    complete: function(e) {
                        jQuery("#grid").data("kendoGrid").dataSource.read();
                        swal("", e.responseJSON.msg, e.responseJSON.output);
                    }
                },
                destroy: {
                    url: "@UrlConfig.Action("Delete", "AccessoriesCategory")?updated_by=" + userId,
                    type: "DELETE"
                },
                create: {
                    url: "@UrlConfig.Action("Post", "AccessoriesCategory")?created_by=" + userId,
                    type: "POST",
                    complete: function(e) {
                        jQuery("#grid").data("kendoGrid").dataSource.read();
                        swal("", e.responseJSON.msg, e.responseJSON.output);
                    }
                }
            },
            //    code: "Ok",
            autoSync: false,
            schema: {
                errors: function(e) {
                    console.log(e.errors);
                    //alert(e.error);
                    if (e.output === "error") {
                        console.log(e.output);
                        KendoWindowFunction(e.msg, "error", "");
                        this.cancelChanges();
                    }
                },

                model: {
                    id: "accessories_category_id",
                    fields: {
                        accessories_category_id: { editable: false, nullable: true },
                        accessories_category_name: { type: "string", validation: { required: true } },
                        price: { type: "number", validation: { required: true } },
                        is_active: { type: "boolean" }
                    }

                }

            }


        });
        //Kiron : 22-02-2017
                jQuery("#grid").kendoGrid({
                    dataSource: dataSource,
                    filterable: true,
                    pageable: {
                        refresh: true,
                        input: true,
                        pageSize: 20,
                        numeric: false,
                        pageSizes: [10, 20, 50,100,200,500,1000]
                    },
                    sortable: true,
                    groupable: true,
                    resizable: true,
                    update: true,
                    destroy: true,

                    toolbar: [{ name: "create", text: "Add Accessories Category" }],
                    columns: [
                        { field: "accessories_category_name", title: "Accessories Category Name", id: "accessories_category_id", width: "150px" },
                        { field: "price", title: "Price", width: "150px" },
                        { field: "is_active", title: "Is Active", width: "150px" },
                        { command: ["edit", "destroy"], title: "Action", width: "230px" }],
                    editable: "inline"
                });

            });
</script>



