@{
    ViewBag.Title = "Add";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }
}
<script type="text/javascript">
    var userId = @userId;
</script>

<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">GRN Info </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="mrr_no">MRR No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="mrr_no" name="mrr_no" class="k-textbox" disabled placeholder="Automatic MRR No" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="mrr_date">MRR Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="mrr_date" name="mrr_date" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="supplier_id">Supplier&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="supplier_id" name="supplier_id" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="grn_master_id">GRN No&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="grn_master_id" name="grn_master_id" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="company_id">Company&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="dropdown" name="company_id" id="company_id">
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="warehouse_id">Warehouse&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="warehouse_id" name="warehouse_id" disabled="disabled" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="lost_comment">Lost Comment&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-9">
                        <textarea cols="30" rows="2" name="lost_comment" id="lost_comment" class="k-textbox" placeholder="Enter Lost Comment"></textarea>
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-success" id="grnGrid">
        <div class="panel-heading">GRN List</div>
        <div class="panel-body">
            <div id="listGrid">
                <div class="row">
                    <div id="mrrDetailsGrid"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success" id="mrrGrid">
        <div class="panel-heading">Scan Grid</div>
        <div class="panel-body">
            <div class="row" id="daynamicPanel">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="damage_type_id">Damage Type&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="dropdown" name="damage_type_id" id="damage_type_id">
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="imei_scan"> IMEI Scan</label>
                    </div>
                    <div class="col-md-3">
                        <input id="imei_scan" name="imei_scan" class="k-textbox" placeholder="Enter IMEI" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>

    </div>

    <div class="panel panel-success" id="imeiListGrid">
        <div class="panel-heading">IMEI For MRR</div>
        <div class="panel-body">
            <div>
                <div class="row">
                    <div id="MRRIMEIGrid"></div>
                </div>
            </div>
        </div>
    </div>


</div>

<div class="group-box" id="btnDiv">
    <div class="row">
        <div class="col-md-12">
            <input type="button" class="k-button" id="btnMRR" name="btnMRR" value="Create MRR" />

        </div>
    </div>
</div>


<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnDiv").hide();
        $("#grnGrid").hide();
        $("#mrrGrid").hide();
        $("#imeiListGrid").hide();

        var countScaned=0;

        var todayDate = kendo.toString(kendo.parseDate(new Date()), 'yyyy/MM/dd');
        $("#mrr_date").val(todayDate);


        //date time picker
        $("#mrr_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "dd/MM/yyyy"
        });
        //supplier list
        $("#supplier_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Supplier ---",
            dataTextField: "supplier_name",
            dataValueField: "supplier_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllSuppliers", "Supplier")"
                    }
                }
            }

        });
        //country
        $("#company_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Company ---",
            dataTextField: "company_name",
            dataValueField: "company_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllCompany", "Company")"
                    }
                }
            }
        }).data("kendoComboBox");
        //warehouse list
        $("#warehouse_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAdaWarehouse", "Warehouse")"
                    }
                }
            }
        });
        $("#damage_type_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select damage type name ---",
            dataTextField: "damage_type_name",
            dataValueField: "damage_type_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllDamageTypes", "DamageType")"
                    }
                }
            }
        });

        $("#warehouse_id").data("kendoComboBox").value(4);

        $('#grn_master_id').change(function () {
            var grn_master_id = $('#grn_master_id').val();
            $("#mrrGrid").show();
            $("#btnDiv").show();
            var sampleData = [];
            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("GetGrnByGrnMasterId", "Mrr")?grn_master_id="+grn_master_id+"",
                dataType: "json",
                success: function (data)
                {
                    if (data != null) {
                        $("#grnGrid").show();
                        $("#company_id").data("kendoComboBox").value( data.GrnMasterData.company_id);
                        Loading(false);
                        for (var i = 0; i < data.GrnDetailsList.length; i++) {
                            var poDetails = {
                                grn_details_id: data.GrnDetailsList[i].grn_details_id,
                                product_id: data.GrnDetailsList[i].product_id,
                                product_name: data.GrnDetailsList[i].product_name,
                                purchase_order_master_id: data.GrnDetailsList[i].purchase_order_master_id,
                                unit_id: data.GrnDetailsList[i].unit_id,
                                unit_name: data.GrnDetailsList[i].unit_name,
                                unit_price: data.GrnDetailsList[i].unit_price,
                                receive_quantity: data.GrnDetailsList[i].receive_quantity,
                                mrr_qty: 0,
                                saleable_qty:data.GrnDetailsList[i].receive_quantity,
                                box_damage_quantity:0,
                                physical_damaged_quantity:0,
                                customs_lost_quantity:0,
                                total_received_quantity:data.GrnDetailsList[i].receive_quantity,
                                brand_id: data.GrnDetailsList[i].brand_id,
                                brand_name: data.GrnDetailsList[i].brand_name,
                                color_id: data.GrnDetailsList[i].color_id,
                                color_name: data.GrnDetailsList[i].color_name,
                                product_version_id: data.GrnDetailsList[i].product_version_id,
                                product_version_name: data.GrnDetailsList[i].product_version_name,
                                size_id: data.GrnDetailsList[i].size_id,
                                size_name: data.GrnDetailsList[i].size_name,
                                status: data.GrnDetailsList[i].status,
                                vat_pcnt: data.GrnDetailsList[i].vat_pcnt,
                                tax_pcnt: data.GrnDetailsList[i].tax_pcnt,
                                product_category_id: data.GrnDetailsList[i].product_category_id,
                                has_serial: data.GrnDetailsList[i].has_serial

                            };
                            sampleData.push(poDetails);
                        }

                        function getIndexById(id) {
                            var l = sampleData.length;
                            for (var j = 0; j < l; j++) {
                                if (sampleData[j].grn_details_id == id) {
                                    return j;
                                }
                            }
                            return null;
                        }

                        // custom logic end

                        var dataSource = new kendo.data.DataSource({
                            transport: {
                                read: function (e) {
                                    // on success
                                    e.success(sampleData);
                                },
                                create: function (e) {

                                },
                                update: function (e) {
                                    // locate item in original datasource and update it

                                    var strProductName = e.data.product_name;
                                    strProductName=strProductName.replace('"', '');

                                    var productColorName = strProductName +"_"+ e.data.color_name;

                                    productColorName=productColorName.replace(/ /g,"_");

                                    if ($("#grn_date").val() == "") {
                                        sweetAlert("Sorry...", "Receive Date is empty", "error");
                                        return false;
                                    }
                                    if ($("#warehouse_id").val() == "") {
                                        sweetAlert("Sorry...", "Please Select Warehouse", "error");
                                        return false;
                                    }
                                    if (e.data.receive_qty === null) {
                                        sweetAlert("Sorry...", "Receive quantity is empty", "error");
                                        return false;
                                    } else {
                                        if (e.data.receive_qty>e.data.pi_quantity) {
                                            sweetAlert("Sorry...", "Receive quantity must less then pi quantity", "error");
                                            return false;
                                        }
                                        else if($("#"+productColorName).length>0 && e.data.receive_qty > 0) {
                                            sampleData[getIndexById(e.data.grn_details_id)] = e.data;
                                            receiveSerialNoList = receiveSerialNoList.filter(function(el) {
                                                return el.product_id != e.data.product_id || el.color_id != e.data.color_id;
                                            });
                                            //console.log(receiveSerialNoList);
                                            e.success();
                                            var listData = "";

                                        }
                                    }
                                },
                                destroy: function (e) {
                                }
                            },
                            error: function (e) {
                                // handle data operation error
                                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                            },
                            pageSize: 10,
                            batch: false,
                            schema: {
                                model: {
                                    id: "grn_details_id",
                                    fields: {
                                        grn_details_id: { editable: false, nullable: true },
                                        purchase_order_master_id:{ field: "purchase_order_master_id", type: "integer" },
                                        product_id: { field: "product_id", type: "integer" },
                                        product_name: { type: "string" },
                                        product_category_id: { field: "product_category_id" },
                                        product_category_name: { type: "string", editable: false },
                                        brand_id: { field: "brand_id", type: "integer" },
                                        brand_name: { type: "string", editable: false },
                                        unit_id: { field: "unit_id", type: "integer" },
                                        unit_name: { type: "string", editable: false },
                                        color_id: { field: "color_id", type: "integer" },
                                        color_name: { type: "string" },
                                        product_version_id: { field: "product_version_id", type: "integer" },
                                        product_version_name: { type: "string" },
                                        size_id: { field: "size_id", type: "integer" },
                                        size_name: { type: "string" },
                                        pi_quantity: { type: "string" },
                                        receive_qty:{ type: "number" },
                                        unit_price: { type: "number" },
                                        amount: { type: "string", editable: true },
                                        vat_pcnt: { type: "string" },
                                        vat_amount: { type: "string", editable: true },
                                        tax_pcnt: { type: "string" },
                                        tax_amount: { type: "string", editable: true },
                                        line_total: { type: "string", editable: true },
                                        has_serial: { type: "boolean", editable: false }
                                    }
                                }
                            }
                        });



                        $("#mrrDetailsGrid").kendoGrid({
                            dataSource: dataSource,
                            pageable: true,
                            selectable: true,
                            save: function (data) {

                                var tempAmount = +data.model.receive_qty * +data.model.unit_price;
                                data.model.set("amount", tempAmount);

                                var tempVatAmount = (+data.model.amount * +data.model.vat_pcnt) / 100;
                                data.model.set("vat_amount", tempVatAmount);

                                var tempTaxAmount = (+data.model.amount * +data.model.tax_pcnt) / 100;
                                data.model.set("tax_amount", tempTaxAmount);

                                var lineTotal = +data.model.amount + +data.model.vat_amount + +data.model.tax_amount;
                                data.model.set("line_total", lineTotal);

                                var entityGrid = $("#mrrDetailsGrid").data("kendoGrid");
                                var gridData = entityGrid.dataSource.data();
                                var totalNumber = gridData.length;

                                var vatTotal = 0;
                                var taxTotal = 0;
                                var totalAmount = 0;
                                var totalAmountIncVatTax = 0;
                                var serializedQty = 0;
                                var nonSerializedQty = 0;
                                for (var i = 0; i < totalNumber; i++) {

                                    var receiveQuantity=gridData[i].receive_qty;

                                    if (receiveQuantity > 0) {
                                        vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                                        taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                                        totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                                        totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                                        if (gridData[i].has_serial == true) {
                                            serializedQty += receiveQuantity;
                                        } else {
                                            nonSerializedQty += receiveQuantity;
                                        }
                                    }

                                }
                                if (serializedQty > 0 || nonSerializedQty > 0) {
                                    $("#btnDiv").show(500);
                                } else {
                                    $("#btnDiv").hide(500);
                                }
                                $("#vat_total").val(vatTotal);
                                $("#tax_total").val(taxTotal);
                                $("#total_amount_without_vattax").val(totalAmount);
                                $("#total_amount_including_vattax").val(totalAmountIncVatTax);


                            },
                            edit: function (e) {
                                $('input[name="amount"]').attr('readonly', 'readonly');
                                $('input[name="vat_amount"]').attr('readonly', 'readonly');
                                $('input[name="tax_amount"]').attr('readonly', 'readonly');
                                $('input[name="line_total"]').attr('readonly', 'readonly');
                                $('input[name="pi_quantity"]').attr('readonly', 'readonly');
                                $('input[name="vat_pcnt"]').attr('readonly', 'readonly');
                                $('input[name="tax_pcnt"]').attr('readonly', 'readonly');
                            },
                            cancel: function(data) {

                                var tempAmount = +data.model.pi_quantity * +data.model.unit_price;
                                data.model.set("amount", tempAmount);

                                var tempVatAmount = (+data.model.amount * +data.model.vat_pcnt) / 100;
                                data.model.set("vat_amount", tempVatAmount);

                                var tempTaxAmount = (+data.model.amount * +data.model.tax_pcnt) / 100;
                                data.model.set("tax_amount", tempTaxAmount);

                                var lineTotal = +data.model.amount + +data.model.vat_amount + +data.model.tax_amount;
                                data.model.set("line_total", lineTotal);



                                var gridData = sampleData;
                                var totalNumber = gridData.length;

                                var vatTotal = 0;
                                var taxTotal = 0;
                                var totalAmount = 0;
                                var totalAmountIncVatTax = 0;
                                var serializedProduct = 0;
                                var nonSerializedQty = 0;

                                for (var i = 0; i < totalNumber; i++) {
                                    var receiveQuantity=gridData[i].receive_qty;

                                    if (receiveQuantity > 0) {
                                        vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                                        taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                                        totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                                        totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                                        if (gridData[i].has_serial == true) {
                                            serializedProduct++;
                                        } else {
                                            nonSerializedQty += receiveQuantity;
                                        }
                                    }
                                }
                                if (serializedProduct == 0 && nonSerializedQty > 0) {
                                    $("#btnDiv").show(500);
                                }
                                else {
                                    $("#btnDiv").hide(500);
                                }
                                $("#vat_total").val(vatTotal);
                                $("#tax_total").val(taxTotal);
                                $("#total_amount_without_vattax").val(totalAmount);
                                $("#total_amount_including_vattax").val(totalAmountIncVatTax);

                                console.log(sampleData);

                            },
                            columns: [
                                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "100px" },
                                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "100px" },
                                { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "100px" },
                                { field: "receive_quantity", title: "GRN Quantity", width: "100px" },
                                { field: "saleable_qty", title: "Saleable Quantity", width: "100px" },
                                { field: "box_damage_quantity", title: "Box Damage", width: "100px" },
                                { field: "physical_damaged_quantity", title: "Physical Damage", width: "100px" },
                                { field: "customs_lost_quantity", title: "Customs/Lost", width: "100px" },
                                { field: "mrr_qty", title: "Total Faulty Quantity", width: "100px" },
                                { field: "total_received_quantity", title: "Total Received Quantity", width: "100px" }

                               // { command: [{ name: "edit",text: { edit: "Edit",   update: "Save", cancel: "Cancel changes"  }}], title: "&nbsp;", width: "110px" }
                            ],
                            editable: "inline"
                        });


                        //disable all colomn without receive_qty---------------
                        var len = $("#mrrDetailsGrid").find("tbody tr").length;
                        for(var j=0;j<=len ; j++)
                        {
                            var model = $("#mrrDetailsGrid").data("kendoGrid").dataSource.at(j);
                            if (model) {//field names
                                model.fields["product_id"].editable = false;
                                model.fields["color_id"].editable = false;
                                model.fields["product_version_id"].editable = false;

                            }

                        }

                        //template for product comboBox
                        function productDropDownEditor(container, options) {
                            jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)

                                .kendoComboBox({
                                    autoBind: true,
                                    placeholder: "-Select-",
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                                type: "GET"
                                            }
                                        }

                                    },

                                    change: function (e) {
                                        var dataItem = this.dataItem(e.item);

                                        console.log(dataItem.product_name);
                                        var grid = $("#mrrDetailsGrid").data("kendoGrid");
                                        var sel = grid.select();
                                        var sel_idx = sel.index();
                                        var gridData = grid.dataSource.data();
                                        gridData[sel_idx].product_id = dataItem.product_id,
                                        gridData[sel_idx].product_name = dataItem.product_name;
                                        gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                        gridData[sel_idx].product_category_name = dataItem.product_category_name;
                                        gridData[sel_idx].brand_id = dataItem.brand_id;
                                        gridData[sel_idx].brand_name = dataItem.brand_name;
                                        gridData[sel_idx].unit_id = dataItem.unit_id;
                                        gridData[sel_idx].unit_name = dataItem.unit_name;

                                    }
                                });
                        }


                        //template for color comboBox
                        function colorDropDownEditor(container, options) {
                            jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)

                                .kendoComboBox({
                                    autoBind: true,
                                    cascadeFrom: "productId",
                                    placeholder: "-Select-",
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@UrlConfig.Action("GetAllColorMapping", "ProductColorMapping")",
                                                type: "GET"
                                            }
                                        }

                                    },

                                    change: function (e) {
                                        var dataItem = this.dataItem(e.item);

                                        console.log(dataItem.product_name);
                                        var grid = $("#mrrDetailsGrid").data("kendoGrid");
                                        var sel = grid.select();
                                        var sel_idx = sel.index();
                                        var gridData = grid.dataSource.data();
                                        gridData[sel_idx].color_id = dataItem.color_id,
                                        gridData[sel_idx].color_name = dataItem.color_name;
                                    }
                                });
                        }

                        //template for product version comboBox
                        function productVersionDropDownEditor(container, options) {
                            jQuery('<input required data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)

                                .kendoComboBox({
                                    autoBind: true,
                                    cascadeFrom: "productId",
                                    placeholder: "-Select-",
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@UrlConfig.Action("GetProductwiseVersion", "ProductVersionMapping")",
                                                type: "GET"
                                            }
                                        }

                                    },

                                    change: function (e) {
                                        var dataItem = this.dataItem(e.item);

                                        console.log(dataItem.product_name);
                                        var grid = $("#mrrDetailsGrid").data("kendoGrid");
                                        var sel = grid.select();
                                        var sel_idx = sel.index();
                                        var gridData = grid.dataSource.data();
                                        gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                        gridData[sel_idx].product_version_name = dataItem.product_version_name;
                                    }
                                });
                        }
                        //Hide Scan If damage type not selected
                        //$('#damage_type_id').change(function() {
                        //    var damage_type_id = $('#damage_type_id').val();
                        //    if (damage_type_id != null || damage_type_id != "") {
                        //        $("#mrrGrid").show();
                        //    }
                        //});
                    }
                }
            });


        });

        $("#grn_master_id").kendoComboBox({
            autoBind: false,
            cascadeFrom: "supplier_id",
            placeholder: "--- Select Grn ---",
            dataTextField: "grn_no",
            dataValueField: "grn_master_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllGrnNo", "Mrr")"
                    }
                }
            },

        });



        @*function getModelIdsByNames(models) {
            var returnValue;
            $.ajax({
                type: "POST",
                async: false,
                url: "@UrlConfig.Action("GetModelIdsByNames", "Grn")",
                data: JSON.stringify(models),
                dataType: "json",
                contentType: "application/json",
                success: function(modelData) {
                    returnValue=modelData;
                }
            });
            return returnValue;
        }

        function getColorIdsByNames(colors) {
            var returnValue;
            $.ajax({
                type: "POST",
                async: false,
                url: "@UrlConfig.Action("GetColorIdsByNames", "Grn")",
                data: JSON.stringify(colors),
                dataType: "json",
                contentType: "application/json",
                success: function(colorData) {
                    returnValue = colorData;
                }
            });
            return returnValue;
        }*@

        function imeiList(listOfImei) {
            var dataSource2 = new kendo.data.DataSource({
                pageSize: 20,
                transport: {
                    read: function(f) {
                        f.success(listOfImei);
                    },
                    destroy: function(f) {
                        imeiDataForImeiGrid.splice(getImeiGridData(f.data.receive_serial_no_details_id), 1);
                        f.success();

                    }
                },

                autoSync: false,
                schema: {
                    errors: function(e) {
                        console.log(e.errors);
                        //alert(e.error);
                        if (e.output === "error") {
                            console.log(e.output);
                        }

                    },

                    model: {
                        id: "receive_serial_no_details_id",
                        fields: {
                            receive_serial_no_details_id: { editable: false, nullable: true },
                            product_id: { type: "number" },
                            color_id: { type: "number" },
                            product_version_id: { type: "number" },
                            product_name: { type: "string" },
                            color_name: { type: 'string' },
                            version: { type: "string" },
                            imei: { type: "string" },
                            imei_no2: { type: "string" },
                            damage_type_name: { type: "string" }
                        }

                    }
                }

            });
            // Mrr Grid
            jQuery("#MRRIMEIGrid").kendoGrid({
                dataSource: dataSource2,
                scrollable: true,
                filterable: true,
                pageable: {
                    refresh: true,
                    input: true,
                    pageSize: 20,
                    numeric: false,
                    pageSizes: [10, 20, 50]
                },

                sortable: true,
                resizable: true,

                columns: [
                    { field: "product_name", title: "Product", width: "50px" },
                    { field: "color_name", title: "Color", width: "50px" },
                    { field: "version", title: "Version", width: "50px" },
                    { field: "imei", title: "IMEI 1", width: "50px" },
                    { field: "imei_no2", title: "IMEI 2", width: "50px" },
                    { field: "damage_type_name", title: "Fault Type", width: "50px" },
                    { command: ["destroy"], title: "&nbsp;", width: "50px" }
                ],
                editable: "inline"
            });
        }

//IMEI SCAN
        var mrrDetailsGrid = [];
        var imeiDataForImeiGrid = [];

        // Scan Enter Event
        $('#daynamicPanel :input').live('keyup', function(e) {

            // $("#ddl").data("kendoDropDownList").text();
            var damageTypeId = $("#damage_type_id").val();
            var damage_type_name = $("#damage_type_id").data("kendoComboBox").text();
            if (!damageTypeId) {
                $("#imei_scan").val("");
                swal("Exception", "Please select Damage Type", "warning");
                return false;
            }


            if (e.keyCode === 13) {
                $(this).trigger("enterKey");
                var id = this.id;
                Loading(false);

                var grid = $("#mrrDetailsGrid").data("kendoGrid")._data;
                var imei = $("#imei_scan").val();
                var warehouseId = $("#warehouse_id").val();

                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetImeiInfoForMrr", "Mrr")?imei=" + imei + "&warehouseId=" + warehouseId,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {

                        if (data != null) {
                            $("#imeiListGrid").show();
                            var count = 0;
                            for (var i = 0; i < grid.length; i++) {


                                var gColId = grid[i].color_id;
                                var gQuant = grid[i].quantity;
                                var gPId = grid[i].product_id;
                                var gVerId = grid[i].product_version_id;

                                if (data.product_id == gPId && data.color_id == gColId && data.product_version_id == gVerId) {

                                    var productImei = {

                                        receive_serial_no_details_id: data.receive_serial_no_details_id,
                                        product_name: grid[i].product_name,
                                        color_name: grid[i].color_name,
                                        version: grid[i].product_version_name,
                                        product_id: grid[i].product_id,
                                        color_id: grid[i].color_id,
                                        product_version_id: grid[i].product_version_id,
                                        imei: data.imei_no,
                                        damage_type_name:damage_type_name,
                                        imei_no2: data.imei_no2
                                    };

                                    var checkDuplicate = duplicate(imeiDataForImeiGrid, imei);
                                    if (grid[i].mrr_qty > grid[i].receive_quantit) {
                                        swal("Exception", "MRR Quantity can not be over GRN Quantity!!", "warning");
                                        return false;
                                    } else {
                                        if (checkDuplicate) {
                                            swal("Exception", "IMEI already exist in list !!", "warning");
                                            return false;
                                        }
                                        else {
                                            countScaned++;
                                            imeiDataForImeiGrid.push(productImei);
                                            imeiList(imeiDataForImeiGrid);
                                            var firstItem = $('#mrrDetailsGrid').data().kendoGrid.dataSource.data()[i];
                                            firstItem.set('mrr_qty', grid[i].mrr_qty + 1);
                                            firstItem.set('saleable_qty', grid[i].receive_quantity - grid[i].mrr_qty);

                                            //Get Damage Type
                                            var damage_type = $("#damage_type_id").data("kendoComboBox").text();

                                            //Set Value in damage type qty
                                            if (damage_type == 'Box Damage') {
                                                firstItem.set('box_damage_quantity', grid[i].box_damage_quantity + 1);
                                            }
                                            else if (damage_type == 'Physical Damage') {
                                                firstItem.set('physical_damaged_quantity', grid[i].physical_damaged_quantity + 1);
                                            }
                                            else if (damage_type == 'Customs Lost') {
                                                firstItem.set('customs_lost_quantity', grid[i].customs_lost_quantity + 1);
                                            }
                                            var customlost = grid[i].customs_lost_quantity;
                                            firstItem.set('total_received_quantity', grid[i].receive_quantity - grid[i].customs_lost_quantity);
                                        }
                                        count = 1;
                                    }


                                }

                            }
                            //alert(count);
                            if (count == 0) {
                                swal("Exception", "IMEI not exist in list !!", "warning");
                                return false;
                            }
                        }
                        else {
                            swal("Exception", "IMEI not exist in list !!", "warning");
                            return false;
                        }

                    }
                });


                $("#" + id + "").val("");
            }
        });


        function duplicate(listOfDuplicate, imei) {
            if (!listOfDuplicate) {
                return false;
            } else {
                for (var i = 0; i < listOfDuplicate.length; i++) {
                    if (listOfDuplicate[i].imei == imei || listOfDuplicate[i].imei2 == imei) {
                        return true;
                    }
                }
                return false;
            }
        }

        //Delete Qty Function
        function deleteSummaryGridData(pId, colId, verId,damageTypeName) {
            var objectNew = "";

            var grid = $("#mrrDetailsGrid").data("kendoGrid")._data;

            for (var j = 0; j < grid.length; j++) {
                if (grid[j].product_id == pId && grid[j].color_id == colId && grid[j].product_version_id == verId) {
                    var firstItem = $('#mrrDetailsGrid').data().kendoGrid.dataSource.data()[j];
                    firstItem.set('mrr_qty', grid[j].mrr_qty - 1);
                    firstItem.set('saleable_qty', grid[j].saleable_qty + 1);

                    //Delete by DamageType Name
                    if (damageTypeName == 'Box Damage') {
                        firstItem.set('box_damage_quantity', grid[j].box_damage_quantity - 1);
                    }
                    if (damageTypeName == 'Physical Damage') {
                        firstItem.set('physical_damaged_quantity', grid[j].physical_damaged_quantity - 1);
                    }
                    if (damageTypeName == 'Customs Lost') {
                        firstItem.set('customs_lost_quantity', grid[j].customs_lost_quantity - 1);
                        firstItem.set('total_received_quantity', grid[j].total_received_quantity +1);

                    }



                }
            }
            return null;
        }
        function getImeiGridData(receive_serial_no_details_id) {

            var l = imeiDataForImeiGrid.length;
            //alert("dhukse");
            for (var j = 0; j < l; j++) {
                if (imeiDataForImeiGrid[j].receive_serial_no_details_id == receive_serial_no_details_id) {

                    deleteSummaryGridData(imeiDataForImeiGrid[j].product_id, imeiDataForImeiGrid[j].color_id, imeiDataForImeiGrid[j].product_version_id,imeiDataForImeiGrid[j].damage_type_name);


                    //alert(j);
                    return j;
                }
            }
            return null;
        }

        


        $("#btnMRR").click(function() {
            Loading(false);

            //MRR Master Data

            var grn_master_id = $('#grn_master_id').val();
            var lost_comment = $('#lost_comment').val();
            var from_warehouse = $("#warehouse_id").val();
            var userId ='@userId';


            if (grn_master_id==null || grn_master_id=="") {
                swal("Warning", "Please Select GRN No!!", "warning");
                return false;
            }

            var mrrMasterData = {
                grn_master_id:grn_master_id,
                from_warehouse_id: from_warehouse,
                lost_comment:lost_comment,
                created_by:userId
            };

            //GRN ListGrid
            var mrrDataList = [];
            var mrrDetailsGrid = $("#mrrDetailsGrid").data("kendoGrid").dataSource.data();
           // alert(mrrDetailsGrid.length);
            for (var i = 0; i < mrrDetailsGrid.length; i++) {
                var mrrDetails = {
                    product_id: mrrDetailsGrid[i].product_id,
                    color_id: mrrDetailsGrid[i].color_id,
                    product_version_id: mrrDetailsGrid[i].product_version_id,
                    grn_quantity: mrrDetailsGrid[i].receive_quantity,
                    saleable_quantity: mrrDetailsGrid[i].saleable_qty,                   
                    box_damage_quantity: mrrDetailsGrid[i].box_damage_quantity,
                    physical_damaged_quantity: mrrDetailsGrid[i].physical_damaged_quantity,
                    customs_lost_quantity: mrrDetailsGrid[i].customs_lost_quantity,
                    total_received_quantity: mrrDetailsGrid[i].total_received_quantity
                };
                mrrDataList.push(mrrDetails);



            }
           // alert(mrrDataList.length);
            // MRR ListGrid
            var rcvSerialList = [];
            if (countScaned > 0) {
                var rcvSerialsIMEIGrid = $("#MRRIMEIGrid").data("kendoGrid").dataSource.data();
           
                for (var i = 0; i < rcvSerialsIMEIGrid.length; i++) {
                
                    var receiveSerialNoDetails = {
                        receive_serial_no_details_id:rcvSerialsIMEIGrid[i].receive_serial_no_details_id,
                        product_id: rcvSerialsIMEIGrid[i].product_id,
                        color_id: rcvSerialsIMEIGrid[i].color_id,
                        product_version_id: rcvSerialsIMEIGrid[i].product_version_id,
                        imei: rcvSerialsIMEIGrid[i].imei,
                        imei_no2: rcvSerialsIMEIGrid[i].imei_no2,
                        damage_type_name: rcvSerialsIMEIGrid[i].damage_type_name


                    };
                    rcvSerialList.push(receiveSerialNoDetails);


                }
            }
            
            


            var MrrModel = {
                mrrMasterData: mrrMasterData,
                MrrDetailsList:mrrDataList,
                ReceiveSerialNoDetails:rcvSerialList

            };
            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("CreateMrr", "Mrr")",
                data: JSON.stringify(MrrModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {
                        swal("Success", data.msg, "success");
                        window.location.href = '/Mrr/Index';
                        return false;
                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });

        });

    });
    //Kiron:20-03-2017

</script>
