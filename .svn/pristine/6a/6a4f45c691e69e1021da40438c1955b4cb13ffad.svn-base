@{
    ViewBag.Title = "GridWithDropdown";
    var userId = "";
    var partyTypeId = "";
    var partyId = 0;
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
        partyTypeId = Session["party_type_id"].ToString();
        partyId = Convert.ToInt32(Session["party_id"].ToString());
    }
}



<script type="text/javascript">
    var userId = @userId;
    var partyTypeId = @partyTypeId;
    var partyId = @partyId;
</script>

<div class="col-md-12 widget-body" id="context">
    <div class="row">
        <div class="row">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h3>Sales</h3>
                </div>
                <div class="panel-body">
                    <div class="row" id="daynamicPanel">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                <h3>Products</h3>
                            </div>
                            <div class="col-md-3">
                                <input id="product_id" class="form-control input-lg" name="product_id" />
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                <h3>Scan</h3>
                            </div>
                            <div class="col-md-3">
                                <input id="scan_imei" name="scan_imei" class="form-control input-lg" placeholder="Scan Barcode" />
                            </div>
                            <div class="col-md-1"></div>
                        </div>
                    </div>
                    <br />
                    <div id="RequisitionDetailsGrid"></div>
                    <br />

                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="group-box">
            <div class="row">
                <div class="col-md-12">
                    <input type="button" class="k-button" id="btnSaveRequisition" name="btnSaveRequisition" value="Save Information" />
                </div>
            </div>
        </div>
    </div>
</div>
<p>&nbsp;</p>
<script type="text/javascript">

    //date time picker
    //requisition date
    $(document).ready(function() {
        //Start
        var sampleData = [];
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function(e) {
                    // on success
                    e.success(sampleData);
                },
                create: function(e) {
                    //// assign an ID to the new item
                    e.data.receive_serial_no_details_id = sampleDataNextID++;
                    // save data item to the original datasource
                    sampleData.push(e.data);
                    e.success(e.data);


                },
                update: function(e) {
                    // locate item in original datasource and update it
                    sampleData[getIndexById(e.data.receive_serial_no_details_id)] = e.data;
                    //getRebateAndGiftInfo();
                    e.success();

                },
                destroy: function(e) {
                    alert("chodon");
                    sampleData.splice(getIndexById(e.data.product_id), 1);
                    e.success();

                }
            },
            error: function(e) {
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "product_id",
                    fields: {
                        product_id: { editable: false, nullable: true },
                        product_name: { type: "string" },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        imei_no: { type: "string" },
                        mrp_price: { type: "number" },
                        quantity: { type: "number" },
                        discount: { type: "string", editable: true },
                        line_total: { type: "string", editable: true }

                    }
                }
            }
        });

        $("#RequisitionDetailsGrid").kendoGrid({
            dataSource: dataSource,
            // pageable: true,
            // toolbar: ["create"],
            selectable: true,
            columns: [
                { field: "product_id", title: "Product", width: "50px" },
                { field: "color_id", title: "Color", width: "50px" },
                { field: "imei_no", title: "IMEI", width: "50px" },
                { field: "mrp_price", title: "Price", width: "50px" },
                { field: "quantity", title: "Quantity", width: "50px" },
                { field: "discount", title: "Discount", width: "50px" },
                { field: "line_total", title: "Line Total", width: "50px" },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "100px" }
            ],
            editable: {
                mode: "inline",
                confirmation: false
            }
        });

        $("#product_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Product ---",
            dataTextField: "product_name",
            dataValueField: "product_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllProducts", "Product")"
                    }
                }
            }
        });

        //function IncrementSameProductOnGrid(product_id) {
        //    var grid = $("#RequisitionDetailsGrid").data("kendoGrid")._data;
        //    if (sampleData != null) {
                
        //        for (var i = 0; i < sampleData.length; i++) {
        //            if (product_id == sampleData[i].product_id) {
        //                sampleData[i].quantity += 1;
        //                return true;
        //            } else {
                                
        //            }
        //        }
        //    }
            
        //}
        function IncrementSameProductOnGrid(sampleData, productInfo) {
            if (!sampleData) {
                var initialObject = {
                    product_id: productInfo.product_id,
                    product_name: productInfo.product_name,
                    mrp_price: productInfo.mrp_price,
                    quantity: 1
                };
                return initialObject;
            } else {
                //Created By Shafiq Rabbi;
                var passObjectToGrid = null;
                if (sampleData.length == 0) {
                    passObjectToGrid = productInfo;
                } else {
                    for (var i = 0; i < sampleData.length; i++) {
                        if (sampleData[i].product_id == productInfo.product_id ) {
                            var increseQuantity = sampleData[i].quantity + 1;

                            sampleData.splice(i, 1);
                            //alert(ver);
                            var whenGridDataObjectExist = {
                                product_id : productInfo.product_id ,
                                product_name : productInfo.product_name ,
                                mrp_price: productInfo.mrp_price,
                                quantity:increseQuantity
                            };
                            passObjectToGrid = whenGridDataObjectExist;
                        } else {
                            var defaultDataObject = {
                                product_id: productInfo.product_id,
                                product_name: productInfo.product_name,
                                mrp_price: productInfo.mrp_price,
                                quantity: 1
                            };
                            passObjectToGrid = defaultDataObject;
                        }
                    }
                }

                return passObjectToGrid;

            }
        }



        $('#product_id').change(function() {

            var product_id = $('#product_id').val();
            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("GetProductByProductId", "Product")?product_id=" + product_id,
                dataType: "json",
                contentType: "application/json",
                success: function(data) {
                    Loading(false);
                    console.log(data);
                    if (data != null) {

                      var readObjectFromFunction =  IncrementSameProductOnGrid(sampleData, data);  
                      sampleData.push(readObjectFromFunction);
                        console.log(sampleData);

                        //productList Grid---------------------


                        var sampleDataNextID = sampleData.length + 1;

                        function getIndexById(id) {
                            var idx,
                                l = sampleData.length;

                            for (var j = 0; j < l; j++) {
                                if (sampleData[j].product_id == id) {
                                    return j;
                                }
                            }
                            return null;
                        }

                        // custom logic end

                        var dataSource = new kendo.data.DataSource({
                            transport: {
                                read: function(e) {
                                    // on success
                                    e.success(sampleData);

                                },
                                create: function(e) {
                                    //// assign an ID to the new item
                                    e.data.product_id = sampleDataNextID++;
                                    sampleData.push(e.data);
                                    e.success(e.data);

                                },
                                update: function(e) {
                                    sampleData[getIndexById(e.data.product_id)] = e.data;
                                    e.success();

                                },
                                destroy: function(e) {
                                    sampleData.splice(getIndexById(e.data.product_id), 1);
                                    e.success();

                                }
                            },
                            error: function(e) {
                                // handle data operation error
                                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                            },

                            batch: false,
                            schema: {
                                model: {
                                    id: "product_id",
                                    fields: {
                                        product_id: { editable: false, nullable: true },
                                        product_name: { type: "string" },
                                        color_id: { field: "color_id", type: "integer" },
                                        color_name: { type: "string" },
                                        imei_no: { type: "string" },
                                        mrp_price: { type: "number" },
                                        quantity: { type: "number" },
                                        discount: { type: "string", editable: true },
                                        line_total: { type: "string", editable: true }

                                    }
                                }
                            }
                        });


                        $("#RequisitionDetailsGrid").kendoGrid({
                            dataSource: dataSource,
                            //pageable: false,
                            // toolbar: ["create"],
                            selectable: true,
                            columns: [
                                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                                { field: "imei_no", title: "IMEI", width: "50px" },
                                { field: "mrp_price", title: "Price", width: "50px" },
                                { field: "quantity", title: "Quantity", width: "50px" },
                                { field: "discount", title: "Discount", width: "50px" },
                                { field: "line_total", title: "Line Total", width: "50px" },
                                { command: ["edit", "destroy"], title: "&nbsp;", width: "100px" }
                            ],
                            editable: {
                                mode: "inline",
                                confirmation: false
                            }
                        });


                        var len = $("#RequisitionDetailsGrid").find("tbody tr").length;
                        for (var j = 0; j <= len; j++) {
                            var model = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.at(j);
                            if (model) { //field names
                                model.fields["product_id"].editable = false;
                                model.fields["color_id"].editable = false;
                                model.fields["imei_no"].editable = false;
                                //model.fields["price"].editable = false;
                                //model.fields["line_total"].editable = false;

                            }

                        }

                        //template for product comboBox
                        function productDropDownEditor(container, options) {
                            jQuery('<input required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)
                                .kendoComboBox({
                                    autoBind: true,
                                    placeholder: "-Select-",
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                                type: "GET"
                                            }
                                        }

                                    },

                                    change: function(e) {
                                        var dataItem = this.dataItem(e.item);

                                        console.log(dataItem.product_name);
                                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                        var sel = grid.select();
                                        var sel_idx = sel.index();
                                        var gridData = grid.dataSource.data();
                                        gridData[sel_idx].product_id = dataItem.product_id,
                                            gridData[sel_idx].product_name = dataItem.product_name;
                                        gridData[sel_idx].color_id = dataItem.color_id,
                                            gridData[sel_idx].color_name = dataItem.color_name;
                                        gridData[sel_idx].unit_id = dataItem.unit_id;
                                        gridData[sel_idx].unit_name = dataItem.unit_name;
                                        gridData[sel_idx].brand_id = dataItem.brand_id;
                                        gridData[sel_idx].brand_name = dataItem.brand_name;
                                        gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                        gridData[sel_idx].product_category_name = dataItem.product_category_name;

                                        if (partyTypeId == 1) {
                                            gridData[sel_idx].price = dataItem.rp_price;
                                        }
                                        if (partyTypeId == 2) {
                                            gridData[sel_idx].price = dataItem.md_price;
                                        }
                                        if (partyTypeId == 3) {
                                            gridData[sel_idx].price = dataItem.bs_price;
                                        }

                                    }
                                });
                        }


                        //template for color comboBox
                        function colorDropDownEditor(container, options) {
                            jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)
                                .kendoComboBox({
                                    autoBind: true,
                                    placeholder: "-Select-",
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@UrlConfig.Action("GetAllColors", "Color")",
                                                type: "GET"
                                            }
                                        }

                                    },

                                    change: function(e) {
                                        var dataItem = this.dataItem(e.item);

                                        console.log(dataItem.product_name);
                                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                        var sel = grid.select();
                                        var sel_idx = sel.index();
                                        var gridData = grid.dataSource.data();
                                        gridData[sel_idx].color_id = dataItem.color_id,
                                            gridData[sel_idx].color_name = dataItem.color_name;


                                    }
                                });
                        }

                        //return false;
                    } else {
                        swal("Exception", "Product Not Available !!", "error");
                        return false;
                    }
                }
            });

        });

        //Start Scan

        var sampleData = [];

        function checkDuplicateImei(hayStack, imei_no) {
            if (!hayStack) {
                return false;
            } else {
                for (var i = 0; i < hayStack.length; i++) {
                    if (hayStack[i].imei_no == imei_no) {
                        return true;
                    }
                }
                return false;
            }
        }

        $('#daynamicPanel :input').live('keyup', function(e) {

            if(e.keyCode === 13)
            {
                var product_id =$('#product_id').val();

                $(this).trigger("enterKey");
                var id = this.id;
                var imei_no =$('#scan_imei').val();
                var warehouseId =1;
                Loading(true);
                $.ajax({
                    type: "POST",
                    url: "@UrlConfig.Action("GetProductByProductId", "Product")?product_id=" + product_id,
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        Loading(false);

                        if (data !='') {
                            var productInfo = {
                                product_id : data.product_id ,
                                product_name : data.product_name ,
                                mrp_price: data.mrp_price,
                                quantity:1



                            };
                            sampleData.push(productInfo);
                            console.log(sampleData);

                            //productList Grid---------------------

                            // custom logic start

                            var sampleDataNextID = sampleData.length + 1;

                            function getIndexById(id) {
                                var idx,
                                    l = sampleData.length;

                                for (var j = 0; j < l; j++) {
                                    if (sampleData[j].product_id == id) {
                                        return j;
                                    }
                                }
                                return null;
                            }

                            // custom logic end

                            var dataSource = new kendo.data.DataSource({
                                transport: {
                                    read: function (e) {
                                        // on success
                                        e.success(sampleData);
                                        //console.log(sampleData);

                                        var totalNumber = sampleData.length;

                                        var amount = 0;

                                        for (var i = 0; i < totalNumber; i++) {

                                            amount += +parseFloat(sampleData[i].line_total).toFixed(2);

                                        }
                                        $("#amount").val(amount);
                                        var vatPcnt = $("#vat_pcnt").val();
                                        var amount_with_vat = amount * vatPcnt / 100;
                                        $("#amount_with_vat").val(amount+amount_with_vat);
                                        $("#net_amount").val(amount+amount_with_vat);
                                    },
                                    create: function (e) {
                                        //// assign an ID to the new item
                                        //e.data.receive_serial_no_details_id = sampleDataNextID++;
                                        //// save data item to the original datasource

                                        //var gridData = sampleData;
                                        //var totalNumber = gridData.length;
                                        //var count = 0;

                                        //for (var i = 0; i < totalNumber; i++) {
                                        //    var productId = gridData[i].product_id;
                                        //    var colorId = gridData[i].color_id;
                                        //    if (e.data.product_id === productId && e.data.color_id === colorId) {
                                        //        count++;
                                        //    }
                                        //}
                                        //if (count > 0) {
                                        //    sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                                        //    e.preventDefault();
                                        //    return false;
                                        //} else {
                                        //    sampleData.push(e.data);
                                        //    e.success(e.data);
                                        //    getRebateAndGiftInfo();
                                        //    console.log(sampleData);
                                        //    return true;
                                        //}

                                    },
                                    update: function (e) {
                                        // locate item in original datasource and update it
                                        sampleData[getIndexById(e.data.product_id)] = e.data;
                                        //getRebateAndGiftInfo();
                                        e.success();

                                    },
                                    destroy: function (e) {
                                        // locate item in original datasource and remove it
                                        // var requisitionDetailsId=e.data.requisition_details_id;

                                        sampleData.splice(getIndexById(e.data.product_id), 1);


                                        // on success
                                        e.success();
                                        var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                        var gridData = entityGrid.dataSource.data();
                                        var totalNumber = gridData.length;

                                        var amount = 0;

                                        for (var i = 0; i < totalNumber; i++) {

                                            amount += +parseFloat(gridData[i].line_total).toFixed(2);

                                        }
                                        $("#amount").val(amount);
                                        var vatPcnt = $("#vat_pcnt").val();
                                        var amount_with_vat = amount * vatPcnt / 100;
                                        $("#amount_with_vat").val(amount+amount_with_vat);
                                        $("#net_amount").val(amount+amount_with_vat);
                                        //console.log(gridData);
                                    }
                                },
                                error: function (e) {
                                    // handle data operation error
                                    alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                                },
                                // pageSize: 10,
                                batch: false,
                                schema: {
                                    model: {
                                        id: "product_id",
                                        fields: {
                                            product_id: { editable: false, nullable: true },
                                            product_name: { type: "string" },
                                            color_id: { field: "color_id", type: "integer" },
                                            color_name: { type: "string" },
                                            imei_no: { type: "string" },
                                            mrp_price: { type: "number" },
                                            quantity: { type: "number" },
                                            discount: { type: "string", editable: true },
                                            line_total: { type: "string", editable: true }

                                        }
                                    }
                                }
                            });



                            $("#RequisitionDetailsGrid").kendoGrid({
                                dataSource: dataSource,
                                // pageable: true,
                                // toolbar: ["create"],
                                selectable: true,
                                save: function (data) {

                                    var tempAmount = +data.model.price - +data.model.discount;
                                    data.model.set("line_total", tempAmount);


                                    var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                    var gridData = entityGrid.dataSource.data();
                                    var totalNumber = gridData.length;

                                    var amount = 0;

                                    for (var i = 0; i < totalNumber; i++) {
                                        amount += +parseFloat(gridData[i].line_total).toFixed(2);
                                    }

                                    $("#amount").val(amount);
                                    var vatPcnt = $("#vat_pcnt").val();
                                    var amount_with_vat = amount * vatPcnt / 100;
                                    $("#amount_with_vat").val(amount+amount_with_vat);
                                    $("#net_amount").val(amount+amount_with_vat);

                                },
                                edit: function (e) {

                                    $('input[name="line_total"]').attr('readonly', 'readonly');
                                    $('input[name="price"]').attr('readonly', 'readonly');

                                },
                                cancel: function(data) {

                                    var tempAmount = +data.model.quantity * +data.model.price;
                                    data.model.set("lineTotal", tempAmount);


                                    var gridData = sampleData;
                                    var totalNumber = gridData.length;


                                    console.log(sampleData);

                                },
                                columns: [
                                    { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                                    { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                                    { field: "imei_no", title: "IMEI", width: "50px" },
                                    { field: "mrp_price", title: "Price", width: "50px" },
                                    { field: "quantity", title: "Quantity", width: "50px" },
                                    { field: "discount", title: "Discount", width: "50px" },
                                    { field: "line_total", title: "Line Total", width: "50px" },
                                    { command: ["edit", "destroy"], title: "&nbsp;", width: "100px" }
                                ],
                                editable: {
                                    mode: "inline",
                                    confirmation: false
                                }
                            });


                            var len = $("#RequisitionDetailsGrid").find("tbody tr").length;
                            for(var j=0;j<=len ; j++)
                            {
                                var model = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.at(j);
                                if (model) {//field names
                                    model.fields["product_id"].editable = false;
                                    model.fields["color_id"].editable = false;
                                    model.fields["imei_no"].editable = false;
                                    //model.fields["price"].editable = false;
                                    //model.fields["line_total"].editable = false;

                                }

                            }

                            //template for product comboBox
                            function productDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].product_id = dataItem.product_id,
                                                gridData[sel_idx].product_name = dataItem.product_name;
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                                gridData[sel_idx].color_name = dataItem.color_name;
                                            gridData[sel_idx].unit_id = dataItem.unit_id;
                                            gridData[sel_idx].unit_name = dataItem.unit_name;
                                            gridData[sel_idx].brand_id = dataItem.brand_id;
                                            gridData[sel_idx].brand_name = dataItem.brand_name;
                                            gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                            gridData[sel_idx].product_category_name = dataItem.product_category_name;

                                            if (partyTypeId==1) {
                                                gridData[sel_idx].price = dataItem.rp_price;
                                            }
                                            if (partyTypeId==2) {
                                                gridData[sel_idx].price = dataItem.md_price;
                                            }
                                            if (partyTypeId==3) {
                                                gridData[sel_idx].price = dataItem.bs_price;
                                            }

                                        }
                                    });
                            }


                            //template for color comboBox
                            function colorDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllColors", "Color")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                                gridData[sel_idx].color_name = dataItem.color_name;


                                        }
                                    });
                            }

                            //productList Grid---------------------



                            //return false;
                        } else {
                            swal("Exception", "Product Not Available !!", "error");
                            return false;
                        }
                    }
                });

                $("#" + id + "").val("");
            }
        });
        //End Scan

        $("#btnSaveRequisition").click(function() {
            var newWindow = window.open("", "_blank");
            newWindow.blur();

            Loading(true);

            var party_type_id = $('#party_type_id').val();
            var party_id = $('#party_id').val();
            var customer_name = $('#customer_name').val();
            var address = $('#address').val();
            var mobile_no = $('#mobile_no').val();
            var from_warehouse_id = $('#from_warehouse_id').val();
            var to_warehouse_id = $('#to_warehouse_id').val();
            var remarks = $('#remarks').val();
            //var created_by = userId;
            //var owner_party_id = partyId;

            var amount = $('#amount').val();
            var vat_pcnt = $('#vat_pcnt').val();
            var amount_with_vat = $('#amount_with_vat').val();
            var discount_pcnt = $('#discount_pcnt').val();
            var discount_amount = $('#discount_amount').val();
            var net_amount = $('#net_amount').val();
            var paid_amount = $('#paid_amount').val();
            var return_amount = $('#return_amount').val();
            //var status = $('#status').val();


            var PosMasterData = {
                party_type_id: party_type_id,
                party_id: party_id,
                customer_name: customer_name,
                address: address,
                mobile_no: mobile_no,
                from_warehouse_id: from_warehouse_id,
                to_warehouse_id: to_warehouse_id,
                amount: amount,
                vat_pcnt: vat_pcnt,
                amount_with_vat: amount_with_vat,
                discount_pcnt: discount_pcnt,
                discount_amount: discount_amount,
                net_amount: net_amount,
                paid_amount: paid_amount,
                return_amount: return_amount,

                remarks: remarks,
                created_by: userId,
                owner_party_id: partyId
            };

            var ProductDetailsList = [];
            var ProductDetailsGrid = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < ProductDetailsGrid.length; i++) {
                var productDetails = {
                    product_id: ProductDetailsGrid[i].product_id,
                    color_id: ProductDetailsGrid[i].color_id,
                    imei_no: ProductDetailsGrid[i].imei_no,
                    price: ProductDetailsGrid[i].price,
                    discount: ProductDetailsGrid[i].discount,
                    line_total: ProductDetailsGrid[i].line_total

                };
                ProductDetailsList.push(productDetails);
            }

            var PosModel = {
                PosMasterData: PosMasterData,
                PosDetailsList: ProductDetailsList
            };

            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("Post", "Pos")",
                data: JSON.stringify(PosModel),
                dataType: "json",
                contentType: "application/json",
                success: function(data) {
                    Loading(false);
                    //console.log(ProductDetailsGrid);
                    if (data.output === "success") {
                        var pos_master_id = data.returnvalue.pos_master_id;

                        var url = "/CentralPointOfSale/GetPosInvoiceReport?pos_master_id=" + pos_master_id;
                        //window.open(url, '_blank');
                        newWindow.location.href = url;
                        newWindow.focus();


                        swal("Success", data.msg, "success");
                        window.location.href = '/PartyPointOfSale/index';
                        return false;
                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });

        });

    });
    // Back Up Work:
    // START

    @*$.ajax({
        type: "GET",
        url: "@UrlConfig.Action("GetImeiInfoForMrr", "Mrr")?imei=" + imei_no + "&warehouseId=" + 1,
        dataType: "json",
    contentType: "application/json",
    success: function (data) {
        Loading(false);

        if (data !='') {
            sampleData.push(data);

            //for (var i = 0; i < data.length; i++) {
            //    var productDetails = {
            //        receive_serial_no_details_id: data[i].receive_serial_no_details_id,
            //        product_id: data[i].product_id,
            //        product_name: data[i].product_name,
            //        color_id: data[i].color_id,
            //        color_name: data[i].color_name,
            //        price: data[i].price,
            //        discount: 0,
            //        line_total:data[i].price-0,
            //        imei_no: data[i].imei_no
            //    };
            //    var isDuplicate = checkDuplicateImei(sampleData,imei_no);
            //    if (isDuplicate) {
            //        swal("Exception", "IMEI already in list !!", "warning");
            //    } else {
            //        sampleData.push(productDetails);
            //    }

            //}
            console.log(sampleData);

            //productList Grid---------------------

            // custom logic start

            var sampleDataNextID = sampleData.length + 1;

            function getIndexById(id) {
                var idx,
                    l = sampleData.length;

                for (var j = 0; j < l; j++) {
                    if (sampleData[j].receive_serial_no_details_id == id) {
                        return j;
                    }
                }
                return null;
            }

            // custom logic end

            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: function (e) {
                        // on success
                        e.success(sampleData);
                        //console.log(sampleData);

                        var totalNumber = sampleData.length;

                        var amount = 0;

                        for (var i = 0; i < totalNumber; i++) {

                            amount += +parseFloat(sampleData[i].line_total).toFixed(2);

                        }
                        $("#amount").val(amount);
                        var vatPcnt = $("#vat_pcnt").val();
                        var amount_with_vat = amount * vatPcnt / 100;
                        $("#amount_with_vat").val(amount+amount_with_vat);
                        $("#net_amount").val(amount+amount_with_vat);
                    },
                    create: function (e) {
                        //// assign an ID to the new item
                        e.data.receive_serial_no_details_id = sampleDataNextID++;
                        // save data item to the original datasource

                        var gridData = sampleData;
                        var totalNumber = gridData.length;
                        var count = 0;

                        for (var i = 0; i < totalNumber; i++) {
                            var productId = gridData[i].product_id;
                            var colorId = gridData[i].color_id;
                            if (e.data.product_id === productId && e.data.color_id === colorId) {
                                count++;
                            }
                        }
                        if (count > 0) {
                            sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                            e.preventDefault();
                            return false;
                        } else {
                            sampleData.push(e.data);
                            e.success(e.data);
                            getRebateAndGiftInfo();
                            console.log(sampleData);
                            return true;
                        }

                    },
                    update: function (e) {
                        // locate item in original datasource and update it
                        sampleData[getIndexById(e.data.receive_serial_no_details_id)] = e.data;
                        //getRebateAndGiftInfo();
                        e.success();

                    },
                    destroy: function (e) {
                        // locate item in original datasource and remove it
                        // var requisitionDetailsId=e.data.requisition_details_id;

                        sampleData.splice(getIndexById(e.data.receive_serial_no_details_id), 1);

                        @*$.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("DeleteRequisitionDetails", "Requisition")",
                            data: {
                            requisition_details_id: requisitionDetailsId
                            },
                        dataType: "json",
                        contentType: "application/json",
                        success: function (data) {
                            Loading(false);
                            console.log(data);
                            if (data.output === "success") {


                                swal("Success", data.msg, "success");
                                return false;
                            } else {
                                swal("Exception", data.msg, "error");
                                return false;
                            }
                        }
                    });*@

    // on success
    @*e.success();
            var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
            var gridData = entityGrid.dataSource.data();
            var totalNumber = gridData.length;

            var amount = 0;

            for (var i = 0; i < totalNumber; i++) {

                amount += +parseFloat(gridData[i].line_total).toFixed(2);

            }
            $("#amount").val(amount);
            var vatPcnt = $("#vat_pcnt").val();
            var amount_with_vat = amount * vatPcnt / 100;
            $("#amount_with_vat").val(amount+amount_with_vat);
            $("#net_amount").val(amount+amount_with_vat);
            //console.log(gridData);
        }
    },
    error: function (e) {
        // handle data operation error
        alert("Status: " + e.status + "; Error message: " + e.errorThrown);
    },
    pageSize: 10,
        batch: false,
    schema: {
        model: {
                id: "receive_serial_no_details_id",
                fields: {
                receive_serial_no_details_id: { editable: false, nullable: true },
                product_id: { field: "product_id", type: "integer" },
                product_name: { type: "string" },
                color_id: { field: "color_id", type: "integer" },
                color_name: { type: "string" },
                imei_no: { type: "string" },
                price: { type: "string" },
                discount: { type: "string", editable: true },
                line_total: { type: "string", editable: true }

                }
        }
    }
    });



    $("#RequisitionDetailsGrid").kendoGrid({
        dataSource: dataSource,
        pageable: true,
        // toolbar: ["create"],
        selectable: true,
        save: function (data) {

            var tempAmount = +data.model.price - +data.model.discount;
            data.model.set("line_total", tempAmount);


            var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
            var gridData = entityGrid.dataSource.data();
            var totalNumber = gridData.length;

            var amount = 0;

            for (var i = 0; i < totalNumber; i++) {
                amount += +parseFloat(gridData[i].line_total).toFixed(2);
            }

            $("#amount").val(amount);
            var vatPcnt = $("#vat_pcnt").val();
            var amount_with_vat = amount * vatPcnt / 100;
            $("#amount_with_vat").val(amount+amount_with_vat);
            $("#net_amount").val(amount+amount_with_vat);

        },
        edit: function (e) {

            $('input[name="line_total"]').attr('readonly', 'readonly');
            $('input[name="price"]').attr('readonly', 'readonly');

        },
        cancel: function(data) {

            var tempAmount = +data.model.quantity * +data.model.price;
            data.model.set("lineTotal", tempAmount);


            var gridData = sampleData;
            var totalNumber = gridData.length;


            console.log(sampleData);

        },
        columns: [
            { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
            { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
            { field: "imei_no", title: "IMEI", width: "50px" },
            { field: "price", title: "Price", width: "50px" },
            { field: "discount", title: "Discount", width: "50px" },
            { field: "line_total", title: "Line Total", width: "50px" },
            { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
        ],
        editable: "inline"
    });


    var len = $("#RequisitionDetailsGrid").find("tbody tr").length;
    for(var j=0;j<=len ; j++)
    {
        var model = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.at(j);
        if (model) {//field names
            model.fields["product_id"].editable = false;
            model.fields["color_id"].editable = false;
            model.fields["imei_no"].editable = false;
            //model.fields["price"].editable = false;
            //model.fields["line_total"].editable = false;

        }

    }

    //template for product comboBox
    function productDropDownEditor(container, options) {
        jQuery('<input required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
            .appendTo(container)

            .kendoComboBox({
                autoBind: true,
                placeholder: "-Select-",
                dataSource: {
                    transport: {
                        read: {
                            url: "@UrlConfig.Action("GetAllProducts", "Product")",
                        type: "GET"
                    }
                }

            },

            change: function (e) {
                var dataItem = this.dataItem(e.item);

                console.log(dataItem.product_name);
                var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                var sel = grid.select();
                var sel_idx = sel.index();
                var gridData = grid.dataSource.data();
                gridData[sel_idx].product_id = dataItem.product_id,
                    gridData[sel_idx].product_name = dataItem.product_name;
                gridData[sel_idx].color_id = dataItem.color_id,
                    gridData[sel_idx].color_name = dataItem.color_name;
                gridData[sel_idx].unit_id = dataItem.unit_id;
                gridData[sel_idx].unit_name = dataItem.unit_name;
                gridData[sel_idx].brand_id = dataItem.brand_id;
                gridData[sel_idx].brand_name = dataItem.brand_name;
                gridData[sel_idx].product_category_id = dataItem.product_category_id;
                gridData[sel_idx].product_category_name = dataItem.product_category_name;

                if (partyTypeId==1) {
                    gridData[sel_idx].price = dataItem.rp_price;
                }
                if (partyTypeId==2) {
                    gridData[sel_idx].price = dataItem.md_price;
                }
                if (partyTypeId==3) {
                    gridData[sel_idx].price = dataItem.bs_price;
                }

            }
    });
    }


    //template for color comboBox
    function colorDropDownEditor(container, options) {
        jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
            .appendTo(container)

            .kendoComboBox({
                autoBind: true,
                placeholder: "-Select-",
                dataSource: {
                    transport: {
                        read: {
                            url: "@UrlConfig.Action("GetAllColors", "Color")",
                        type: "GET"
                    }
                }

            },

            change: function (e) {
                var dataItem = this.dataItem(e.item);

                console.log(dataItem.product_name);
                var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                var sel = grid.select();
                var sel_idx = sel.index();
                var gridData = grid.dataSource.data();
                gridData[sel_idx].color_id = dataItem.color_id,
                    gridData[sel_idx].color_name = dataItem.color_name;


            }
    });
    }

    //productList Grid---------------------



    //return false;
    } else {
        swal("Exception", "Product Not Available !!", "error");
        return false;
    }
    }
    });*@
    //END

</script>
