@{
    ViewBag.Title = "Add Local PO";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }

}
<script type="text/javascript">
    var userId = @userId;
</script>

<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">Local Purchase Order Master</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="order_no">Order No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="order_no" name="order_no" class="k-textbox" disabled placeholder="Automatic Order No">
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="local_purchase_order_reference_number">PO Reference No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="local_purchase_order_reference_number" name="local_purchase_order_reference_number" class="k-textbox" placeholder="Enter PO Reference No">
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="supplier_id">Supplier&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="supplier_id" name="supplier_id" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="currency_id">Currency&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="currency_id" name="currency_id" disabled />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="remarks">Remarks</label>
                    </div>
                    <div class="col-md-3">
                        <textarea id="remarks" name="remarks" class="k-textbox" rows="3"></textarea>
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="company_id">Company&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="dropdown" name="company_id" id="company_id">
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">Product List</div>
        <div class="panel-body">
            <div id="poDetailsGrid"></div>
            <div class="group-box">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="vat_total">Vat Total</label>
                        </div>
                        <div class="col-md-3">
                            <input id="vat_total" name="vat_total" class="k-textbox" disabled />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="tax_total">Tax Total</label>
                        </div>
                        <div class="col-md-3">
                            <input id="tax_total" name="tax_total" class="k-textbox" disabled />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="total_amount_without_vattax">Total Amount</label>
                        </div>
                        <div class="col-md-3">
                            <input id="total_amount_without_vattax" name="total_amount_without_vattax" class="k-textbox" disabled />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="total_amount_including_vattax">Total Amount (+ Vat & Tax)</label>
                        </div>
                        <div class="col-md-3">
                            <input id="total_amount_including_vattax" name="total_amount_including_vattax" class="k-textbox" disabled />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="status">Status</label>
                        </div>
                        <div class="col-md-3">
                            <input id="status" name="status" class="k-textbox" value="Created" disabled />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <div class="col-md-3">
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="group-box">
        <div class="row">
            <div class="col-md-12">
                <input type="button" class="k-button" id="btnSaveUser" name="btnSaveUser" value="Save Order" />
            </div>
        </div>
    </div>

</div>


<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">
    $(document).ready(function () {

        //company list
        $("#company_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Company ---",
            dataTextField: "company_name",
            dataValueField: "company_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllCompany", "Company")"
                    }
                }
            }
        }).data("kendoComboBox");

        //supplier list
        $("#supplier_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select Supplier ---",
            dataTextField: "supplier_name",
            dataValueField: "supplier_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllLocalSuppliers", "Supplier")"
                    }
                }
            }
        });

        //currency list
        $("#currency_id").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Currency ---",
            dataTextField: "currency_name",
            dataValueField: "currency_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllcurrency", "Currency")"
                    }
                }
            },
            index: 3

        });

        //productList Grid---------------------
        var sampleData = [];

        // custom logic start

        var sampleDataNextID = sampleData.length + 1;

        function getIndexById(id) {
            var idx,
                l = sampleData.length;

            for (var j = 0; j < l; j++) {
                if (sampleData[j].local_purchase_order_details_id == id) {
                    return j;
                }
            }
            return null;
        }

        // custom logic end

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function(e) {
                    e.success(sampleData);
                },
                create: function(e) {

                    // assign an ID to the new item
                    e.data.local_purchase_order_details_id = sampleDataNextID++;
                    // save data item to the original datasource

                    var gridData = sampleData;
                    var totalNumber = gridData.length;
                    var count = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        var productId = gridData[i].product_id;
                        var colorId = gridData[i].color_id;
                        var productVersionId = gridData[i].product_version_id;
                        if (e.data.product_id === productId && e.data.color_id === colorId) {
                            count++;
                        }
                    }


                    var mmm = e.data.quantity;


                    var axx= $.isNumeric(mmm);


                    if (axx==false ) {
                        sweetAlert("Sorry...", "not a valid po quantity !!!", "warning");
                        return false;
                    }
                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {
                        sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "quantity is required !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                        return false;
                    }

                    if (count > 0) {
                        sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                        //e.preventDefault();
                        return false;
                    }

                    else {

                        if (e.data.product_category_id != 3 && (e.data.color_id == null ||e.data.product_version_id == null) ) {
                            sweetAlert("Sorry...", "Color and Version is Mandatory for "+e.data.product_category_name+"","warning");
                            return false;
                        }
                        sampleData.push(e.data);
                        e.success(e.data);
                        console.log(sampleData);
                        return true;
                    }
                },
                update: function (e) {

                    var mmm = e.data.quantity;

                    var axx= $.isNumeric(mmm);

                    if (axx==false ) {
                        sweetAlert("Sorry...", "not a valid po quantity !!!", "warning");
                        return false;
                    }
                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {
                        sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "quantity is required !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                        return false;
                    }
                    else {
                        if (e.data.product_category_id != 3 && (e.data.color_id == null ||e.data.product_version_id == null) ) {
                            sweetAlert("Sorry...", "Color and Version is Mandatory for "+e.data.product_category_name+"","warning");
                            return false;
                        }
                        sampleData[getIndexById(e.data.local_purchase_order_details_id)] = e.data;
                        e.success();
                        return true;
                    }
                },
                destroy: function (e) {
                    // locate item in original datasource and remove it
                    sampleData.splice(getIndexById(e.data.local_purchase_order_details_id), 1);
                    // on success
                    e.success();
                    var entityGrid = $("#poDetailsGrid").data("kendoGrid");
                    var gridData = entityGrid.dataSource.data();
                    var totalNumber = gridData.length;

                    var vatTotal = 0;
                    var taxTotal = 0;
                    var totalAmount = 0;
                    var totalAmountIncVatTax = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                        taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                        totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                        totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                    }

                    $("#vat_total").val(vatTotal);
                    $("#tax_total").val(taxTotal);
                    $("#total_amount_without_vattax").val(totalAmount);
                    $("#total_amount_including_vattax").val(totalAmountIncVatTax);
                }
            },
            error: function (e) {
                // handle data operation error
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "local_purchase_order_details_id",
                    fields: {
                        local_purchase_order_details_id: { editable: false, nullable: true },
                        product_id: { field: "product_id", type: "integer" },
                        product_name: { type: "string" },
                        product_category_id: { field: "product_category_id" },
                        product_category_name: { type: "string" },
                        brand_id: { field: "brand_id", type: "integer" },
                        brand_name: { type: "string", editable: false },
                        unit_id: { field: "unit_id", type: "integer" },
                        unit_name: { type: "string", editable: false },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        product_version_id: { field: "product_version_id", type: "integer" },
                        product_version_name: { type: "string" },
                        quantity: { type: "string" },
                        unit_price: { type: "number" },
                        amount: { type: "string", editable: true },
                        vat_pcnt: { type: "number" },
                        vat_amount: { type: "string", editable: true },
                        tax_pcnt: { type: "number" },
                        tax_amount: { type: "string", editable: true },
                        line_total: { type: "string", editable: true }
                    }
                }
            }
        });



        $("#poDetailsGrid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            toolbar: ["create"],
            selectable: true,
            save: function (data) {

                var tempAmount = +data.model.quantity * +data.model.unit_price;
                data.model.set("amount", tempAmount);
                var tempVatAmount = (+data.model.amount * +data.model.vat_pcnt) / 100;
                data.model.set("vat_amount", tempVatAmount);
                var tempTaxAmount = (+data.model.amount * +data.model.tax_pcnt) / 100;
                data.model.set("tax_amount", tempTaxAmount);
                var lineTotal = +data.model.amount + +data.model.vat_amount + +data.model.tax_amount;
                data.model.set("line_total", lineTotal);
                var entityGrid = $("#poDetailsGrid").data("kendoGrid");
                var gridData = entityGrid.dataSource.data();
                var totalNumber = gridData.length;
                var vatTotal = 0;
                var taxTotal = 0;
                var totalAmount = 0;
                var totalAmountIncVatTax = 0;

                for (var i = 0; i < totalNumber; i++) {
                    vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                    taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                    totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                    totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                }

                $("#vat_total").val(vatTotal);
                $("#tax_total").val(taxTotal);
                $("#total_amount_without_vattax").val(totalAmount);
                $("#total_amount_including_vattax").val(totalAmountIncVatTax);
            },

            edit: function (e) {

                $('input[name="amount"]').attr('readonly', 'readonly');
                $('input[name="vat_amount"]').attr('readonly', 'readonly');
                $('input[name="tax_amount"]').attr('readonly', 'readonly');
                $('input[name="line_total"]').attr('readonly', 'readonly');

            },
            cancel: function(data) {

                var tempAmount = +data.model.quantity * +data.model.unit_price;
                data.model.set("amount", tempAmount);
                var tempVatAmount = (+data.model.amount * +data.model.vat_pcnt) / 100;
                data.model.set("vat_amount", tempVatAmount);
                var tempTaxAmount = (+data.model.amount * +data.model.tax_pcnt) / 100;
                data.model.set("tax_amount", tempTaxAmount);
                var lineTotal = +data.model.amount + +data.model.vat_amount + +data.model.tax_amount;
                data.model.set("line_total", lineTotal);

                var gridData = sampleData;
                var totalNumber = gridData.length;

                var vatTotal = 0;
                var taxTotal = 0;
                var totalAmount = 0;
                var totalAmountIncVatTax = 0;

                for (var i = 0; i < totalNumber; i++) {
                    vatTotal += +parseFloat(gridData[i].vat_amount).toFixed(2);
                    taxTotal += +parseFloat(gridData[i].tax_amount).toFixed(2);
                    totalAmount += +parseFloat(gridData[i].amount).toFixed(2);
                    totalAmountIncVatTax += +parseFloat(gridData[i].line_total).toFixed(2);
                }

                $("#vat_total").val(vatTotal);
                $("#tax_total").val(taxTotal);
                $("#total_amount_without_vattax").val(totalAmount);
                $("#total_amount_including_vattax").val(totalAmountIncVatTax);

            },
            columns: [
                { field: "product_category_id", title: "Product Category", template: "#= product_category_name #", editor: productCategoryDropDownEditor, width: "50px" },
                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "50px" },
                { field: "quantity", title: "PO Quantity", width: "50px" },
                { field: "unit_price", title: "Price", width: "50px" },
                { field: "amount", title: "Amount", width: "50px" },
                { field: "vat_pcnt", title: "VAT %", width: "50px" },
                { field: "vat_amount", title: "VAT Amount", width: "50px" },
                { field: "tax_pcnt", title: "TAX %", width: "50px" },
                { field: "tax_amount", title: "TAX Amount", width: "50px" },
                { field: "line_total", title: "Total Amount", width: "50px" },
                { command: [{ name: "edit",text: { edit: "Edit",   update: "Save", cancel: "Cancel changes"  }}, {name: "destroy" } ], title: "&nbsp;", width: "120px" }
            ],
            editable: "inline"
        });

        //template for product_category comboBox
        function productCategoryDropDownEditor(container, options) {
            jQuery('<input id="productCategoryId" data-text-field="product_category_name" data-value-field="product_category_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductCategories", "ProductCategory")",
                                type: "GET"
                            }
                        }
                    }
                });
        }

        //template for product comboBox
        function productDropDownEditor(container, options) {
            jQuery('<input id="productId" data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    cascadeFrom: "productCategoryId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                type: "GET"
                            }
                        }
                    },
                    change: function(e) {
                        var dataItem = this.dataItem(e.item);
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_id = dataItem.product_id,
                            gridData[sel_idx].product_name = dataItem.product_name;
                        gridData[sel_idx].product_category_id = dataItem.product_category_id;
                        gridData[sel_idx].product_category_name = dataItem.product_category_name;
                        gridData[sel_idx].brand_id = dataItem.brand_id;
                        gridData[sel_idx].brand_name = dataItem.brand_name;
                        gridData[sel_idx].unit_id = dataItem.unit_id;
                        gridData[sel_idx].unit_name = dataItem.unit_name;
                    }
                });
        }


        //template for color comboBox
        function colorDropDownEditor(container, options) {
            jQuery('<input data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    cascadeFrom: "productId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllColorMapping", "ProductColorMapping")",
                                type: "GET"
                            }
                        }
                    },

                    change: function (e) {

                        var dataItem = this.dataItem(e.item);
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].color_id = dataItem.color_id,
                        gridData[sel_idx].color_name = dataItem.color_name;
                    }
                });
        }

        //template for product version comboBox
        function productVersionDropDownEditor(container, options) {
            jQuery('<input  data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    cascadeFrom: "productId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetProductwiseVersion", "ProductVersionMapping")",
                                type: "GET"
                            }
                        }
                    },

                    change: function (e) {

                        var dataItem = this.dataItem(e.item);
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_version_id = dataItem.product_version_id,
                        gridData[sel_idx].product_version_name = dataItem.product_version_name;
                    }
                });
        }

        //productList Grid---------------------


        $("#btnSaveUser").click(function () {
            Loading(true);

            var order_no = $('#order_no').val();
            var local_purchase_order_reference_number = $('#local_purchase_order_reference_number').val();
            var supplier_id = $('#supplier_id').val();
            var currency_id = $('#currency_id').val();
            var company_id = $('#company_id').val();
            var remarks = $('#remarks').val();
            var vat_total = $('#vat_total').val();
            var tax_total = $('#tax_total').val();
            var total_amount_without_vattax = $('#total_amount_without_vattax').val();
            var total_amount_including_vattax = $('#total_amount_including_vattax').val();
            var status = $('#status').val();

            var poMasterData = {
                order_no: order_no,
                local_purchase_order_reference_number:local_purchase_order_reference_number,
                supplier_id: supplier_id,
                currency_id:currency_id,
                company_id:company_id,
                remarks: remarks,
                vat_total: vat_total,
                tax_total: tax_total,
                total_amount_without_vattax: total_amount_without_vattax,
                total_amount_including_vattax: total_amount_including_vattax,
                status: status,
                created_by: userId,
                updated_by: userId
            };

            var poDetailsList = [];
            var poDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < poDetailsGrid.length; i++) {
                var poDetails = {

                    product_id: poDetailsGrid[i].product_id,
                    unit_id: poDetailsGrid[i].unit_id,
                    unit_price: poDetailsGrid[i].unit_price,
                    quantity: poDetailsGrid[i].quantity,
                    amount: poDetailsGrid[i].amount,
                    brand_id: poDetailsGrid[i].brand_id,
                    color_id: poDetailsGrid[i].color_id,
                    vat_amount: poDetailsGrid[i].vat_amount,
                    tax_amount: poDetailsGrid[i].tax_amount,
                    line_total: poDetailsGrid[i].line_total,
                    product_version_id: poDetailsGrid[i].product_version_id,
                    status: poDetailsGrid[i].status,
                    vat_pcnt: poDetailsGrid[i].vat_pcnt,
                    tax_pcnt: poDetailsGrid[i].tax_pcnt,
                    product_category_id: poDetailsGrid[i].product_category_id

                };
                poDetailsList.push(poDetails);
            }

            var localPurchaseOrderModel = {
                LocalPoMasterData: poMasterData,
                LocalPoDetailsList: poDetailsList
            };

            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("Post", "LocalPurchaseOrder")",
                data: JSON.stringify(localPurchaseOrderModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {

                        swal("Success", data.msg, "success");
                        window.location.href = '/LocalPurchaseOrder/Add';
                        return false;
                    } else {
                        swal(data.output, data.msg, data.output);
                        return false;
                    }
                }
            });
        });
    });

</script>
