@{
    ViewBag.Title = "Add";
    var userId = "";
    var partyTypeId = "";
    var partyId = 0;
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
        partyTypeId = Session["party_type_id"].ToString();
        partyId = Convert.ToInt32(Session["party_id"].ToString());
    }
}
<script type="text/javascript">
    var userId = @userId;
    var partyTypeId = @partyTypeId;
    var partyId = @partyId;
</script>

<div class="col-md-12 widget-body" id="context">
    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading">Internal Requisition</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="requisition_no">Requisition No</label>
                        </div>
                        <div class="col-md-3">
                            <input id="requisition_no" name="requisition_no" class="k-textbox" />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="requisition_date">Requisition Date</label>
                        </div>
                        <div class="col-md-3">
                            <input id="requisition_date" name="requisition_date" style="width: 287px;margin-left: 3px;margin-top: 4px;" />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="from_warehouse_id">From Warehouse</label>
                        </div>
                        <div class="col-md-3">
                            <input id="from_warehouse_id" name="from_warehouse_id" />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="address">To Department&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                        </div>
                        <div class="col-md-3">
                            <input id="address" name="address" class="k-textbox" />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="mobile_no">Customer Name&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                        </div>
                        <div class="col-md-3">
                            <input id="customer_name" name="customer_name" class="k-textbox" />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="mobile_no">Customer Mobile</label>
                        </div>
                        <div class="col-md-3">
                            <input id="mobile_no" name="mobile_no" class="k-textbox" />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="remarks">Remarks</label>
                        </div>
                        <div class="col-md-3">
                            <input id="remarks" name="remarks" class="k-textbox" />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="pricing">Pricing&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                        </div>
                        <div class="col-md-3">
                            <input id="pricing" name="pricing" />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading">Requisition Details</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">
                        <div id="RequisitionDetailsGrid"></div>
                    </div>
                </div>
                <br />


            </div>
        </div>
    </div>

    <div class="panel panel-success" id="mrrGrid">
        <div class="panel-heading">Scan Grid</div>
        <div class="panel-body">
            <div class="row" id="daynamicPanel">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="imei_scan"> IMEI Scan</label>
                    </div>
                    <div class="col-md-3">
                        <input id="imei_scan" name="imei_scan" class="k-textbox"/>
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>

    </div>
    <div class="panel panel-success" id="imeiListGrid">
        <div class="panel-heading">IMEI List</div>
        <div class="panel-body">
            <div>
                <div class="row">
                    <div id="MRRIMEIGrid"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading">Payment Information</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="amount">Total Amount</label>
                        </div>
                        <div class="col-md-3">
                            <input id="amount" name="amount" class="k-textbox" disabled />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">

                        </div>
                        <div class="col-md-3">

                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="group-box">
            <div class="row">
                <div class="col-md-12">
                    <input type="button" class="k-button" id="btnSaveRequisition" name="btnSaveRequisition" value="Save Information" />
                </div>
            </div>
        </div>
    </div>
</div>
<p>&nbsp;</p>
<script type="text/javascript">


    $(document).ready(function () {

        $('#context').addClass('animated zoomIn');

        //DateTime Picker
        var todayDate = kendo.toString(kendo.parseDate(new Date()), 'dd/MM/yyyy');
        $("#requisition_date").val(todayDate);
        $("#requisition_date").kendoDateTimePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            value:new Date(),
            format: "yyyy/MM/dd hh:mm tt"
        });

        //Pricing Dropdown
        var dataOfPricing = [
         { text: "MRP", value: "1" },
         { text: "Manual", value: "2" }
        ];
        $("#pricing").kendoComboBox({

            placeholder: "--- Select Pricing ---",
            dataTextField: "text",
            dataValueField: "value",
            dataSource: dataOfPricing

        });

        //From warehouse list
        $("#from_warehouse_id").kendoComboBox({
            // autoBind: true,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllWarehouses", "Warehouse")"
                    }
                }
            }

        });
        $("#from_warehouse_id").data("kendoComboBox").value(1);

        //RequisitionGrid Data Source
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function (e) {
                    e.success(sampleData);
                },
                create: function (e) {

                    // assign an ID to the new item
                    e.data.requisition_details_id = sampleDataNextID++;
                    // save data item to the original datasource

                    var gridData = sampleData;
                    var totalNumber = gridData.length;
                    var count = 0;

                    for (var i = 0; i < totalNumber; i++) {
                        var productId = gridData[i].product_id;
                        var colorId = gridData[i].color_id;
                        var productVersionId = gridData[i].product_version_id;
                        //var isLiveDummy= gridData[i].is_live_dummy;
                        //if (e.data.product_id === productId && e.data.color_id === colorId && e.data.is_live_dummy===isLiveDummy && e.data.product_version_id === productVersionId) {
                        if (e.data.product_id === productId && e.data.color_id === colorId && e.data.product_version_id === productVersionId) {
                            count++;
                        }
                    }

                    ////////////////13.02.2017/////////////////////////////
                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);
                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }
                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {

                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }
                    if ($("#requisition_date").data("kendoDateTimePicker").value() == null) {
                        alert("please select requisition date");
                        return false;
                    }

                    if ($("#party_type_id").data("kendoComboBox").value() == "") {
                        alert("please select party type");
                        return false;
                    }
                    if ($("#party_id").data("kendoComboBox").value() == "") {
                        alert("please select party");
                        return false;
                    }
                    if ($("#pricing").data("kendoComboBox").value() == "") {
                        alert("please select pricing");
                        return false;
                    }
                    if ($("#warehouse_from").data("kendoComboBox").value() == "") {
                        alert("please select warehouse");
                        return false;
                    }

                    //////////////13.02.2017 end///////////////////////////

                    if (count > 0) {
                        sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");

                        return false;
                    } else {
                        sampleData.push(e.data);
                        e.success(e.data);

                        return true;
                    }


                },
                update: function (e) {
                    // locate item in original datasource and update it
                    //sampleData[getIndexById(e.data.requisition_details_id)] = e.data;
                    //e.success();
                    ///////////////////////13.02.2017//////////////////////////
                    var mmm = e.data.quantity;
                    var checkNumeric = $.isNumeric(mmm);

                    if (checkNumeric == false) {
                        sweetAlert("Sorry...", "not valid requisition quantity !!!", "warning");
                        return false;
                    }

                    if (mmm % 1 != 0) {
                        sweetAlert("Sorry...", "requisition quantity decimal not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == 0) {
                        sweetAlert("Sorry...", "requisition quantity zero not allowed !!!", "warning");
                        return false;
                    }
                    if (e.data.quantity == null) {
                        sweetAlert("Sorry...", "requisition quantity is required !!!", "warning");
                        return false;
                    }

                    if (e.data.quantity < 0) {
                        sweetAlert("Sorry...", "negative requisition quantity not allowed !!!", "warning");
                        return false;
                    }
                    if ($("#requisition_date").data("kendoDateTimePicker").value() == null) {
                        alert("please select requisition date");
                        return false;
                    }

                    if ($("#party_id").data("kendoComboBox").value() == "") {
                        alert("please select party");
                        return false;
                    }
                    else {
                        sampleData[getIndexById(e.data.requisition_details_id)] = e.data;
                        e.success();
                    }
                    ///////////////////////13.02.2017//////////////////////////
                    //getRebateAndGiftInfo();

                },
                destroy: function (e) {
                    // locate item in original datasource and remove it
                    sampleData.splice(getIndexById(e.data.requisition_details_id), 1);
                    // on success
                    e.success();
                    var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                    var gridData = entityGrid.dataSource.data();
                    //getRebateAndGiftInfo();
                    var totalNumber = gridData.length;


                }
            },
            error: function (e) {
                // handle data operation error
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            pageSize: 10,
            batch: false,
            schema: {
                model: {
                    id: "requisition_details_id",
                    fields: {
                        requisition_details_id: { editable: false, nullable: true },
                        product_id: { field: "product_id", type: "integer" },
                        product_name: { type: "string" },
                        product_category_id: { field: "product_category_id", type: "integer" },
                        product_category_name: { type: "string", editable: false },
                        unit_id: { field: "unit_id", type: "integer" },
                        unit_name: { type: "string" },
                        brand_id: { field: "brand_id", type: "integer" },
                        brand_name: { type: "string", editable: false },
                        quantity: { type: "string" },
                        color_id: { field: "color_id", type: "integer" },
                        color_name: { type: "string" },
                        product_version_id: { field: "product_version_id", type: "integer" },
                        product_version_name: { type: "string" },
                        price_ori: { type: "number" },
                        price: { type: "number" },
                        mrp_cost: { type: "number" },
                        amount: { type: "string" },
                        discount: { type: "number" },
                        dis_amt: { type: "string" },
                        line_total: { type: "string" }
                        //is_live_dummy: {type: "boolean"}
                    }
                }
            }
        });
        //Requisition Grid
        $("#RequisitionDetailsGrid").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            toolbar: ["create"],
            selectable: true,
            save: function (data) {

                var amount = 0;
                var tempAmount = 0;
                var pp = $("#pricing").val();
                if (pp == 1) {
                    data.model.set("price", data.model.mrp_cost);
                }
                tempAmount = data.model.quantity * data.model.price;
                var discountAmount = 0;
                var totalAmount = 0;

                discountAmount = tempAmount * ((data.model.discount) / 100);
                totalAmount = tempAmount - discountAmount;
                data.model.set("amount", tempAmount);
                data.model.set("dis_amt", discountAmount);

                data.model.set("line_total", totalAmount);


                var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                var gridData = entityGrid.dataSource.data();
                var totalNumber = gridData.length;

                for (var i = 0; i < totalNumber; i++) {
                    amount += +parseFloat(gridData[i].line_total).toFixed(2);
                }

                $("#amount").val(amount);
            },

            cancel: function (data) {
                var tempAmount = +data.model.quantity * +data.model.price;
                data.model.set("line_total", tempAmount);

                var gridData = sampleData;
                var totalNumber = gridData.length;
                console.log(sampleData);

            },
            columns: [
                { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "130px" },
                { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "100px" },
                { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "100px" },
                { field: "quantity", title: "Quantity", width: "50px" },
                { field: "price", title: "Price", width: "50px" },
                { field: "line_total", title: "Total Amount", width: "70px" },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
            ],
            editable: "inline"
        });
        //template for product comboBox
        function productDropDownEditor(container, options) {
            jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: false,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductWithoutAss", "OnlineRequisition")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        pId = dataItem.product_id;

                        console.log(dataItem.product_name);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_id = dataItem.product_id,
                        gridData[sel_idx].product_name = dataItem.product_name;
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductsWiseFirstColorVersion", "Product")",
                            data: {
                                product_id: pId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {
                                gridData[sel_idx].color_id = data.color_id;
                                $("#colorId").data("kendoComboBox").value(gridData[sel_idx].color_id);
                                gridData[sel_idx].color_name = data.color_name;
                                gridData[sel_idx].product_version_id = data.product_version_id;
                                gridData[sel_idx].product_version_name = data.product_version_name;
                                $("#productversionId").data("kendoComboBox").value(gridData[sel_idx].product_version_id);
                                var pp = $("#pricing").val();
                                if (pp == 1) {
                                    gridData[sel_idx].price = data.mrp_cost;
                                    gridData[sel_idx].mrp_cost = data.mrp_cost;
                                }
                            }
                        });

                    }
                });
        }


        //template for color comboBox
        function colorDropDownEditor(container, options) {
            jQuery('<input id="colorId" required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    cascadeFrom: "productId",
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetProductwiseColor", "ProductPriceing")",
                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        cId = dataItem.color_id;

                        console.log(dataItem.product_name);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        var vId = gridData[sel_idx].product_version_id;

                        gridData[sel_idx].color_id = dataItem.color_id,
                        gridData[sel_idx].color_name = dataItem.color_name;
                        /////////////////15.02.2017////////////////////
                        var pid = $("#party_type_id").val();
                        //alert(vId);
                        $.ajax({
                            type: "GET",
                            url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                            data: {
                                party_type_id: pid,
                                product_id: pId,
                                color_id: cId,
                                product_version_id: vId
                            },
                            dataType: "json",
                            contentType: "application/json",
                            success: function (data) {

                                var pp = $("#pricing").val();
                                if (pp == 1) {
                                    gridData[sel_idx].price = data;
                                    gridData[sel_idx].price_ori = data;
                                    gridData[sel_idx].mrp_cost = data;
                                } else {
                                    gridData[sel_idx].price = 0;
                                    gridData[sel_idx].price_ori = 0;
                                }

                            }
                        });
                        //////////////15.02.2017/////////////////////
                        //load version dropdown by product && color wise
                        $("#productversionId").kendoComboBox({
                            autoBind: true,
                            placeholder: "--- Select Version ---",
                            dataTextField: "product_version_name",
                            dataValueField: "product_version_id",
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetProductColorwiseVersion", "ProductPriceing")",
                                        data: { aa: pId, bb: cId }
                                    }
                                }
                            },
                            change: function (e) {

                                var dataItem = this.dataItem(e.item);

                                //////////////////////23.01.2017 start//////////////////////
                                //to get party type, product, color and version wise price
                                var partyTypeId = ($("#party_type_id").val());
                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("GetProductColorVersionwisePrice", "ProductPriceing")",
                                    data: {
                                        party_type_id: partyTypeId,
                                        product_id: pId,
                                        color_id: cId,
                                        product_version_id: dataItem.product_version_id
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        var pp = $("#pricing").val();
                                        if (pp == 1) {
                                            gridData[sel_idx].price = data;
                                            gridData[sel_idx].price_ori = data;
                                            gridData[sel_idx].mrp_cost = data;
                                        } else {
                                            gridData[sel_idx].price = 0;
                                            gridData[sel_idx].price_ori = 0;
                                        }
                                    }
                                });
                                //////////////////////23.01.2017 end//////////////////////

                                var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                gridData[sel_idx].product_version_name = dataItem.product_version_name;

                            }
                        });
                    }
                });
        }

        //load all version
        function productVersionDropDownEditor(container, options) {

            jQuery('<input id="productversionId" required data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoComboBox({
                    autoBind: true,
                    placeholder: "-Select-",
                    dataSource: {
                        transport: {
                            read: {
                                url: "@UrlConfig.Action("GetAllProductVersionForDropDown", "ProductVersion")",

                                type: "GET"
                            }
                        }

                    },

                    change: function (e) {
                        var dataItem = this.dataItem(e.item);
                        var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                        var sel = grid.select();
                        var sel_idx = sel.index();
                        var gridData = grid.dataSource.data();
                        gridData[sel_idx].product_version_id = dataItem.product_version_id,
                            gridData[sel_idx].product_version_name = dataItem.product_version_name;


                    }
                });
        }

        // Vat Tax Portion
        $("#vat_pcnt").keyup(function () {
            this.value = this.value.replace(/[^0-9\.]/g,'');

        });
        $("#discount_pcnt").keyup(function () {
            this.value = this.value.replace(/[^0-9\.]/g,'');

        });
        $("#discount_amount").keyup(function () {
            this.value = this.value.replace(/[^0-9\.]/g,'');

        });

        // Vat Parcentage
        $('#vat_pcnt').live("keypress", function(e) {
            if (e.keyCode == 13) {
                this.value = this.value.replace(/[^0-9\.]/g,'');
                var vatPcnt= $("#vat_pcnt").val();
                var amount=$("#amount").val();
                var vat = amount * vatPcnt / 100;
                var discountPcnt= $("#discount_amount").val();
                var amountWithVat =parseFloat(vat)  + parseFloat(amount)-parseFloat(discountPcnt);

                $('#amount_with_vat').val(amountWithVat);
                if (vatPcnt != null) {
                    $("#amount_with_vat").val(amountWithVat);
                    $("#net_amount").val(amountWithVat);
                } else {
                    $("#net_amount").val(amount);
                }
                if (vatPcnt==null ||vatPcnt=="" ||vatPcnt==0) {
                    $("#amount_with_vat").val(amount);
                }
                var netAmnt=  $("#net_amount").val();
                if (netAmnt <= 0) {
                    swal("Warning", "Invalid Net Amount !!", "warning");
                    return false;
                }

            }
        });

        $('#discount_pcnt').live("keypress", function(e) {
            if (e.keyCode == 13) {
                var vatPcnt= $("#vat_pcnt").val();
                var discountPcnt= $("#discount_pcnt").val();
                var discountAmount= $("#discount_amount").val();
                var amountWithVat= $('#amount_with_vat').val();
                var xx = amountWithVat * discountPcnt / 100;

                $("#discount_amount").val(xx);
                $("#net_amount").val(amountWithVat-xx);
                if (discountPcnt == null || discountPcnt == "" ) {
                    var kkk = $('#amount').val();
                    $("#net_amount").val(kkk);
                }
                if (discountPcnt == null || discountPcnt == "" && vatPcnt !=null) {

                    $("#net_amount").val(amountWithVat);
                }
                if (discountAmount == null || discountAmount == "" ) {
                    var kkk = $('#amount').val();
                    $("#net_amount").val(kkk);
                }
                var netAmnt=  $("#net_amount").val();
                if (netAmnt <= 0) {
                    swal("Warning", "Invalid Net Amount !!", "warning");
                    return false;
                }

            }
        });
        $('#discount_amount').live("keypress", function(e) {
            if (e.keyCode == 13) {

                var discountAmount= $("#discount_amount").val();

                var amountWithVat= $('#amount_with_vat').val();
                var xx = discountAmount / amountWithVat * 100;
                var vatPcnt= $("#vat_pcnt").val();

                $("#discount_pcnt").val(xx);

                if (discountAmount == null ||discountAmount=== "" && vatPcnt==null) {
                    var kkk = $('#amount').val();
                    $("#net_amount").val(kkk);

                }
                if (discountAmount == null ||discountAmount=== "" && vatPcnt!=null) {
                    var amountWithVat= $('#amount_with_vat').val();
                    $("#net_amount").val(amountWithVat);

                }
                else {
                    $("#net_amount").val(amountWithVat-discountAmount);
                }
                var netAmnt=  $("#net_amount").val();
                if (netAmnt <= 0) {
                    swal("Warning", "Invalid Net Amount !!", "warning");
                    return false;
                }

            }
        });

        $("#paid_amount").keyup(function () {
            this.value = this.value.replace(/[^0-9\.]/g,'');

        });

        $('#paid_amount').live("keypress", function(e) {
            if (e.keyCode == 13) {

                var paidAmount= $("#paid_amount").val();

                var netAmount= $('#net_amount').val();
                var xx = paidAmount - netAmount ;

                $("#return_amount").val(xx);

            }
        });

        //warehouse list
        $("#from_warehouse_id").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetWarehouseByPartyId", "Warehouse")"
                    }
                }
            }//,

        });


        //if (partyTypeId != 1) {
        //    $("#from_warehouse_id").kendoComboBox({enable: false});
        //}

        //$("#from_warehouse_id").data("kendoComboBox").select(1);




        // this for IMEI Scan and load grid------------------------

        var sampleData = [];

        function checkDuplicateImei(hayStack, imei_no) {
            if (!hayStack) {
                return false;
            } else {
                for (var i = 0; i < hayStack.length; i++) {
                    if (hayStack[i].imei_no == imei_no) {
                        return true;
                    }
                }
                return false;
            }
        }

         $('#daynamicPanel :input').live('keyup', function(e) {

            if(e.keyCode === 13)
            {
                $(this).trigger("enterKey");
                var id = this.id;
                var imei_no =$('#scan_imei').val();
                var party_id =partyId;
                Loading(true);
                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetProductInformation", "Grn")?imei_no="+imei_no+"",
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        Loading(false);

                        if (data !='') {

                            for (var i = 0; i < data.length; i++) {
                                var productDetails = {
                                    receive_serial_no_details_id: data[i].receive_serial_no_details_id,
                                    product_id: data[i].product_id,
                                    product_name: data[i].product_name,
                                    color_id: data[i].color_id,
                                    color_name: data[i].color_name,
                                    price: data[i].price,
                                    discount: 0,
                                    line_total:data[i].price-0,
                                    imei_no: data[i].imei_no
                                };
                                var isDuplicate = checkDuplicateImei(sampleData,imei_no);
                                if (isDuplicate) {
                                    swal("Exception", "IMEI already in list !!", "warning");
                                } else {
                                    sampleData.push(productDetails);
                                }

                            }
                            console.log(sampleData);

                            //productList Grid---------------------

                            // custom logic start

                            var sampleDataNextID = sampleData.length + 1;

                            function getIndexById(id) {
                                var idx,
                                    l = sampleData.length;

                                for (var j = 0; j < l; j++) {
                                    if (sampleData[j].receive_serial_no_details_id == id) {
                                        return j;
                                    }
                                }
                                return null;
                            }

                            // custom logic end

                            var dataSource = new kendo.data.DataSource({
                                transport: {
                                    read: function (e) {
                                        // on success
                                        e.success(sampleData);
                                        //console.log(sampleData);

                                        var totalNumber = sampleData.length;

                                        var amount = 0;

                                        for (var i = 0; i < totalNumber; i++) {

                                            amount += +parseFloat(sampleData[i].line_total).toFixed(2);

                                        }
                                        $("#amount").val(amount);
                                        var vatPcnt = $("#vat_pcnt").val();
                                        var amount_with_vat = amount * vatPcnt / 100;
                                        $("#amount_with_vat").val(amount+amount_with_vat);
                                        $("#net_amount").val(amount+amount_with_vat);
                                    },
                                    create: function (e) {
                                        //// assign an ID to the new item
                                        //e.data.receive_serial_no_details_id = sampleDataNextID++;
                                        //// save data item to the original datasource

                                        //var gridData = sampleData;
                                        //var totalNumber = gridData.length;
                                        //var count = 0;

                                        //for (var i = 0; i < totalNumber; i++) {
                                        //    var productId = gridData[i].product_id;
                                        //    var colorId = gridData[i].color_id;
                                        //    if (e.data.product_id === productId && e.data.color_id === colorId) {
                                        //        count++;
                                        //    }
                                        //}
                                        //if (count > 0) {
                                        //    sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                                        //    e.preventDefault();
                                        //    return false;
                                        //} else {
                                        //    sampleData.push(e.data);
                                        //    e.success(e.data);
                                        //    getRebateAndGiftInfo();
                                        //    console.log(sampleData);
                                        //    return true;
                                        //}

                                    },
                                    update: function (e) {
                                        // locate item in original datasource and update it
                                        sampleData[getIndexById(e.data.receive_serial_no_details_id)] = e.data;
                                        //getRebateAndGiftInfo();
                                        e.success();

                                    },
                                    destroy: function (e) {
                                        // locate item in original datasource and remove it
                                        // var requisitionDetailsId=e.data.requisition_details_id;

                                        sampleData.splice(getIndexById(e.data.receive_serial_no_details_id), 1);

                                        @*$.ajax({
                                            type: "GET",
                                            url: "@UrlConfig.Action("DeleteRequisitionDetails", "Requisition")",
                                            data: {
                                                requisition_details_id: requisitionDetailsId
                                            },
                                            dataType: "json",
                                            contentType: "application/json",
                                            success: function (data) {
                                                Loading(false);
                                                console.log(data);
                                                if (data.output === "success") {


                                                    swal("Success", data.msg, "success");
                                                    return false;
                                                } else {
                                                    swal("Exception", data.msg, "error");
                                                    return false;
                                                }
                                            }
                                        });*@

                                        // on success
                                        e.success();
                                        var entityGrid = $("#RequisitionScanGrid").data("kendoGrid");
                                        var gridData = entityGrid.dataSource.data();
                                        var totalNumber = gridData.length;

                                        var amount = 0;

                                        for (var i = 0; i < totalNumber; i++) {

                                            amount += +parseFloat(gridData[i].line_total).toFixed(2);

                                        }
                                        $("#amount").val(amount);
                                        var vatPcnt = $("#vat_pcnt").val();
                                        var amount_with_vat = amount * vatPcnt / 100;
                                        $("#amount_with_vat").val(amount+amount_with_vat);
                                        $("#net_amount").val(amount+amount_with_vat);
                                        //console.log(gridData);
                                    }
                                },
                                error: function (e) {
                                    // handle data operation error
                                    alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                                },
                                pageSize: 10,
                                batch: false,
                                schema: {
                                    model: {
                                        id: "receive_serial_no_details_id",
                                        fields: {
                                            receive_serial_no_details_id: { editable: false, nullable: true },
                                            product_id: { field: "product_id", type: "integer" },
                                            product_name: { type: "string" },
                                            color_id: { field: "color_id", type: "integer" },
                                            color_name: { type: "string" },
                                            imei_no: { type: "string" },
                                            price: { type: "string" },
                                            discount: { type: "string", editable: true },
                                            line_total: { type: "string", editable: true }

                                        }
                                    }
                                }
                            });



                            $("#RequisitionScanGrid").kendoGrid({
                                dataSource: dataSource,
                                pageable: true,
                                // toolbar: ["create"],
                                selectable: true,
                                save: function (data) {

                                    var tempAmount = +data.model.price - +data.model.discount;
                                    data.model.set("line_total", tempAmount);


                                    var entityGrid = $("#RequisitionScanGrid").data("kendoGrid");
                                    var gridData = entityGrid.dataSource.data();
                                    var totalNumber = gridData.length;

                                    var amount = 0;

                                    for (var i = 0; i < totalNumber; i++) {
                                        amount += +parseFloat(gridData[i].line_total).toFixed(2);
                                    }

                                    $("#amount").val(amount);
                                    var vatPcnt = $("#vat_pcnt").val();
                                    var amount_with_vat = amount * vatPcnt / 100;
                                    $("#amount_with_vat").val(amount+amount_with_vat);
                                    $("#net_amount").val(amount+amount_with_vat);

                                },
                                edit: function (e) {

                                    $('input[name="line_total"]').attr('readonly', 'readonly');
                                    $('input[name="price"]').attr('readonly', 'readonly');

                                },
                                cancel: function(data) {

                                    var tempAmount = +data.model.quantity * +data.model.price;
                                    data.model.set("lineTotal", tempAmount);


                                    var gridData = sampleData;
                                    var totalNumber = gridData.length;


                                    console.log(sampleData);

                                },
                                columns: [
                                    { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                                    { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                                    { field: "imei_no", title: "IMEI", width: "50px" },
                                    { field: "price", title: "Price", width: "50px" },
                                    { field: "discount", title: "Discount", width: "50px" },
                                    { field: "line_total", title: "Line Total", width: "50px" },
                                    { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
                                ],
                                editable: "inline"
                            });


                            var len = $("#RequisitionScanGrid").find("tbody tr").length;
                            for(var j=0;j<=len ; j++)
                            {
                                var model = $("#RequisitionScanGrid").data("kendoGrid").dataSource.at(j);
                                if (model) {//field names
                                    model.fields["product_id"].editable = false;
                                    model.fields["color_id"].editable = false;
                                    model.fields["imei_no"].editable = false;
                                    //model.fields["price"].editable = false;
                                    //model.fields["line_total"].editable = false;

                                }

                            }

                            //template for product comboBox
                            function productDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#RequisitionScanGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].product_id = dataItem.product_id,
                                                gridData[sel_idx].product_name = dataItem.product_name;
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                                gridData[sel_idx].color_name = dataItem.color_name;
                                            gridData[sel_idx].unit_id = dataItem.unit_id;
                                            gridData[sel_idx].unit_name = dataItem.unit_name;
                                            gridData[sel_idx].brand_id = dataItem.brand_id;
                                            gridData[sel_idx].brand_name = dataItem.brand_name;
                                            gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                            gridData[sel_idx].product_category_name = dataItem.product_category_name;

                                            if (partyTypeId==1) {
                                                gridData[sel_idx].price = dataItem.rp_price;
                                            }
                                            if (partyTypeId==2) {
                                                gridData[sel_idx].price = dataItem.md_price;
                                            }
                                            if (partyTypeId==3) {
                                                gridData[sel_idx].price = dataItem.bs_price;
                                            }

                                        }
                                    });
                            }


                            //template for color comboBox
                            function colorDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllColors", "Color")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#RequisitionScanGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                                gridData[sel_idx].color_name = dataItem.color_name;


                                        }
                                    });
                            }

                            //productList Grid---------------------



                            //return false;
                        } else {
                            swal("Exception", "Product Not Available !!", "error");
                            return false;
                        }
                    }
                });

                $("#" + id + "").val("");
            }
        });
        //--------------------------------------------------------------





        $("#btnSaveRequisition").click(function () {

            swal("Opps!", "Work Under Prograss...", "warning");
            @*var newWindow = window.open("","_blank");
            newWindow.blur();

            Loading(true);

            var party_type_id = $('#party_type_id').val();
            var party_id = $('#party_id').val();
            var customer_name = $('#customer_name').val();
            var address = $('#address').val();
            var mobile_no=$('#mobile_no').val();
            var from_warehouse_id = $('#from_warehouse_id').val();
            var to_warehouse_id=$('#to_warehouse_id').val();
            var remarks = $('#remarks').val();
            //var created_by = userId;
            //var owner_party_id = partyId;

            var amount = $('#amount').val();
            var vat_pcnt = $('#vat_pcnt').val();
            var amount_with_vat = $('#amount_with_vat').val();
            var discount_pcnt = $('#discount_pcnt').val();
            var discount_amount = $('#discount_amount').val();
            var net_amount = $('#net_amount').val();
            var paid_amount = $('#paid_amount').val();
            var return_amount = $('#return_amount').val();
            //var status = $('#status').val();



            var PosMasterData = {
                party_type_id: party_type_id,
                party_id: party_id,
                customer_name: customer_name,
                address: address,
                mobile_no: mobile_no,
                from_warehouse_id: from_warehouse_id,
                to_warehouse_id: to_warehouse_id,
                amount: amount,
                vat_pcnt: vat_pcnt,
                amount_with_vat: amount_with_vat,
                discount_pcnt: discount_pcnt,
                discount_amount: discount_amount,
                net_amount: net_amount,
                paid_amount: paid_amount,
                return_amount: return_amount,

                remarks: remarks,
                created_by: userId,
                owner_party_id: partyId
            };

            var ProductDetailsList = [];
            var ProductDetailsGrid = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < ProductDetailsGrid.length; i++) {
                var productDetails = {

                    product_id: ProductDetailsGrid[i].product_id,
                    color_id: ProductDetailsGrid[i].color_id,
                    imei_no: ProductDetailsGrid[i].imei_no,
                    price: ProductDetailsGrid[i].price,
                    discount: ProductDetailsGrid[i].discount,
                    line_total: ProductDetailsGrid[i].line_total

                };
                ProductDetailsList.push(productDetails);
            }

            var PosModel = {
                PosMasterData: PosMasterData,
                PosDetailsList: ProductDetailsList
            };

            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("Post", "Pos")",
                data: JSON.stringify(PosModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    //if (data.output === "success") {
                    //    var pos_master_id = data.returnvalue.pos_master_id;
                    //    var url = "/CentralPointOfSale/GetPosInvoiceReport?pos_master_id=" + pos_master_id;
                    //    newWindow.location.href = url;
                    //    newWindow.focus();
                    //    swal("Success", data.msg, "success");
                    //    window.location.href = '/PartyPointOfSale/index';
                    //    return false;
                    //} else {
                        //swal("Exception", data.msg, "error");
                        //return false;
                    //}
                }
            });*@

    });

    });



</script>



