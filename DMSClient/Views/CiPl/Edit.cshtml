@{
    ViewBag.Title = "Edit CiPl";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }

}
<script type="text/javascript">
    var userId = @userId;
</script>

<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">CiPl Master</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="supplier_id">Supplier&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="supplier_id" name="supplier_id" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="purchase_order_master_id">PI&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="purchase_order_master_id" name="purchase_order_master_id" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="ci_no">CI No&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="ci_no" name="ci_no" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="ref_no">Ref. No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="ref_no" name="ref_no" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="ci_date">CI Date&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="ci_date" name="ci_date" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="payment_term">Payment Term</label>
                    </div>
                    <div class="col-md-3">
                        <input id="payment_term" name="payment_term" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="dc_no">DC No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="dc_no" name="dc_no" class="k-textbox" />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="issue_date">Issue Date&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="issue_date" name="issue_date" />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            @*<div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="ci_attachment">CI Attachment :&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-10">
                                <input type="file" class="" name="ci_attachment" id="ci_attachment" style="width: 80%;">
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="k-button" id="btnCiUpload" name="btnCiUpload" value="Upload" />
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2">
                            <label for="pl_attachment">PL Attachment :&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-10">
                                <input type="file" class="" name="pl_attachment" id="pl_attachment" style="width: 80%;">
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="k-button" id="btnPlUpload" name="btnPlUpload" value="Upload" />
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>*@
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">Product List</div>
        <div class="panel-body">
            <div id="poDetailsGrid"></div>
            @*<div class="group-box">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2"><label for="vat_total">Vat Total</label></div>
                            <div class="col-md-3"><input id="vat_total" name="vat_total" class="k-textbox" disabled /></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2"><label for="tax_total">Tax Total</label></div>
                            <div class="col-md-3"><input id="tax_total" name="tax_total" class="k-textbox" disabled /></div>
                            <div class="col-md-1"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2"><label for="total_amount_without_vattax">Total Amount</label></div>
                            <div class="col-md-3"><input id="total_amount_without_vattax" name="total_amount_without_vattax" class="k-textbox" disabled /></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2"><label for="total_amount_including_vattax">Total Amount (+ Vat & Tax)</label></div>
                            <div class="col-md-3"><input id="total_amount_including_vattax" name="total_amount_including_vattax" class="k-textbox" disabled /></div>
                            <div class="col-md-1"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2"><label for="status">Status</label></div>
                            <div class="col-md-3"><input id="status" name="status" class="k-textbox" value="Created" disabled /></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                <div class="col-md-3">
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
    </div>
    <div class="group-box">
        <div class="row">
            <div class="col-md-12">
                <input type="button" class="k-button" id="btnSaveUser" name="btnSaveUser" value="Update Information" />
            </div>
        </div>
    </div>
</div>


<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">

    $(document).ready(function () {

        var sampleData = [];
        //get master and details information----------------
        var ci_pl_master_id = '@ViewBag.ciPlMasterId';
        Loading(true);
        $.ajax({
            type: "POST",
            url: "@UrlConfig.Action("GetCiPlById", "CiPl")",
            data: {
                ci_pl_master_id: ci_pl_master_id
            },
            dataType: "json",
            success: function (data) {
                Loading(false);

                $("#supplier_id").val(data.CiPlMasterData.supplier_id);
                $('#purchase_order_master_id').data("kendoComboBox").value(data.CiPlMasterData.purchase_order_master_id);
                $("#ci_no").val(data.CiPlMasterData.ci_no);
                $("#ref_no").val(data.CiPlMasterData.ref_no);
                $("#ci_date").val(kendo.toString(kendo.parseDate(data.CiPlMasterData.ci_date, "yyyy-MM-dd"), "yyyy/MM/dd"));
                $("#payment_term").val(data.CiPlMasterData.payment_term);
                $("#dc_no").val(data.CiPlMasterData.dc_no);
                $("#issue_date").val(kendo.toString(kendo.parseDate(data.CiPlMasterData.issue_date, "yyyy-MM-dd"), "yyyy/MM/dd"));


                for (var i = 0; i < data.CiPlDetailsList.length; i++) {
                    var poDetails = {

                        ci_pl_details_id:data.CiPlDetailsList[i].ci_pl_details_id,
                        product_id: data.CiPlDetailsList[i].product_id,
                        product_name: data.CiPlDetailsList[i].product_name,
                        ci_pl_master_id:data.CiPlDetailsList[i].ci_pl_master_id,
                        quantity: data.CiPlDetailsList[i].quantity,
                        unit_price: data.CiPlDetailsList[i].unit_price,
                        amount: data.CiPlDetailsList[i].amount,
                        nw_kg_ctn: data.CiPlDetailsList[i].nw_kg_ctn,
                        gw_kg_ctn: data.CiPlDetailsList[i].gw_kg_ctn,
                        measurement: data.CiPlDetailsList[i].measurement

                    };
                    sampleData.push(poDetails);
                }

                console.log(sampleData);

                // custom logic start

                var sampleDataNextID = sampleData.length + 1;

                function getIndexById(id) {
                    var idx,
                        l = sampleData.length;

                    for (var j = 0; j < l; j++) {
                        if (sampleData[j].ci_pl_details_id == id) {
                            return j;
                        }
                    }
                    return null;
                }

                // custom logic end

                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: function (e) {
                            // on success

                            e.success(sampleData);

                            // on failure
                            //e.error("XHR response", "status code", "error message");
                        },
                        create: function (e) {

                            // assign an ID to the new item
                            e.data.ci_pl_details_id = sampleDataNextID++;
                            // save data item to the original datasource

                            var gridData = sampleData;
                            var totalNumber = gridData.length;
                            var count = 0;

                            for (var i = 0; i < totalNumber; i++) {
                                var productId = gridData[i].product_id;
                                if (e.data.product_id === productId) {
                                    count++;
                                }
                            }
                            var mmm = e.data.quantity;

                            var axx= $.isNumeric(mmm);
                            //30.04.2017 start
                            var uPrice = e.data.unit_price;
                            var nwkgCtn = e.data.nw_kg_ctn;
                            var gwkgCtn = e.data.gw_kg_ctn;
                            var measureMent = e.data.measurement;
                            //30.04.2017 end

                            if (axx==false ) {
                                sweetAlert("Sorry...", "not a valid po quantity !!!", "warning");
                                return false;
                            }
                            if (mmm % 1 != 0) {
                                sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.quantity == 0) {
                                sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.quantity == null) {
                                sweetAlert("Sorry...", "quantity is required !!!", "warning");
                                return false;
                            }
                            if (e.data.quantity < 0) {
                                sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                                return false;
                            }
                            //30.04.2017 start
                            var xxuPrc= $.isNumeric(uPrice);
                            var xxnwkgCtn = $.isNumeric(nwkgCtn);
                            var xxgwkgCtn = $.isNumeric(gwkgCtn);
                            var xxmeasureMent = $.isNumeric(measureMent);

                            //price validation
                            if (xxuPrc == false) {
                                sweetAlert("Sorry...", "not valid price !!!", "warning");
                                return false;
                            }
                            if (e.data.unit_price == 0) {
                                sweetAlert("Sorry...", "zero price not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.unit_price < 0) {
                                sweetAlert("Sorry...", "negative price not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.unit_price == null) {
                                sweetAlert("Sorry...", "price is required !!!", "warning");
                                return false; 
                            }
                            //nw_kg_ctn validation
                            if (xxnwkgCtn == false) {
                                e.data.nw_kg_ctn = 0;
                            }
                            if (e.data.nw_kg_ctn < 0) {
                                sweetAlert("Sorry...", "negative NW KG/CTN is not allowed !!!", "warning");
                                return false; 
                            }
                            //gw_kg_ctn validation
                            if (xxgwkgCtn == false) {
                                e.data.gw_kg_ctn = 0;
                            }
                            if (e.data.gw_kg_ctn < 0) {
                                sweetAlert("Sorry...", "negative GW KG/CTN is not allowed !!!", "warning");
                                return false; 
                            }
                            //measurement validation
                            if (xxmeasureMent == false) {
                                e.data.measurement = 0;
                            }
                            if (e.data.measurement < 0) {
                                sweetAlert("Sorry...", "negative Measurement is not allowed !!!", "warning");
                                return false; 
                            }
                            //30.04.2017 end

                            if (count > 0) {
                                sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                                //e.preventDefault();
                                return false;
                            } else {
                                sampleData.push(e.data);
                                e.success(e.data);
                                console.log(sampleData);
                                return true;
                            }


                            // on success

                            // on failure
                            //e.error("XHR response", "status code", "error message");
                        },
                        update: function (e) {
                            
                            var mmm = e.data.quantity;

                            var axx= $.isNumeric(mmm);
                            //30.04.2017 start
                            var uPrice = e.data.unit_price;
                            var nwkgCtn = e.data.nw_kg_ctn;
                            var gwkgCtn = e.data.gw_kg_ctn;
                            var measureMent = e.data.measurement;

                            var xxuPrc= $.isNumeric(uPrice);
                            var xxnwkgCtn = $.isNumeric(nwkgCtn);
                            var xxgwkgCtn = $.isNumeric(gwkgCtn);
                            var xxmeasureMent = $.isNumeric(measureMent);
                            //30.04.2017 end

                            if (axx==false ) {
                                sweetAlert("Sorry...", "not a valid po quantity !!!", "warning");
                                return false;
                            }
                            if (mmm % 1 != 0) {
                                sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.quantity == 0) {
                                sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.quantity == null) {
                                sweetAlert("Sorry...", "quantity is required !!!", "warning");
                                return false;
                            }
                            //30.04.2017 start
                            //price validation
                            if (xxuPrc == false) {
                                sweetAlert("Sorry...", "not valid price !!!", "warning");
                                return false;
                            }
                            if (e.data.unit_price == 0) {
                                sweetAlert("Sorry...", "zero price not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.unit_price < 0) {
                                sweetAlert("Sorry...", "negative price not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.unit_price == null) {
                                sweetAlert("Sorry...", "price is required !!!", "warning");
                                return false; 
                            }
                            //nw_kg_ctn validation
                            if (xxnwkgCtn == false) {
                                e.data.nw_kg_ctn = 0;
                            }
                            if (e.data.nw_kg_ctn < 0) {
                                sweetAlert("Sorry...", "negative NW KG/CTN is not allowed !!!", "warning");
                                return false; 
                            }
                            //gw_kg_ctn validation
                            if (xxgwkgCtn == false) {
                                e.data.gw_kg_ctn = 0;
                            }
                            if (e.data.gw_kg_ctn < 0) {
                                sweetAlert("Sorry...", "negative GW KG/CTN is not allowed !!!", "warning");
                                return false; 
                            }
                            //measurement validation
                            if (xxmeasureMent == false) {
                                e.data.measurement=0;
                            }
                            if (e.data.measurement < 0) {
                                sweetAlert("Sorry...", "negative Measurement is not allowed !!!", "warning");
                                return false; 
                            }
                            //30.04.2017 end
                            if (e.data.quantity < 0) {
                                sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                                return false;
                            }
                            else {
                                sampleData[getIndexById(e.data.ci_pl_details_id)] = e.data;
                                e.success();
                                return true;
                            }

                        },
                        destroy: function (e) {
                            // locate item in original datasource and remove it
                            sampleData.splice(getIndexById(e.data.ci_pl_details_id), 1);
                            // on success
                            e.success();

                            $.ajax({
                                type: "DELETE",
                                url: "@UrlConfig.Action("DeleteCiPlDetailsById", "CiPl")?ci_pl_details_id="+e.data.ci_pl_details_id,
                                dataType: "json",
                                contentType: "application/json",
                                success: function (data) {
                                    Loading(false);
                                    console.log(data);

                                }
                            });

                        }
                    },
                    error: function (e) {
                        // handle data operation error
                        alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                    },
                    pageSize: 10,
                    batch: false,
                    schema: {
                        model: {
                            id: "ci_pl_details_id",
                            fields: {
                                ci_pl_details_id: { editable: false, nullable: true },
                                product_id: { field: "product_id", type: "integer" },
                                product_name: { type: "string" },
                                product_category_id: { field: "product_category_id" },
                                product_category_name: { type: "string", editable: false },
                                brand_id: { field: "brand_id", type: "integer" },
                                brand_name: { type: "string", editable: false },
                                unit_id: { field: "unit_id", type: "integer" },
                                unit_name: { type: "string", editable: false },
                                color_id: { field: "color_id", type: "integer" },
                                color_name: { type: "string" },
                                product_version_id: { field: "product_version_id", type: "integer" },
                                product_version_name: { type: "string" },
                                quantity: { type: "string" },
                                //unit_price: { type: "number" },
                                unit_price: { type: "string" },
                                amount: { type: "string", editable: true },
                                //nw_kg_ctn: { type: "number" },
                                //gw_kg_ctn: { type: "number" },
                                //measurement: { type: "number" }
                                nw_kg_ctn: { type: "string" },
                                gw_kg_ctn: { type: "string" },
                                measurement: { type: "string" }
                            }
                        }
                    }
                });



                $("#poDetailsGrid").kendoGrid({
                    dataSource: dataSource,
                    pageable: true,
                    toolbar: ["create"],
                    selectable: true,
                    save: function (data) {

                        var tempAmount = +data.model.quantity * +data.model.unit_price;
                        data.model.set("amount", tempAmount);
                    },

                    edit: function (e) {
                        $('input[name="amount"]').attr('readonly', 'readonly');
                        $('input[name="vat_amount"]').attr('readonly', 'readonly');
                    },
                    cancel: function(data) {

                        var tempAmount = +data.model.quantity * +data.model.unit_price;
                        data.model.set("amount", tempAmount);
                        console.log(sampleData);

                    },
                    columns: [
                        { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                        { field: "quantity", title: "PO Quantity", width: "50px" },
                        { field: "unit_price", title: "Price", width: "50px" },
                        { field: "amount", title: "Amount", width: "50px" },
                        { field: "nw_kg_ctn", title: "NW KG/CTN", width: "50px" },
                        { field: "gw_kg_ctn", title: "GW KG/CTN", width: "50px" },
                        { field: "measurement", title: "Measurement", width: "50px" },
                        { command: [{ name: "edit",text: { edit: "Edit",   update: "Save", cancel: "Cancel changes"  }}, {name: "destroy" } ], title: "&nbsp;", width: "80px" }
                    ],
                    editable: "inline"
                });

                function adjustDropDownWidth(e) {
                    var listContainer = e.sender.list.closest(".k-list-container");
                    listContainer.width(listContainer.width() + kendo.support.scrollbar());
                }

                //template for product comboBox
                function productDropDownEditor(container, options) {
                    jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                        .appendTo(container)

                        .kendoComboBox({
                            filter: "startswith",
                            autoBind: false,
                            placeholder: "-Select-",
                            dataSource: {
                                transport: {
                                    read: {
                                        serverFiltering: true,
                                        url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                        type: "GET"
                                    }
                                }

                            },
                            dataBound: adjustDropDownWidth,
                            change: function (e) {
                                var dataItem = this.dataItem(e.item);

                                console.log(dataItem.product_name);
                                var grid = $("#poDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_id = dataItem.product_id,
                                gridData[sel_idx].product_name = dataItem.product_name;
                                gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                gridData[sel_idx].product_category_name = dataItem.product_category_name;
                                gridData[sel_idx].brand_id = dataItem.brand_id;
                                gridData[sel_idx].brand_name = dataItem.brand_name;
                                gridData[sel_idx].unit_id = dataItem.unit_id;
                                gridData[sel_idx].unit_name = dataItem.unit_name;

                            }
                        });
                }
            }
        });
        //productList Grid---------------------
        $("#shipping_method").kendoComboBox();

        $("#ci_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "yyyy/MM/dd"
        });

        $("#issue_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "yyyy/MM/dd"
        });

        //PI list
        $("#purchase_order_master_id").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select PI ---",
            dataTextField: "pi_number",
            dataValueField: "purchase_order_master_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllApprovedPurchaseOrdersPiNo", "PurchaseOrder")"
                    }
                }
            }

        });

        //supplier list
        $("#supplier_id").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Supplier ---",
            dataTextField: "supplier_name",
            dataValueField: "supplier_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllInternationalSuppliers", "Supplier")"
                    }
                }
            }

        });

        $("#btnSaveUser").click(function () {
            Loading(true);

            var supplier_id = $('#supplier_id').val();
            var purchase_order_master_id = $('#purchase_order_master_id').val();
            var ci_no = $('#ci_no').val();
            var ref_no = $('#ref_no').val();
            var ci_date = $('#ci_date').val();
            var payment_term = $('#payment_term').val();
            var dc_no = $('#dc_no').val();
            var issue_date = $('#issue_date').val();


            var poMasterData = {
                ci_pl_master_id :'@ViewBag.ciPlMasterId',
                supplier_id: supplier_id,
                purchase_order_master_id:purchase_order_master_id,
                ci_no:ci_no,
                ref_no: ref_no,
                ci_date: ci_date,
                payment_term:payment_term,
                dc_no: dc_no,
                issue_date: issue_date,
                created_by: userId,
                updated_by: userId
            };

            var poDetailsList = [];
            var poDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < poDetailsList.length; i++) {
                var poDetails = {
                    ci_pl_master_id :'@ViewBag.ciPlMasterId',
                    ci_pl_details_id: poDetailsList[i].ci_pl_details_id,
                    product_id: poDetailsList[i].product_id,
                    unit_id: poDetailsList[i].unit_id,
                    unit_price: poDetailsList[i].unit_price,
                    quantity: poDetailsList[i].quantity,
                    amount: poDetailsList[i].amount,
                    brand_id: poDetailsList[i].brand_id,
                    color_id: poDetailsList[i].color_id,
                    nw_kg_ctn: poDetailsList[i].nw_kg_ctn,
                    gw_kg_ctn: poDetailsList[i].gw_kg_ctn,
                    measurement: poDetailsList[i].measurement

                };
                poDetailsList.push(poDetails);
            }

            var CiPlModel = {
                CiPlMasterData: poMasterData,
                CiPlDetailsList: poDetailsGrid
            };

            $.ajax({
                type: "PUT",
                url: "@UrlConfig.Action("Put", "CiPl")",
                data: JSON.stringify(CiPlModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {

                        swal("Success", data.msg, "success");
                        return false;
                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });

        });

    });


</script>
