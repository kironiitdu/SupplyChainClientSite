@{
    ViewBag.Title = "Approve";
    var userId = "";
    var partyTypeId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
        partyTypeId = Session["party_type_id"].ToString();
    }


}

<script type="text/javascript">
    var userId = @userId;
    var partyTypeId = @partyTypeId;


    $(document).ready(function () {

        var _rebateList=[];
        var _giftList;


        function lineBreaker (str, isXhtml) {
            var breakTag = (isXhtml || typeof isXhtml === 'undefined') ? '<br />' : '<br>';
            return (str + '').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, '$1'+ breakTag +'$2');
        }

        Loading(true);
        $.ajax({
            type: "GET",
            url: "@UrlConfig.Action("GetAvailablePromotions", "PromotionActivity")",
            dataType: "json",
            success: function (data) {
                Loading(false);
                console.log(data);

                var listData = "";

                $.each(data, function (key, obj) {
                    listData += '<div class="row">';
                    listData += '<div class="panel panel-info">';
                    listData += '<div class="panel-heading">'+obj.titel+'</div>';
                    listData += '<div class="panel-body">';
                    listData += '<p>'+lineBreaker(obj.promotion_description)+'</p>';
                    listData += '</div>';
                    listData += '</div>';
                    listData += '</div>';
                });

                $("#available_promotions").append(listData);

                $("#available_promotions").hide();
                $("#available_promotions").slideDown(800);
            }

        });

        function yourfunction() {

            $("#available_promotions").empty();

            function lineBreaker (str, isXhtml) {
                var breakTag = (isXhtml || typeof isXhtml === 'undefined') ? '<br />' : '<br>';
                return (str + '').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, '$1'+ breakTag +'$2');
            }

            Loading(true);
            $.ajax({
                type: "GET",
                url: "@UrlConfig.Action("GetAvailablePromotions", "PromotionActivity")",
                dataType: "json",
                success: function (data) {
                    Loading(false);
                    console.log(data);

                    var listData = "";

                    $.each(data, function (key, obj) {
                        listData += '<div class="row">';
                        listData += '<div class="panel panel-info">';
                        listData += '<div class="panel-heading">'+obj.titel+'</div>';
                        listData += '<div class="panel-body">';
                        listData += '<p>'+lineBreaker(obj.promotion_description)+'</p>';
                        listData += '</div>';
                        listData += '</div>';
                        listData += '</div>';
                    });

                    $("#available_promotions").append(listData);

                    $("#available_promotions").hide();
                    $("#available_promotions").slideUp(800);
                    $("#available_promotions").slideDown(800);
                }

            });
        }

        window.setInterval(yourfunction, 10000);
    });
</script>

<div class="col-md-12 widget-body" id="context">
    <div class="row">
        <div class="col-md-9">
            <div class="row">
                <div class="panel panel-success">
                    <div class="panel-heading">Requisition Master</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="requisition_code">Requistion No</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="requisition_code" name="requisition_code" class="k-textbox" disabled />
                                    <input type="hidden" id="party_id" name="party_id" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="requisition_date">Requistion Date</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="requisition_date" name="requisition_date" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="warehouse_from">From Warehouse</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="warehouse_from" name="warehouse_from" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="expected_receiving_date">Expected Receiving Date</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="expected_receiving_date" name="expected_receiving_date" />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="payment_method_id">Payment Method</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="payment_method_id" name="payment_method_id" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">
                                    <label for="amount">Amount</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="amount" name="amount" class="k-textbox" disabled />
                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <label for="remarks">Remarks</label>
                                </div>
                                <div class="col-md-3">
                                    <input id="remarks" name="remarks" class="k-textbox" />
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-2">

                                </div>
                                <div class="col-md-3">

                                </div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="panel panel-success">
                    <div class="panel-heading">Product List</div>
                    <div class="panel-body">
                        <div id="RequisitionDetailsGrid"></div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6" id="divRebate">
                    <div class="panel panel-success">
                        <div class="panel-heading">Rebate</div>
                        <div class="panel-body">
                            <table class="table table-hover table-bordered" id="tblRebate">
                                <tr>
                                    <th>Rebate for</th>
                                    <th>Qty</th>
                                    <th>Amount</th>
                                    <th>Rebate</th>
                                    <th>Type</th>
                                    <th>Rebate Amount</th>
                                </tr>
                                <tr>
                                    @*<td>Y3C</td>
                                        <td>15</td>
                                        <td>20000</td>
                                        <td>3</td>
                                        <td>%</td>
                                        <td>400</td>*@
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="col-md-6" id="divGift">
                    <div class="panel panel-success">
                        <div class="panel-heading">Gift</div>
                        <div class="panel-body">
                            <table class="table table-hover table-bordered" id="tblGift">
                                <tr>
                                    <th>Gift for</th>
                                    <th>Qty</th>
                                    <th>Gift</th>
                                    <th>Gift Qty</th>
                                </tr>
                                <tr>
                                    @*<td>Y3C</td>
                                        <td>25</td>
                                        <td>Y3C</td>
                                        <td>1</td>*@
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="panel panel-success">
                <div class="panel-heading">Available Promotions</div>
                <div class="panel-body" id="available_promotions">

                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="group-box">
            <div class="row">
                <div class="col-md-12">
                    @*<input type="button" class="k-button" id="btnReCalculate"  name="btnReCalculate" value="Re-Calculate" />*@
                    <input type="button" class="k-button" id="btnSaveInvoice" name="btnSaveInvoice" value="Approve Requisition" />
                </div>
            </div>
        </div>
    </div>
</div>
<p>&nbsp;</p>
<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">

    //date time picker
    $(document).ready(function () {
        $('#context').addClass('animated rollIn');
        // load dropdowns
        $("#warehouse_from").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllWarehouses", "Warehouse")"
                    }
                }
            }

        });






        function myFunction() {
            var sampleData = [];
            //get master and details information----------------
            var requisition_master_id = '@ViewBag.requisition_master_id';
            Loading(true);
            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("GetRequisitionById", "Requisition")",
                data: {
                    requisition_master_id: requisition_master_id
                },
                dataType: "json",
                success: function (data) {
                    Loading(false);
                    $("#requisition_code").val(data.RequisitionMasterData.requisition_code);
                    $("#requisition_date").val(data.RequisitionMasterData.requisition_date);
                    $('#warehouse_from').data("kendoComboBox").value(data.RequisitionMasterData.warehouse_from);
                    $("#expected_receiving_date").val(data.RequisitionMasterData.expected_receiving_date);
                    $("#payment_method_id").data("kendoComboBox").value(data.RequisitionMasterData.payment_method_id);
                    $("#party_id").val(data.RequisitionMasterData.party_id);//add for invoice
                    $("#amount").val(data.RequisitionMasterData.amount);
                    $("#dc_or_check_no").val(data.RequisitionMasterData.dc_or_check_no);
                    $("#remarks").val(data.RequisitionMasterData.remarks);
                    
                    for (var i = 0; i < data.RequisitionDetailsList.length; i++) {
                        var requisitionDetails = {
                            requisition_details_id: data.RequisitionDetailsList[i].requisition_details_id,
                            product_id: data.RequisitionDetailsList[i].product_id,
                            product_name: data.RequisitionDetailsList[i].product_name,
                            requisition_master_id:data.RequisitionDetailsList[i].requisition_master_id,
                            color_id: data.RequisitionDetailsList[i].color_id,
                            color_name: data.RequisitionDetailsList[i].color_name,

                            brand_id: data.RequisitionDetailsList[i].brand_id,
                            brand_name: data.RequisitionDetailsList[i].brand_name,
                            product_category_id: data.RequisitionDetailsList[i].product_category_id,
                            product_category_name: data.RequisitionDetailsList[i].product_category_name,

                            unit_id: data.RequisitionDetailsList[i].unit_id,
                            unit_name: data.RequisitionDetailsList[i].unit_name,
                            price: data.RequisitionDetailsList[i]. price,
                            quantity: data.RequisitionDetailsList[i].quantity,
                            amount: data.RequisitionDetailsList[i].amount,
                            line_total: data.RequisitionDetailsList[i].line_total,


                        };
                        sampleData.push(requisitionDetails);
                    }
                    console.log(sampleData);

                    //productList Grid---------------------

                    // custom logic start

                    var sampleDataNextID = sampleData.length + 1;

                    function getIndexById(id) {
                        var idx,
                            l = sampleData.length;

                        for (var j = 0; j < l; j++) {
                            if (sampleData[j].requisition_details_id == id) {
                                return j;
                            }
                        }
                        return null;
                    }

                    // custom logic end

                    var dataSource = new kendo.data.DataSource({
                        transport: {
                            read: function (e) {
                                // on success
                                e.success(sampleData);
                                //console.log(sampleData);
                            },
                            create: function (e) {
                                // assign an ID to the new item
                                e.data.requisition_details_id = sampleDataNextID++;
                                // save data item to the original datasource

                                var gridData = sampleData;
                                var totalNumber = gridData.length;
                                var count = 0;

                                for (var i = 0; i < totalNumber; i++) {
                                    var productId = gridData[i].product_id;
                                    var colorId = gridData[i].color_id;
                                    if (e.data.product_id === productId && e.data.color_id === colorId) {
                                        count++;
                                    }
                                }
                                if (count > 0) {
                                    sweetAlert("Sorry...", "Selected Product is Duplicate !!!", "warning");
                                    e.preventDefault();
                                    return false;
                                } else {
                                    sampleData.push(e.data);
                                    e.success(e.data);
                                    getRebateAndGiftInfo();
                                    console.log(sampleData);
                                    return true;
                                }

                            },
                            update: function (e) {
                                // locate item in original datasource and update it
                                sampleData[getIndexById(e.data.requisition_details_id)] = e.data;
                                getRebateAndGiftInfo();
                                e.success();

                            },
                            destroy: function (e) {
                                // locate item in original datasource and remove it
                                var requisitionDetailsId=e.data.requisition_details_id;

                                sampleData.splice(getIndexById(e.data.requisition_details_id), 1);

                                $.ajax({
                                    type: "GET",
                                    url: "@UrlConfig.Action("DeleteRequisitionDetails", "Requisition")",
                                    data: {
                                        requisition_details_id: requisitionDetailsId
                                    },
                                    dataType: "json",
                                    contentType: "application/json",
                                    success: function (data) {
                                        Loading(false);
                                        console.log(data);
                                        if (data.output === "success") {


                                            swal("Success", data.msg, "success");
                                            return false;
                                        } else {
                                            swal("Exception", data.msg, "error");
                                            return false;
                                        }
                                    }
                                });

                                // on success
                                e.success();
                                var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                var gridData = entityGrid.dataSource.data();
                                var totalNumber = gridData.length;

                                var amount = 0;

                                for (var i = 0; i < totalNumber; i++) {

                                    amount += +parseFloat(gridData[i].line_total).toFixed(2);

                                }
                                $("#amount").val(amount);
                            }
                        },
                        error: function (e) {
                            // handle data operation error
                            alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                        },
                        pageSize: 10,
                        batch: false,
                        schema: {
                            model: {
                                id: "requisition_details_id",
                                fields: {
                                    requisition_details_id: { editable: false, nullable: true },
                                    requisition_master_id:{ field: "requisition_master_id", type: "integer" },
                                    product_id: { field: "product_id", type: "integer" },
                                    product_name: { type: "string" },
                                    product_category_id: { field: "product_category_id", type: "integer" },
                                    product_category_name: { type: "string" , editable: false},
                                    brand_id: { field: "brand_id", type: "integer" },
                                    brand_name: { type: "string", editable: false },
                                    unit_id: { field: "unit_id", type: "integer" },
                                    unit_name: { type: "string", editable: false },
                                    color_id: { field: "color_id", type: "integer" },
                                    color_name: { type: "string" },
                                    quantity: { type: "number" },
                                    price: { type: "number" },
                                    amount: { type: "string", editable: true },
                                    line_total: { type: "string", editable: true }

                                }
                            }
                        }
                    });



                    $("#RequisitionDetailsGrid").kendoGrid({
                        dataSource: dataSource,
                        pageable: true,
                        toolbar: ["create"],
                        selectable: true,
                        save: function (data) {

                            var tempAmount = +data.model.quantity * +data.model.price;
                            data.model.set("line_total", tempAmount);


                            var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                            var gridData = entityGrid.dataSource.data();
                            var totalNumber = gridData.length;

                            var amount = 0;

                            for (var i = 0; i < totalNumber; i++) {
                                amount += +parseFloat(gridData[i].line_total).toFixed(2);
                            }

                            $("#amount").val(amount);

                        },
                        edit: function (e) {

                            $('input[name="line_total"]').attr('readonly', 'readonly');

                        },
                        cancel: function(data) {

                            var tempAmount = +data.model.quantity * +data.model.price;
                            data.model.set("lineTotal", tempAmount);


                            var gridData = sampleData;
                            var totalNumber = gridData.length;


                            console.log(sampleData);

                        },
                        columns: [
                            { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                            { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                            { field: "quantity", title: "Quantity", width: "50px" },
                            { field: "price", title: "Price", width: "50px" },
                            { field: "line_total", title: "Total Amount", width: "70px" },
                            { command: ["edit", "destroy"], title: "&nbsp;", width: "110px" }
                        ],
                        editable: "inline"
                    });


                    //template for product comboBox
                    function productDropDownEditor(container, options) {
                        jQuery('<input required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)

                            .kendoComboBox({
                                autoBind: true,
                                placeholder: "-Select-",
                                dataSource: {
                                    transport: {
                                        read: {
                                            url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                            type: "GET"
                                        }
                                    }

                                },

                                change: function (e) {
                                    var dataItem = this.dataItem(e.item);

                                    console.log(dataItem.product_name);
                                    var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                    var sel = grid.select();
                                    var sel_idx = sel.index();
                                    var gridData = grid.dataSource.data();
                                    gridData[sel_idx].product_id = dataItem.product_id,
                                    gridData[sel_idx].product_name = dataItem.product_name;
                                    gridData[sel_idx].color_id = dataItem.color_id,
                                    gridData[sel_idx].color_name = dataItem.color_name;
                                    gridData[sel_idx].unit_id = dataItem.unit_id;
                                    gridData[sel_idx].unit_name = dataItem.unit_name;
                                    gridData[sel_idx].brand_id = dataItem.brand_id;
                                    gridData[sel_idx].brand_name = dataItem.brand_name;
                                    gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                    gridData[sel_idx].product_category_name = dataItem.product_category_name;

                                    if (partyTypeId==2) {
                                        gridData[sel_idx].price = dataItem.md_price;
                                    }
                                    if (partyTypeId==3) {
                                        gridData[sel_idx].price = dataItem.bs_price;
                                    }

                                }
                            });
                    }


                    //template for color comboBox
                    function colorDropDownEditor(container, options) {
                        jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)

                            .kendoComboBox({
                                autoBind: true,
                                placeholder: "-Select-",
                                dataSource: {
                                    transport: {
                                        read: {
                                            url: "@UrlConfig.Action("GetAllColors", "Color")",
                                            type: "GET"
                                        }
                                    }

                                },

                                change: function (e) {
                                    var dataItem = this.dataItem(e.item);

                                    console.log(dataItem.product_name);
                                    var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                    var sel = grid.select();
                                    var sel_idx = sel.index();
                                    var gridData = grid.dataSource.data();
                                    gridData[sel_idx].color_id = dataItem.color_id,
                                    gridData[sel_idx].color_name = dataItem.color_name;


                                }
                            });
                    }

                    //productList Grid---------------------
                    getRebateAndGiftInfo();

                }
            });
        }

        // maruf: 04.09.2016
        function getRebateAndGiftInfo() {
            var is_active_promo = false;
            var requisitionDetailsList = [];
            var requisitionDetailsGrid = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < requisitionDetailsGrid.length; i++) {
                var requisitionDetails = {
                    requisition_master_id: '@ViewBag.requisition_master_id',
                    requisition_details_id: requisitionDetailsGrid[i].requisition_details_id,
                    product_id: requisitionDetailsGrid[i].product_id,
                    product_name: requisitionDetailsGrid[i].product_name,
                    unit_id: requisitionDetailsGrid[i].unit_id,
                    brand_id: requisitionDetailsGrid[i].brand_id,
                    product_category_id: requisitionDetailsGrid[i].product_category_id,
                    price: requisitionDetailsGrid[i].price,
                    quantity: requisitionDetailsGrid[i].quantity,
                    color_id: requisitionDetailsGrid[i].color_id,
                    line_total: requisitionDetailsGrid[i].line_total
                };
                requisitionDetailsList.push(requisitionDetails);
            }
            Loading(true);

            var getRebateAndGiftInfoModel = {
                RequisitionDetailsList: requisitionDetailsList,
                IsActivePromo: is_active_promo
            };



            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("GetRebateAndGiftInfo", "Requisition")",
                data: JSON.stringify(getRebateAndGiftInfoModel),
                async:true,
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data.rebateList);
                    console.log(data.giftList);
                    _rebateList = data.rebateList;
                    _giftList = data.giftList;
                    $('#tblRebate tr').has('td').remove();
                    $('#tblGift tr').has('td').remove();

                    //display for rebate table
                    $.each(data.rebateList, function(value, obj) {
                        var rebateData = "";
                        rebateData += "<tr id='"+obj.rebate_for+"'>";
                        rebateData += "<td>"+obj.rebate_for+"</td>";
                        rebateData += "<td>"+obj.quantity+"</td>";
                        rebateData += "<td>"+obj.amount+"</td>";
                        rebateData += "<td>"+obj.rebate+"</td>";
                        rebateData += "<td>"+obj.rebate_type+"</td>";
                        rebateData += "<td>"+obj.rebate_amount+"</td>";
                        rebateData += "</tr>";

                        $("#tblRebate tr:last").after(rebateData);


                    });

                    //display for gift table
                    $.each(data.giftList, function(value, obj) {
                        var giftData = "";

                        giftData += "<tr id='"+obj.gift_for.split(' ').join('_')+"'>";
                        giftData += "<td>" + obj.gift_for + "</td>";
                        giftData += "<td>" + obj.gift_quantity_for + "</td>";
                        giftData += "<td>" + obj.gift_for + "</td>";
                        giftData += "<td>" + obj.gift_quantity + "</td>";
                        giftData += "</tr>";

                        $("#tblGift tr:last").after(giftData);


                    });
                }
            });
        }

        myFunction();
        //get master and details information----------------

        $("#requisition_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            }
        });
        $("#expected_receiving_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            }
        });

        ///payment_method
        $("#payment_method_id").kendoComboBox({
            autoBind: true,
            placeholder: "--- Select Payment Method ---",
            dataTextField: "payment_method_name",
            dataValueField: "payment_method_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllPaymentMethod", "PaymentMethod")"
                    }
                }
            }

        });


        //$("#btnReCalculate").click(function() {
        //    getRebateAndGiftInfo();
        //});
        $("#btnSaveInvoice").click(function () {
            Loading(true);

            //var requisition_code = $('#invoice_no').val();
            //var requisition_date = $('#invoice_date').val();
            //var warehouse_from = $('#warehouse_from').val();
            //var expected_receiving_date = $('#expected_receiving_date').val();
            var party_id=$('#party_id').val();
            var amount=$('#amount').val();//item total(invoice)
            var remarks = $('#remarks').val();

            var RequisitionMasterData = {
                requisition_master_id :'@ViewBag.requisition_master_id',
                //requisition_code: requisition_code,
                //requisition_date: requisition_date,
                //warehouse_from: warehouse_from,
                //expected_receiving_date: expected_receiving_date,
                //payment_method_id: payment_method_id,

                party_id:party_id,
                item_total: amount,
                remarks: remarks,
                created_by: userId,
                updated_by: userId
            };

            var ProductDetailsList = [];
            var ProductDetailsGrid = $("#RequisitionDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < ProductDetailsGrid.length; i++) {
                var ProductDetails = {

                    //requisition_master_id: '@ViewBag.requisition_master_id',
                    product_category_id: ProductDetailsGrid[i].product_category_id,
                    product_id: ProductDetailsGrid[i].product_id,
                    quantity: ProductDetailsGrid[i].quantity,
                    price: ProductDetailsGrid[i].price,
                    unit_id: ProductDetailsGrid[i].unit_id,
                    color_id: ProductDetailsGrid[i].color_id,
                    line_total: ProductDetailsGrid[i].line_total,
                    brand_id: ProductDetailsGrid[i].brand_id,
                    //is gif
                };
                ProductDetailsList.push(ProductDetails);
            }

            //console.log("Global Objects: ");
            //console.log(_rebateList);
            //console.log(_giftList);
            //return false;
           
            var InvoiceModel = {
                InvoiceMasterData: RequisitionMasterData,
                InvoiceDetailsList: ProductDetailsList,
                RequisitionRebate:_rebateList
            };

            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("Post", "Invoice")",
                data: JSON.stringify(InvoiceModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {

                        myFunction();
                        swal("Success", data.msg, "success");
                        return false;
                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });

        });

    });


</script>
