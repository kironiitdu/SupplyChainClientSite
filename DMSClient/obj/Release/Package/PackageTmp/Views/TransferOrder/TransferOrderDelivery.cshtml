@{
    ViewBag.Title = "Transfer Order Delivery";
    var userId = "";
    if (Session["user_au_id"] != null)
    {
        userId = Session["user_au_id"].ToString();
    }

}
<script type="text/javascript">
    var userId = @userId;
</script>

<div id="context">
    <div class="panel panel-success">
        <div class="panel-heading">Transfer Order Master</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="order_no">Order No</label>
                    </div>
                    <div class="col-md-3">
                        <input id="order_no" name="order_no" class="k-textbox" placeholder="Auto Generated" disabled />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="order_date">Order Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="order_date" name="order_date" disabled />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="from_warehouse_id">From Warehouse&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="from_warehouse_id" name="from_warehouse_id" disabled />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="to_warehouse_id">To Warehouse&nbsp;<i class="fa fa-asterisk fieldRequired"></i></label>
                    </div>
                    <div class="col-md-3">
                        <input id="to_warehouse_id" name="to_warehouse_id" disabled />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <label for="remarks">Remarks</label>
                    </div>
                    <div class="col-md-3">
                        <input id="remarks" name="remarks" class="k-textbox" disabled />
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        <label for="expected_transfer_date">Expected Transfer Date</label>
                    </div>
                    <div class="col-md-3">
                        <input id="expected_transfer_date" name="expected_transfer_date" disabled />
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">TO Product Details</div>
        <div class="panel-body">
            <div id="poDetailsGrid"></div>
            <div class="group-box" hidden>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="status">Status</label>
                        </div>
                        <div class="col-md-3">
                            <input id="status" name="status" class="k-textbox" value="Created" disabled />
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2"> </div>
                        <div class="col-md-3"></div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading">Product List</div>
            <div class="panel-body">
                <div class="row" id="daynamicPanel">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <label for="scan_imei">Scan Imei</label>
                        </div>
                        <div class="col-md-3">
                            <input id="scan_imei" name="scan_imei" class="k-textbox" />
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <br />
                <div id="RequisitionDetailsGrid"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading">Product Information</div>
            <div class="panel-body" id="scanInformation">
            </div>
        </div>
    </div>
    <div class="group-box" id="btnDiv">
        <div class="row">
            <div class="col-md-12">
                <input type="button" class="k-button" id="btnSaveUser" name="btnSaveUser" value="Transfer" />
            </div>
        </div>
    </div>
</div>

<!--Javascript and Ajax to Submit the Form-->
<script type="text/javascript">

    //date time picker
    $(document).ready(function () {
        $("#btnDiv").hide();

        var sampleData = [];
        //get master and details information----------------
        var transfer_order_master_id = '@ViewBag.transferOrderMasterId';
        Loading(true);

        $.ajax({
            type: "POST",
            url: "@UrlConfig.Action("GetTransferOrderById", "TransferOrder")",
            data: {
                transfer_order_master_id: transfer_order_master_id
            },
            dataType: "json",
            success: function(data) {
                Loading(false);

                $("#order_no").val(data.ToMasterData.order_no);
                $('#order_date').val(kendo.toString(kendo.parseDate(data.ToMasterData.order_date, "yyyy-MM-dd"), "yyyy/MM/dd"));
                $('#from_warehouse_id').data("kendoComboBox").value(data.ToMasterData.from_warehouse_id);
                $('#to_warehouse_id').data("kendoComboBox").value(data.ToMasterData.to_warehouse_id);
                $('#expected_transfer_date').val(kendo.toString(kendo.parseDate(data.ToMasterData.expected_transfer_date, "yyyy-MM-dd"), "yyyy/MM/dd"));
                $('#remarks').val(data.ToMasterData.remarks);
                $('#status').val(data.ToMasterData.status);



                for (var i = 0; i < data.ToDetailsList.length; i++) {
                    var poDetails = {

                        transfer_order_details_id:data.ToDetailsList[i].transfer_order_details_id,
                        product_id: data.ToDetailsList[i].product_id,
                        product_name: data.ToDetailsList[i].product_name,
                        transfer_order_master_id:data.ToDetailsList[i].transfer_order_master_id,
                        unit_id: data.ToDetailsList[i].unit_id,
                        unit_name: data.ToDetailsList[i].unit_name,
                        unit_price: data.ToDetailsList[i].unit_price,
                        quantity: (data.ToDetailsList[i].quantity - data.ToDetailsList[i].transfered_quantity),
                        transfered_quantity: 0,
                        has_serial: data.ToDetailsList[i].has_serial,
                        brand_id: data.ToDetailsList[i].brand_id,
                        product_version_id:data.ToDetailsList[i].product_version_id,
                        product_version_name:data.ToDetailsList[i].product_version_name,
                        brand_name: data.ToDetailsList[i].brand_name,
                        color_id: data.ToDetailsList[i].color_id,
                        color_name: data.ToDetailsList[i].color_name,
                        line_total: data.ToDetailsList[i].line_total,
                        size_id: data.ToDetailsList[i].size_id,
                        size_name: data.ToDetailsList[i].size_name,
                        status: data.ToDetailsList[i].status,
                        last_modified_date: data.ToDetailsList[i].last_modified_date,
                        product_category_id: data.ToDetailsList[i].product_category_id

                    };
                    sampleData.push(poDetails);
                }
                console.log(sampleData);

                var sampleDataNextID = sampleData.length + 1;

                function getIndexById(id) {
                    var idx,
                        l = sampleData.length;

                    for (var j = 0; j < l; j++) {
                        if (sampleData[j].transfer_order_details_id == id) {
                            return j;
                        }
                    }
                    return null;
                }

                // custom logic end
                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: function (e) {
                            e.success(sampleData);
                        },
                        update: function (e) {
                            var mmm = parseInt(e.data.transfered_quantity);
                            var xxx = parseInt(e.data.quantity);
                            var axx= $.isNumeric(mmm);

                           

                            if (mmm > xxx) {
                                sweetAlert("Sorry...", "transfer quantity should not be greater then quantity !!!", "warning");
                                return false;
                            }
                            if (axx==false ) {
                                sweetAlert("Sorry...", "not a valid transfered quantity !!!", "warning");
                                return false;
                            }
                            if (mmm % 1 != 0) {
                                sweetAlert("Sorry...", "decimal quantity not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.transfered_quantity == 0) {
                                sweetAlert("Sorry...", "zero quantity not allowed !!!", "warning");
                                return false;
                            }
                            if (e.data.transfered_quantity == null) {
                                sweetAlert("Sorry...", "quantity is required !!!", "warning");
                                return false;
                            }
                            if (e.data.transfered_quantity < 0) {
                                sweetAlert("Sorry...", "negative quantity not allowed !!!", "warning");
                                return false;
                            }
                            else {
                                sampleData[getIndexById(e.data.transfer_order_details_id)] = e.data;
                                e.success();
                                $("#btnDiv").show();
                                return true;
                            }
                        }
                    },

                    error: function (e) {
                        alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                    },
                    pageSize: 10,
                    batch: false,
                    schema: {
                        model: {
                            id: "transfer_order_details_id",
                            fields: {
                                transfer_order_details_id: { editable: false, nullable: true },
                                product_id: { field: "product_id", type: "integer" },
                                product_name: { type: "string" },
                                product_category_id: { field: "product_category_id" },
                                product_category_name: { type: "string", editable: false },
                                brand_id: { field: "brand_id", type: "integer" },
                                brand_name: { type: "string", editable: false },
                                unit_id: { field: "unit_id", type: "integer" },
                                unit_name: { type: "string", editable: false },
                                color_id: { field: "color_id", type: "integer" },
                                color_name: { type: "string" },
                                product_version_id: { field: "product_version_id", type: "integer" },
                                product_version_name: { type: "string" },
                                last_modified_date:{ type: "string" },
                                quantity: { type: "string" },
                                has_serial: { type: "boolean" },
                                transfered_quantity: { type: "string" }
                            }
                        }
                    }
                });



                $("#poDetailsGrid").kendoGrid({
                    dataSource: dataSource,
                    pageable: true,
                    selectable: true,

                    columns: [
                        { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "100px" },
                        { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "100px" },
                        { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "100px" },
                        { field: "quantity", title: "Quantity", width: "50px" },
                        { field: "transfered_quantity", title: "Quantity To Transfer", width: "50px" },
                        { command: [{ name: "edit"}], title: "&nbsp;", width: "50px" }
                    ],
                    dataBound: function (e) {
                        var grid = $("#poDetailsGrid").data("kendoGrid");
                        var gridData = grid.dataSource.view();

                        for (var i = 0; i < gridData.length; i++) {
                            var currentUid = gridData[i].uid;
                            var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                            var editButtonApproved = $(currenRow).find(".k-grid-edit");

                            if (gridData[i].has_serial == true) {
                                editButtonApproved.hide();
                            }
                        }
                    },
                    editable: "inline"
                });

                var len = $("#poDetailsGrid").find("tbody tr").length;
                for(var j=0;j<=len ; j++)
                {
                    var model = $("#poDetailsGrid").data("kendoGrid").dataSource.at(j);
                    if (model) {
                        model.fields["product_id"].editable = false;
                        model.fields["color_id"].editable = false;
                        model.fields["product_version_id"].editable = false;
                        model.fields["quantity"].editable = false;
                    }
                }

                function productDropDownEditor(container, options) {
                    jQuery('<input id="productId" required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                        .appendTo(container)

                        .kendoComboBox({
                            autoBind: false,
                            placeholder: "-Select-",
                            dataSource: {
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                        type: "GET"
                                    }
                                }

                            },

                            change: function (e) {
                                var dataItem = this.dataItem(e.item);

                                console.log(dataItem.product_name);
                                var grid = $("#poDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_id = dataItem.product_id,
                                gridData[sel_idx].product_name = dataItem.product_name;
                                gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                gridData[sel_idx].product_category_name = dataItem.product_category_name;
                                gridData[sel_idx].brand_id = dataItem.brand_id;
                                gridData[sel_idx].brand_name = dataItem.brand_name;
                                gridData[sel_idx].unit_id = dataItem.unit_id;
                                gridData[sel_idx].unit_name = dataItem.unit_name;

                            }
                        });
                }


                //template for color comboBox
                function colorDropDownEditor(container, options) {
                    jQuery('<input data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                        .appendTo(container)
                        .kendoComboBox({
                            autoBind: false,
                            cascadeFrom: "productId",
                            placeholder: "-Select-",
                            dataSource: {
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetAllColorMappingForTransection", "ProductColorMapping")",
                                        type: "GET"
                                    }
                                }

                            },

                            change: function (e) {
                                var dataItem = this.dataItem(e.item);

                                console.log(dataItem.product_name);
                                var grid = $("#poDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].color_id = dataItem.color_id,
                                gridData[sel_idx].color_name = dataItem.color_name;
                            }
                        });
                }

                //template for product version comboBox
                function productVersionDropDownEditor(container, options) {
                    jQuery('<input data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                        .appendTo(container)

                        .kendoComboBox({
                            autoBind: false,
                            cascadeFrom: "productId",
                            placeholder: "-Select-",
                            dataSource: {
                                transport: {
                                    read: {
                                        url: "@UrlConfig.Action("GetProductwiseVersion", "ProductVersionMapping")",
                                        type: "GET"
                                    }
                                }

                            },

                            change: function (e) {
                                var dataItem = this.dataItem(e.item);

                                console.log(dataItem.product_name);
                                var grid = $("#poDetailsGrid").data("kendoGrid");
                                var sel = grid.select();
                                var sel_idx = sel.index();
                                var gridData = grid.dataSource.data();
                                gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                gridData[sel_idx].product_version_name = dataItem.product_version_name;


                            }
                        });
                }
            }
        });


        $("#order_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "yyyy/MM/dd"
        });


        $("#expected_transfer_date").kendoDatePicker({
            animation: {
                close: {
                    effects: "fadeOut zoom:out",
                    duration: 300
                },
                open: {
                    effects: "fadeIn zoom:in",
                    duration: 300
                }
            },
            format: "yyyy/MM/dd"
        });


        $("#from_warehouse_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select From Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetWarehouseForTransferOrder", "Warehouse")"
                    }
                }
            }

        });

        $("#courier_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select From Courier ---",
            dataTextField: "courier_name",
            dataValueField: "courier_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetAllCouriers", "Courier")"
                    }
                }
            }

        });

        $("#to_warehouse_id").kendoComboBox({
            autoBind: false,
            placeholder: "--- Select To Warehouse ---",
            dataTextField: "warehouse_name",
            dataValueField: "warehouse_id",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@UrlConfig.Action("GetWarehouseForTransferOrder", "Warehouse")"
                    }
                }
            }

        });

        //Meraj this for IMEI Scan and load grid------------------------

        var sampleDataForProductInfo = [];


        function checkDuplicateImei(hayStack, imei_no) {
            if (!hayStack) {
                return false;
            } else {
                for (var i = 0; i < hayStack.length; i++) {
                    if (hayStack[i].imei_no == imei_no) {
                        return true;
                    }
                }
                return false;
            }
        }

        $('#daynamicPanel :input').live('keyup', function(e) {

            if(e.keyCode === 13)
            {
                $(this).trigger("enterKey");
                var id = this.id;
                var imei_no =$('#scan_imei').val();
                var from_warehouse_id =$('#from_warehouse_id').val();
                //var party_id =partyId;

                if (from_warehouse_id == "") {
                    swal("Exception", "Please Select From Warehouse", "error");
                } else {
                    Loading(true);
                }

                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetProductInformationForDirectTransfer", "ReceiveSerialNoDetails")?imei_no="+imei_no+"&from_warehouse_id="+from_warehouse_id+"",
                    dataType: "json",
                    contentType: "application/json",
                    success: function (data) {
                        Loading(false);
                        console.log(data);
                        if (data !='') {
                            var invalidImeis = "";
                            var isAllValidImei = true;
                            for (var i = 0; i < data.length; i++) {
                                var productDetails = {
                                    sku_code: data[i][0].product_id + "_" + data[i][0].color_id+ "_" + data[i][0].product_version_id,
                                    receive_serial_no_details_id: data[i][0].receive_serial_no_details_id,
                                    product_id: data[i][0].product_id,
                                    product_name: data[i][0].product_name,
                                    color_id: data[i][0].color_id,
                                    color_name: data[i][0].color_name,
                                    product_version_id: data[i][0].product_version_id,
                                    product_version_name: data[i][0].product_version_name,
                                    imei_no: data[i][0].imei_no,
                                    imei_no2: data[i][0].imei_no2
                                };
                                var isDuplicate = checkDuplicateImei(sampleDataForProductInfo,data[i][0].imei_no);
                                if (isDuplicate) {
                                    swal("Exception", "IMEI already in list !!", "warning");
                                } else
                                {
                                    var toDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
                                    var isValidImei = false;

                                    toDetailsGrid.forEach(function(row) {

                                        if (row.product_id == data[i][0].product_id && row.color_id == data[i][0].color_id && row.product_version_id == data[i][0].product_version_id) {

                                            if (row.transfered_quantity == row.quantity) {
                                                isValidImei = true;
                                                swal("Warning","you can not transfer more then quantity limit !!", "warning");
                                            } else {

                                                row.transfered_quantity++;

                                                isValidImei = true;
                                                sampleDataForProductInfo.push(productDetails);
                                                $('#poDetailsGrid').data('kendoGrid').refresh();
                                            }
                                        }
                                    });
                                    if (!isValidImei) {
                                        isAllValidImei = false;
                                        invalidImeis += "("+productDetails.imei_no+","+productDetails.imei_no2+"),";

                                    }
                                }

                            }
                            if (!isAllValidImei) {
                                swal("Invalid IMEIs for this TO",invalidImeis, "warning");
                            }

                            // console.log(sampleDataForProductInfo);

                            //productList Grid---------------------

                            // custom logic start
                            function skuExistsThanUpdateCount(hayStack, skuCode) {
                                if (!hayStack) {
                                    return false;
                                } else {
                                    for (var i = 0; i < hayStack.length; i++) {
                                        //console.log(hayStack[i].sku_code + '==' + skuCode);
                                        if (hayStack[i].sku_code == skuCode) {
                                            hayStack[i].quantity++;
                                            //console.log("Quantity Updated");
                                            return true;
                                        }
                                    }
                                    return false;
                                }
                            }

                            var sampleDataNextID = sampleDataForProductInfo.length + 1;

                            function getIndexById(id) {
                                var idx,
                                    l = sampleDataForProductInfo.length;

                                for (var j = 0; j < l; j++) {
                                    if (sampleDataForProductInfo[j].receive_serial_no_details_id == id) {
                                        return j;
                                    }
                                }
                                return null;
                            }

                            // custom logic end
                            var abc = "";
                            var dataSource = new kendo.data.DataSource({
                                transport: {
                                    read: function (e) {
                                        // on success
                                        $('#scanInformation tbody').empty();
                                        e.success(sampleDataForProductInfo);

                                        skuCount = [];
                                        totalSku = 0;
                                        // imeiProcess = $("#imei_process").val();
                                        $.each(sampleDataForProductInfo, function(key, value) {
                                            //maruf modified: 13.10.2016
                                            //listData += '<div class="col-md-5" id="row_">';
                                            totalSku++;
                                            if (skuExistsThanUpdateCount(skuCount, value.sku_code)) {

                                            } else {
                                                var row = {
                                                    sku_code: value.sku_code,
                                                    product_id: value.product_id,
                                                    product_name: value.product_name,
                                                    color_id: value.color_id,
                                                    color_name: value.color_name,
                                                    product_version_id: value.product_version_id,
                                                    product_version_name: value.product_version_name,
                                                    quantity: 1
                                                };
                                                skuCount.push(row);
                                            }

                                        });
                                        // console.log(skuCount);

                                        $('#scanInformation').empty();
                                        for (var i = 0; i < skuCount.length; i++) {
                                            $('#scanInformation').append(skuCount[i].product_name+ '_' + skuCount[i].color_name + '_' + skuCount[i].product_version_name + ': ' + skuCount[i].quantity + ', ');
                                            $("#btnDiv").show();
                                        }


                                    },
                                    destroy: function (e) {

                                        sampleDataForProductInfo.splice(getIndexById(e.data.receive_serial_no_details_id), 1);

                                        e.success();
                                        var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                        var gridData = entityGrid.dataSource.data();
                                    }
                                },
                                error: function (e) {
                                    // handle data operation error
                                    alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                                },
                                batch: false,
                                schema: {
                                    model: {
                                        id: "receive_serial_no_details_id",
                                        fields: {
                                            receive_serial_no_details_id: { editable: false, nullable: true },
                                            product_id: { field: "product_id", type: "integer" },
                                            product_name: { type: "string" },
                                            color_id: { field: "color_id", type: "integer" },
                                            color_name: { type: "string" },
                                            product_version_id: { field: "product_version_id", type: "integer" },
                                            product_version_name: { type: "string" },
                                            imei_no: { type: "string" },
                                            imei_no2: { type: "string" }
                                        }
                                    }
                                }
                            });



                            $("#RequisitionDetailsGrid").kendoGrid({
                                dataSource: dataSource,
                                // toolbar: ["create"],
                                height: 350,
                                scrollable: true,
                                selectable: true,
                                save: function (data) {

                                    //var tempAmount = +data.model.price - +data.model.discount;
                                    //data.model.set("line_total", tempAmount);


                                    var entityGrid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                    var gridData = entityGrid.dataSource.data();
                                    var totalNumber = gridData.length;

                                },
                                columns: [
                                    { field: "product_id", title: "Product", template: "#= product_name #", editor: productDropDownEditor, width: "50px" },
                                    { field: "color_id", title: "Color", template: "#= color_name #", editor: colorDropDownEditor, width: "50px" },
                                    { field: "product_version_id", title: "Version", template: "#= product_version_name #", editor: productVersionDropDownEditor, width: "50px" },
                                    { field: "imei_no", title: "IMEI1", width: "50px" },
                                    { field: "imei_no2", title: "IMEI2", width: "50px" }
                                ],
                                editable: "inline"
                            });

                            //template for product comboBox
                            function productDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="product_name" data-value-field="product_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllProducts", "Product")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].product_id = dataItem.product_id,
                                                gridData[sel_idx].product_name = dataItem.product_name;
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                                gridData[sel_idx].color_name = dataItem.color_name;
                                            gridData[sel_idx].unit_id = dataItem.unit_id;
                                            gridData[sel_idx].unit_name = dataItem.unit_name;
                                            gridData[sel_idx].brand_id = dataItem.brand_id;
                                            gridData[sel_idx].brand_name = dataItem.brand_name;
                                            gridData[sel_idx].product_category_id = dataItem.product_category_id;
                                            gridData[sel_idx].product_category_name = dataItem.product_category_name;

                                            if (partyTypeId==1) {
                                                gridData[sel_idx].price = dataItem.rp_price;
                                            }
                                            if (partyTypeId==2) {
                                                gridData[sel_idx].price = dataItem.md_price;
                                            }
                                            if (partyTypeId==3) {
                                                gridData[sel_idx].price = dataItem.bs_price;
                                            }

                                        }
                                    });
                            }


                            //template for color comboBox
                            function colorDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="color_name" data-value-field="color_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: true,
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetAllColors", "Color")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#RequisitionDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].color_id = dataItem.color_id,
                                                gridData[sel_idx].color_name = dataItem.color_name;


                                        }
                                    });
                            }


                            //template for product version comboBox
                            function productVersionDropDownEditor(container, options) {
                                jQuery('<input required data-text-field="product_version_name" data-value-field="product_version_id" data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)

                                    .kendoComboBox({
                                        autoBind: false,
                                        cascadeFrom: "productId",
                                        placeholder: "-Select-",
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@UrlConfig.Action("GetProductwiseVersion", "ProductVersionMapping")",
                                                    type: "GET"
                                                }
                                            }

                                        },

                                        change: function (e) {
                                            var dataItem = this.dataItem(e.item);

                                            console.log(dataItem.product_name);
                                            var grid = $("#poDetailsGrid").data("kendoGrid");
                                            var sel = grid.select();
                                            var sel_idx = sel.index();
                                            var gridData = grid.dataSource.data();
                                            gridData[sel_idx].product_version_id = dataItem.product_version_id,
                                            gridData[sel_idx].product_version_name = dataItem.product_version_name;


                                        }
                                    });
                            }
                            //productList Grid---------------------



                            //return false;
                        } else {
                            swal("Exception", "Product Not Available !!", "error");
                            return false;
                        }
                    }
                });

                $("#" + id + "").val("");
            }
        });
        //--------------------------------------------------------------


        $("#btnSaveUser").click(function () {
            Loading(true);


            var from_warehouse_id = $('#from_warehouse_id').val();
            var to_warehouse_id = $('#to_warehouse_id').val();
            var courier_id = $('#courier_id').val();
            var courier_slip_no = $('#courier_slip_no').val();
            var remarks = $('#remarks').val();

            var toDeliveryMasterData = {
                transfer_order_master_id :'@ViewBag.transferOrderMasterId',
                from_warehouse_id: from_warehouse_id,
                to_warehouse_id: to_warehouse_id,
                remarks: remarks,
                courier_id: courier_id,
                courier_slip_no: courier_slip_no,
                created_by: userId,
                updated_by: userId
            };

            var toDetailsList = [];
            var toDetailsGrid = $("#poDetailsGrid").data("kendoGrid").dataSource.data();
            for (var i = 0; i < toDetailsGrid.length; i++) {
                var poDetails = {
                    transfer_order_master_id: '@ViewBag.transferOrderMasterId',
                    transfer_order_details_id: toDetailsGrid[i].transfer_order_details_id,
                    product_id: toDetailsGrid[i].product_id,
                    unit_id: toDetailsGrid[i].unit_id,
                    to_quantity: toDetailsGrid[i].quantity,
                    delivered_quantity: toDetailsGrid[i].transfered_quantity,
                    brand_id: toDetailsGrid[i].brand_id,
                    color_id: toDetailsGrid[i].color_id,
                    product_version_id: toDetailsGrid[i].product_version_id,
                    status: toDetailsGrid[i].status,
                    last_modified_date: toDetailsGrid[i].last_modified_date,
                    product_category_id: toDetailsGrid[i].product_category_id

                };
                toDetailsList.push(poDetails);
            }

            var toDeliveryModel = {
                ToDeliveryMasterData: toDeliveryMasterData,
                ToDeliveryDetailsList: toDetailsList,
                ReceiveSerialNoDetails: sampleDataForProductInfo
            };

            $.ajax({
                type: "POST",
                url: "@UrlConfig.Action("Post", "ToDelivery")",
                data: JSON.stringify(toDeliveryModel),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    Loading(false);
                    console.log(data);
                    if (data.output === "success") {
                        swal("Success", data.msg, "success");

                        setTimeout(function () {
                            window.location.href = '/TransferOrder/DeliverableTransferOrder';
                        }, 1000);

                        return false;

                    } else {
                        swal("Exception", data.msg, "error");
                        return false;
                    }
                }
            });

        });

    });


</script>
